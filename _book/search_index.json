{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["cool.","gitbook链接：gitbook","project,","star","★","个人主页【阿飞算法】","关注微信公众号，进群","简介"],"docs/leetcode/classify/basic_skill.html":["(deque.size()","(int","(length","+","//","//双端队列(两端都可进出)","//堆栈","//普通队列(一端进另一端出):","//获取栈首元素后，元素不会出栈","//获取栈首元素后，元素将会出栈","0)","0;","1","1)","1.搜索值是数组元素，从0开始计数，得搜索值的索引值","1.该搜索键在范围内，且是数组元素，由0开始计数，得搜索值的索引值","11,","13};","1或“","2","2,","2.搜索值不是数组元素，且小于数组内元素，索引值为","2.该搜索键不在范围内，且小于范围（数组）内元素，返回–(fromindex","3","3.搜索值不是数组元素，且在数组范围内，从1开始计数，得“","3.该搜索键在范围内，但不是数组元素，由1开始计数，得“","3]","4","4.搜索值不是数组元素，且大于数组内元素，索引值为","4.该搜索键不在范围内，且大于范围（数组）内元素，返回","5","5,","6","7","7,","9,","=",">","@test","[1,","[]","[c,","a,","a:","a]","arr","arraydequ","arrays.binarysearch","arrays.sort(arr);","a：要搜索的数组","b","b,","binarysearch(object[]","c","demo示例","dequ","deque.offer(1);","deque.offer(2);","deque.offer(3);","deque.peek();","deque.push(\"a\");","deque.push(\"b\");","deque.push(\"c\");","dequetest()","dequetest1()","deque接口扩展(继承)了","deque是一个线性collection，支持在两端插入和移除元素。名称","deque有三种使用形式：","deque的主要使用方式","deque的实现：","end","false，具体取决于操作）。插入操作的后一种形式是专为使用有容量限制的","fifo（先进先出）行为。将元素添加到双端队列的末尾，从双端队列的开头移除元素。从","fromindex,","fromindex：指定范围的开始处索引（包含）","int","int[]","int[]{3,","integ","key)","key：要搜索的值","lifo（后进先出）堆栈。应优先使用此接口而不是遗留","linkedblockingdequ","linkedlist","linkedlist()","linkedlist();","linkedlist()或dequ","linkedlist<>();","new","null","object","privat","public","queue","queue（双端队列）”的缩写，通常读为“deck”。大多数","stack","static","str","string","system.out.println(deque);","system.out.println(deque.pop());","system.out.println(in);","system.out.println(str);","testarraysbinarysearch()","testarraysbinarysearchindex()","toindex,","toindex：指定范围的结束处索引（不包含）","void","{","}","–","–(toindex","”（插入点）。","”（插入点）。插入点是索引键将要插入数组的那一点，即第一个大于该键的元素的索引。","一般场景","下面是12种方法：","举例","双端队列也可用作","基础","基础与技巧","大小可变的数组双端队列，不允许","大小可变的链表双端队列，允许元素为","如果key在数组中，则返回搜索值的索引；否则返回","如果要搜索的元素key在指定的范围内，则返回搜索值的索引；否则返回","如果队列为空时，获取操作将会阻塞，知道有元素添加","实现对于它们能够包含的元素数没有固定限制，但此接口既支持有容量限制的双端队列，也支持没有固定大小限制的双端队列。","实现设计的；在大多数实现中，插入操作不能失败。","并发场景","或","接口。在将双端队列用作队列时，将得到","接口继承的方法完全等效于","插入点索引值”","数字【0】：","数字【10】：","数字【11】：","数字【11】：4","数字【12】：","数字【13】：","数字【13】：5","数字【14】：","数字【15】：","数字【16】：","数字【1】：","数字【2】：","数字【3】：","数字【3】：0","数字【4】：","数字【5】：1","数字【6】：","数字【7】：2","数字【8】：","数字【9】：3","方法","是“doubl","此接口定义在双端队列两端访问元素的方法。提供插入、移除和检查元素的方法。每种方法都存在两种形式：一种形式在操作失败时抛出异常，另一种形式返回一个特殊值（null","类。在将双端队列用作堆栈时，元素被推入双端队列的开头并从双端队列开头弹出。堆栈方法完全等效于","要搜索的数组","输出","这里涉及到搜索值的几种情况："],"docs/leetcode/classify/data_structure.html":["!=","!=null","!=null)","!parent.containskey(q))","!stk.isempty())","\"","\"\";//当前节点为空，返回\"\"","\"\";//当前节点没有左右孩子节点，即叶子节点，返回这个值","\"(\"","\"()\"","\"(leftchild)\"","\")\"","\")\";//左孩子有或者没有都加","\")\";//当前节点只有左孩子，没有右孩子，给左孩子加上\"()\",右孩子不加","\",\"","\"[]\";","\"null\";","%","&&","(!arr[idx].equals(\"null\"))","(!isvalidbst(root.left))","(!isvalidbst(root.right))","(!parent.containskey(p)","(!pq.isempty()","(!q.isempty())","(!queue.isempty())","(!set.contains(q))","(!stk.isempty())","(\"null\".equals(v))","(cnt","(cur","(cur.left","(cur.next","(cur.random","(cur.right","(cur.val","(data.equals(\"[]\"))","(fast.next","(head","(head.next","(head.random","(head.val","(int","(key","(l","(l1","(l1.val","(l2","(la","(lb","(left","(list","(ln.val","(lp.sum","(map.containskey(cur))","(n","(node","(node.left","(node.right","(nxt","(p","(pq.isempty()","(prev","(prev.next","(r","(re","(root","(root.left","(root.right","(root.val","(rp.sum","(second","(slow","(sub));","(t","(t.left","(t.right","(use","(vis.contains(node))",");","*","*/","+","+=",",fast",",rn","/","/**","//","//[5,3,6,2,4,null,7]","//head的next需要断开","//k","//k:叶子节点，","//next","//prev","//step1:率先找到p或者q，先左节点，后右节点，然后出栈的时候，选右节点优先","//step2：set收集的是p节点的所有祖先节点，包括p节点的直系父节点","//step3:找q的父节点，第一个出现在set集合中的即是lca","//一直压右子树","//一直压左子树","//一直添加该节点的左","//串联两段链表","//使用set来标识是否访问过，控制\")\"边界","//前一段链表的第一个节点","//去掉首位","//哑结点","//回到起始点","//复制一个节点","//大根堆，从栈顶到栈底","//头插的次数，偶数个的话","//如果已经相等，说明已经相遇","//如果是左子树，拿到左子树的右节点，如果是右子树，拿到右子树的左节点","//如果链表是","//存当前节点的父节点，k:当前节点，v:当前节点的父节点，root节点的父节点为nul","//左右两个子树的queue","//左节点先出栈，入的时候先入右节点，后入左节点","//当cur的后之后的cur相同跳过之后的","//当前节点与下个节点的值如果相同，则跳下个节点","//当前节点的的左节点空，右节点非空，左节点加\"()\"","//快慢指针找整个链表的中点，准备切分","//所以head.next.next","//标识节点","//第一次相遇点","//第一次进来","//第二次相遇","//翻转第二段链表，并返回第二段链表的第一个节点","//翻转链表","//而head是4，head的next是5，next.next是空","//记忆化","//遍历获取map","//需要判断链接状态，如果是相同的说明上一步没有重复的，不同的话，说明有重复的","0","0)","0);","0,","0;","0;//链表的数量","1","1)","1).split(\",\");","1);","1,","1.head的next指针指向递归的结果","1.left和right都为空，说明root的左右子树中都不包含p和q节点，返回null即可","1.从head节点开始dfs遍历整个链表","1.创建一个递归函数，该函数接受一个节点和两个值n1和n2。","1.定义一个cur节点，将其入栈","10,","100","101.","102.","103.","104.","10;","111.","124.","138.","141.","142.","143.","144.","145.","14;","15","16","160.","17","1;","1];","2","2.head的值和head.next的值是否相同，相同则返回head.next不同则返回head本身","2.left不为空，right为空，说明p和q不在右子树中（因为右子树为空了），这时，返回left，这里面有下面的两种情况：","2.创建一个和当前节点cur相同的节点mirror，并建立映射","2.如果当前节点的值小于n1和n2，则lca位于右侧子树中。调用右子树的递归函数。","2.对cur节点的左子树重复步骤1，直到左子树为空","2.遍历整个链表，处理random指针","20","206.","226.","22;","23.","236.","297.","2;","3.right不为空，left为空，说明p和q不在左子树中（因为左子树为空了），这时，返回right，这里面有下面的两种情况：","3.如果当前节点的值大于n1和n2，则lca位于左子树中。调用左子树的递归函数。","3.定义一哑结点，然后让原来的cur节点指向的mirror节点断开，恢复到原来的状态","3.弹出栈内保存到左子树的节点，开始遍历右子树，重复步骤1","3.递归调用当前节点cur的next节点和random节点，进行复制，让mirror节点的next和random指针分别指向这个复制的节点","4.left不为空，并且right不为空，说明p和q分布在root节点的左右子树的两侧，这时root为p和q的最近公共祖先节点，返回","4.如果上述两种情况均为false，则将当前节点作为lca返回","4.遍历完整个二叉树，结束","450.","4返回复制的mirror节点","589.","590.","606.","653.","7","82.","83.","86.","8;","9","92.","94.","96.","98.",":",":如何打印出路径",";","=","=11","=2","==","==null)","==p","=head.next;",">",">2",">3",">4",">5，那么此时的cur就是5",">=",">l1.val","?","[2,3,5]","[7,6,5]","[[16,9,17],[15,20,7]]","_2nd_3","_2nd_3();","_3rd","_3rd();","ancestor","ancestor)","ancestor.val);","args)","arr","arraydeque<>();","arraylist<>());","arraylist<>();","arraylist<>(map.values());","arraylist<>(subpath));","arraylist<>(t));","befor","binari","boolean","break;","bst","bst/solution/shan","cha","child","child:","chu","class","cn.com/problems/delet","cnt","cnt++;","codec","common","continue;","copyrandomlist(nod","cur","cur)","cur);","cur.left","cur.left;","cur.next","cur.next,","cur.next.next;","cur.next.random","cur.next.val)","cur.next;","cur.random));","cur.random.next;","cur.right","cur.right;","cur.val","cur.val);","cur;","curr","curr.next","curr.next;","cur节点","data","data)","data.length()","data.substring(1,","de","decod","deleteduplicates(head.next);","deleteduplicates(listnod","deletenode(root.right,","deletenode(treenod","dequ","deserialize(str","detectcycle(listnod","dfs(child);","dfs(cur.next);","dfs(cur.random);","dfs(head);","dfs(int","dfs(n);","dfs(node","dfs(queue","dfs(queue);","dfs(root);","dfs(root.left);","dfs(root.right);","dfs(treenod","dian","dp","dp[0]","dp[1]","dummi","dummy,","dummy.next","dummy.next;","dummy;","dummyaft","dummyafter;","dummybefor","dummybefore;","encod","end","end)","er","f","f)","false;","fast","fast)","fast.next.next","fast.next.next!=null){","fast.next.next;","findtarget(root.left,k)","findtarget(root.right,k);","findtarget(treenod","first","first.next","first.next;","follow","for(listnod","for(nod","getbottomk(list","getbottomk(list,","getbottomkmindepth(treenod","getintersectionnode(listnod","handler","handler.lca(root,","handler.lowestcommonancestor(root,","hascycle(listnod","hashmap","hashmap<>();","hashset<>();","head","head)","head,","head.next","head.next.next","head.next.v","head.next.val)","head.next;","head.val","head;","head;//重置cur节点","heada","heada,","headb","headb)","headb;","helper(child);","helper(left.left,","helper(left.right,","helper(nod","helper(root);","helper(root,","helper(root.left,","helper(treenod","https://leetcod","idx","idx++;","if(head","if(l!=null)","if(left","if(right!=null)","if(root","if(set.contains(k","if(slow","if(tmp.next!=null)","ii","inordertraversal(treenod","int","int[]","int[n","integer.max_value;","integer.min_value;","inverttree(root.left);","inverttree(root.right);","inverttree(treenod","issymmetric(treenod","isvalidbst(treenod","iv","jie","k","k)","k);","key)","key);","l","l)","l,","l/","l1","l1,","l1;","l2","l2)","l2);","l2.val);","l2;","l:lists){","l;","la","la.next;","la;","lb","lb)","lb.next;","lca(root.left,","lca(treenod","lca_iterate(treenod","left","left,","left.val","left;","len","level","levellist","levelorder(treenod","linkedlist<>();","linkedlist<>(arrays.aslist(data.split(\",\")));","list","list)","list,","list>","listnod","listnode(","listnode(0);","lists)","lists,","lists.length","lists.length;","lists[l];","ln","lowest","lowestcommonancestor(root.left,p,q","lowestcommonancestor(root.right,","lowestcommonancestor(treenod","lp","lp.sum","lp.sum)","lp.sum;","lq","lq.addlast(t);","lq.peeklast();","lval","m,","main(string[]","map","map.get(cur).next","map.get(cur).random","map.get(cur);","map.get(cur.next);","map.get(cur.random);","map.get(head);","map.get(head.next);","map.get(head.random);","map.put(cur,","map.put(head,","map.putifabsent(head.next,","map.putifabsent(head.random,","math.max(dfs(root.left),","math.max(dfs(root.right),","math.max(lval,","math.max(maxdepth(root.left),","math.max(res,","math.min(res,","maxdepth(root.right));","maxdepth(treenod","maxpath","maxpath)","maxpath;","maxpathsum(treenod","mergeklists(listnode[]","mergeklists(lists,","mergetwosortedlistnode(l1,","mergetwosortedlistnode(listnod","mid","mid);","mindepth(root.left));","mindepth(root.right));","mindepth(treenod","mirror","mirror);","mirror.next","mirror.next;","mirror.random","mirror;","n","n)","n1","n1,","n2","n2)","n2);","new","newhead","newhead);","newhead;","newnod","newnode;","next","next;","node","node(","node(cur.val);","node(cur.val,","node(head.next.val));","node(head.random.val));","node(head.val);","node.left","node.right","node;","null","null)","null);","null,","null;","numtrees(int","nxt","nxt.next;","nxt.val)","nxt;","o1);","o2","o2)","p","p,","p,q","p.next","p.next;","pair","pair(0,","pair(int","pair(res,","parent","parent.get(p);","parent.get(q);","parent.put(cur.left,","parent.put(cur.right,","parent.put(root,","partition(listnod","path)","path;","pointer)（二叉树的最近公共祖先节点（使用父节点））","postorder(nod","postordertraversal(treenod","pq","pq.offer(l);","pq.offer(tmp.next);","pq.peek()","pq.poll();","pq.size()","pre","pre.next;","pre;","preorder(nod","preordertraversal(treenod","prev","prev.next","prev.next;","prev.next;//每一轮的cur是prev的后一个","prev.val","prev;","priorityqueu","priorityqueue<>((l1,l2)","priorityqueue<>((o1,","privat","public","p和q都在left即左子树上，而root节点恰好指向了p或者q","p和q都在left即左子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点","p和q都在right即右子树上，而root节点恰好指向了p或者q","p和q都在right即右子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点","q","q)","q);","q,","q.addlast(t);","q.offer(cur.left);","q.offer(cur.right);","q.offer(root);","q.peeklast();","q.poll();","q.polllast().left;","q.polllast().right","q.size();","q;","queue","queue)","queue.add(root);","queue.offer(root);","queue.poll();","queue.size();","r","r)","r);","r;","random","re","refer","reorderlist(listnod","res.add(0,","res.add(cur.val);","res.add(root.val);","res1","res1.val);","res;","respath","respath.add(new","respath.clear();","result","result;","return","return;","reverse(listnod","reverse(tmp);","reversebetween(listnod","reverselist(head.next);","reverselist(listnod","right","right)","right.left);","right.right)","right.val","right;","rn","root","root)","root){","root,","root.children)","root.children){","root.left","root.left.left.left;","root.left.left.right.right;","root.left;","root.left;//5","root.right","root.right);","root.right;","root.right;//1","root.val","root.val)","root.val))","root.val;","root;","root==","rp","rp.sum","rp.sum)","rp.sum;","rq","rq.addlast(t);","rq.peeklast();","rval","rval);","sb","sb.append(\"()\");","sb.append(\"]\");","sb.append(\"null\").append(\",\");","sb.append('(').append(node.val);","sb.append(')');","sb.append(cur.val).append(\",\");","sb.deletecharat(sb.length()","sb.length()","sb.substring(1,","sb.tostring();","search","second","second.next","second.next;","second;","serialize(root.left)","serialize(root.right);","serialize(treenod","set","set.add(p);","set.add(root.val);","shu","singl","size","slow","slow.next","slow.next)","slow.next;","sou","stack","stack<>();","static","stk","stk.pop();","stk.push(cur);","stk.push(cur.left);","stk.push(cur.right);","stk.push(end);","stk.push(node);","stk.push(node.left);","stk.push(node.right);","stk.push(root);","stk.push(t);","string","string.","string[]","stringbuild","stringbuilder(\"[\");","stringbuilder();","sub","subpath","subpath);","subpath.add(root.val);","subpath.addall(lp.path);","subpath.addall(rp.path);","sum","sum,","sum;","suo","system.out.printf(\"%d\\n\",","system.out.println(\"lca","system.out.println(json.tojsonstring(respath));","t","t)","t.add(root.val);","t.addall(lp.path);","t.addall(rp.path);","t.left","t.left;","t.right","t.right;","t.val","this.path","this.sum","time","tmp","tmp.left;","tmp.right;","tmp;","tree","tree(二叉搜索树的最近公共祖先节点)","tree.","tree2str(t.left)","tree2str(t.right)","tree2str(treenod","treenod","treenode(","treenode(integer.parseint(arr[0]));","treenode(integer.parseint(arr[idx]));","treenode(integer.parseint(v));","treenodeioutils.transform(\"[20,8,22,4,12,null,null,null,null,10,14]\");","treenodeioutils.transform(\"[3,5,1,6,2,0,8,null,null,7,4]\");","treenodeioutils.transform(\"[3,5,1,6,null,null,null,7,2,null,null,null,4]\");","true;","t中n1和n2的lca是距离根最远的n1和n2的共同祖先。例如，作为确定树中节点对之间距离的过程的一部分，计算最低共同祖先可能是有用的：从n1到n2的距离可以计算为从根到n1的距离，加上从根到n2的距离，减去从根到其最低共同祖先的距离的两倍。","up","v","v:叶子节点的最小深度","vi","vis.add(node);","void","while(!pq.isempty()){","while(cur!=null){","while(fast.next!=nul","x","x)","zhong","zigzaglevelorder(treenod","{","{//prev的next指针不为空","{//当当前节点是标识节点，开始添加右括号","|","||","}","│","┌──","└──","【重温经典】二叉树的最近公共祖先","一个是lq的最小值，","一个是rq的最大值","一棵有根的树t。两个节点n1和n2之间的最低共同祖先被定义为t中具有n1和n2作为后代的最低节点（允许一个节点是其自身的后代）。","不同的二叉搜索树","两数之和","二叉树中的最大路径和","二叉树的中序遍历","二叉树的前序遍历","二叉树的后序遍历","二叉树的层序遍历","二叉树的序列化与反序列化","二叉树的最大深度","二叉树的最小深度","二叉树的最近公共祖先","二叉树的锯齿形层序遍历","依次从大到小","修改前序遍历代码中，每次先查看左节点再查看右节点的逻辑，变为先查看右节点再查看左节点","修改前序遍历代码中，节点写入结果链表的代码，将插入队尾修改为插入队首","出口条件","分隔链表","删除二叉搜索树中的节点","删除排序链表中的重复元素","前序遍历和后序遍历之间的关系：","前序遍历顺序为：根","叉树的前序遍历","叉树的后序遍历","反转链表","只要是对的人，就算开始错过了，最终还是会再次相遇在一起的","右","合并k个升序链表","后序遍历开始添加","后序遍历顺序为：左","和","基于这两个思路，我们想一下如何处理：","复制带随机指针的链表","复杂度分析：","如何求倒数第2个或者倒数第k个最小深度？","如果1：","如果2：","如果这棵二叉树是一棵二叉搜索树(bst)呢？","子树的节点","对于bst，当从上到下遍历树时，位于两个数字n1和n2之间的第一个节点是lca，即位于n1和n2（n1","对称二叉树","将链表统一地送到优先队列，然后开始一个一个弹出队列的元素开始组装","就是5","左","当head节点和head.next节点为null的时候，开始返回head节点","思路：","恢复","我们将前序遍历中节点插入结果链表尾部的逻辑，修改为将节点插入结果链表的头部","我们将遍历的顺序由从左到右修改为从右到左，配合如果1","指针处理","数据结构","方法1.一遍遍历+哈希表","方法1:bf","方法1:df","方法1:优先队列","方法1:双指针","方法1:头插法","方法1:快慢指针","方法1:快慢指针+翻转","方法1:迭代","方法1:迭代法","方法1:递归","方法1:递归+set","方法1：df","方法2:bf","方法2:df","方法2:dp","方法2:两次遍历+哈希表","方法2:双指针","方法2:堆排序","方法2:头插法","方法2:迭代","方法2:递归","方法2：迭代","方法3:双指针","方法3:记忆化递归","方法3:递归","方法4:连接","时间复杂度：o(h)，h为树的高度","最近公共祖先(lca|lowest","标识节点","树","根","根据二叉树创建字符串","测试","环形链表","相交链表","相同的值的路径，全部打印出来","空间复杂度：o(1)，间复杂度是常数级别。","空间复杂度：o(h)，如果忽略递归堆栈空间，则上述解决方案的空间复杂度是常数级别。","翻转二叉树","输入","这刚好是后序遍历的顺序","迭代实现：上述解决方案使用递归。递归解决方案需要函数调用堆栈形式的额外空间。因此，可以实现一个迭代解决方案，它不会以函数调用堆栈的形式占用空间。","逻辑","遍历root的所有的children","那么结果链表就变为了：右","那么结果链表就变为了：左","重排链表","链接来自：这里","链表","验证二叉搜索树"],"docs/leetcode/classify/heap_stack.html":["\")()())()()(()()\";","&&","'('","'(')","'(');","'['","'[');","'{')","'{');","(","(!deque.isempty()","(!stk.isempty()","(!stk.isempty())","((i","(c","(char","(f[i","(int","(left","(op","(op.equals(\"+\"))","(op.equals(\"c\"))","(op.equals(\"d\"))","(s.charat(i)","(string","(t","*","+","+=","//","//[0...3]之间的长度是4，0也就是3","//dict.containskey(c)","//output:[[1,4],[6,9],[11,14]]","//stk存的是上一个不匹配的位置（下标）","//如果找到了右边括号，且符合题意的右边括号，找到栈顶的字符看看是否不是成对的","//左边括号纷纷入栈","//注意","//遇到+号","0","0)","0,","0;","1)","1);","1)=4","1,","1;","1]","1为0位置往前推一个位置","2)","2);","20.","2;","2]","2];","32.","682.","71.",":","=","==",">",">=","_3rd","_3rd();","args)","arr","arraydeque<>();","arraylist<>();","boolean","c","calpoints(string[]","class","cur","cur);","dequ","deque.addfirst(c);","deque.isempty();","deque.peek())","deque.peekfirst())","deque.poll();","deque.pollfirst();","deque.push(c);","dict","dict.containskey(c)","dict.get(c)","dict.put(')',","dict.put(']',","dict.put('}',","f","f[i","f[i]","f[i]);","false;","follow","handler","handler.longestvalidparentheses(s);","hashmap()","hashmap<>();","i)","idx","int","int[1005];","int[]","int[]{stk.peek()","int[n];","isvalid(str","i});","left","left)","left++;","linkedlist<>();","list","longestvalidparentheses(str","main(string[]","map","math.max(res,","n","new","null","op","ops)","ops.length","path)","path.split(\"/\");","prev","public","put(')',","put(']',","put('}',","queue","re","res)","res;","reslist","reslist.add(new","reslist.clear();","return","right","right)","right++;","s","s)","s.charat(i","s.length();","s.tochararray())","s=\"[\"","simplifypath(str","stack","stack<>();","static","stk","stk.isempty();","stk.peek())","stk.poll(),","stk.poll();","stk.pop();","stk.push(","stk.push(c);","stk.push(cur);","stk.push(integer.parseint(op));","stk.push(prev","stk.push(prev);","stk.push(stk.peek()","string","string[]","system.out.println(json.tojsonstring(reslist));","t;","up：返回最长长度的下标索引","void","{","{{","||","}","}};","使用栈的方式求解，deque的使用技巧参见：deque的主要使用方式","分割字符","去掉也可以跑过","双端队列","堆栈","官解","弹出前两次","方法1:stack","方法1:栈","方法2:dequ","方法2:dp","方法2:数组","方法3:贪心","最长有效括号","有效的括号","棒球比赛","等价写法","简化路径","详细参考基础与技巧","这个case，需要最后返回"],"docs/leetcode/classify/array.html":["!seen.add(num));","(a,","(arr","(child","(i","(idx","(int","(l","(pq.size()","(root","(true)",")","*","+","//map","//右","//如果找到，返回","//找到partition的索引","//索引和的最小值，根据数据范围取","//遍历list2","//随机化一个pivot","0)","0,","0;","0},","0}};","1);","1,","1;","1][0])","1][1]);","1},","2","2005;","215.","217.","54.","56.","599.","954.",":","=","==","=pivot",">","a[0]","arr)","arr.length","arr.length,","arr[i","arraylist<>();","arrays.sort(arr,","arrays.stream(nums).anymatch(num","b)","b[0]);","boolean","break;","c","c;","child","child;","containsduplicate(int[]","d","dir","end","end});","false;","findkthlargest(int[]","findrestaurant(string[]","for(int","hashmap<>();","hashset<>();","heapify(int[]","heapify(nums,","heapinsert(nums);","hi)","i++;","i,","idx","if(set.contains(x))","int","int[0][]);","int[][]","int[]{start,","j)","j,","j;","k)","k,","k:list1的str","l","l);","l,","list","list1,","list2)","map","math.max(end,","matrix)","matrix.length;","matrix[0].length;","merge(int[][]","minn","n","new","null","nums)","nums){","nums,","nums.length;","nums[child])","nums[child];","nums[i]","nums[i];","nums[idx];","nums[j]","nums[j];","nums[root]","nums[root];","partition(int[]","partition(nums,","pq","pq.offer(nums[i]);","pq.peek())","pq.peek();","pq.poll();","priorityqueu","priorityqueue<>();","public","r","r)","r);","r,","re","res.add(new","res.toarray(new","return","return;","root","root,","seen","set","set.add(x);","spiralorder(int[][]","string[]","swap(int[]","swap(nums,","t","t;","target","target)","true;","v:string的索引，因为题目中没有指出来list1的string是否有重复，忽略了重复的情况","void","x","{","{0,","{1,","{{0,","||","}","上","下","两个列表的最小索引总和","二倍数对数组","合并区间","存在重复元素","左","数组","数组中的第k个最大元素","方法1:set","方法1:优先队列","方法2:lambda","方法2:快排","方法3:堆排序","方法3:排序","翻转方向和标记已经访问的点，是本题的关键","螺旋矩阵"],"docs/leetcode/classify/sorting.html":["(left","0,","1);","912.","int","int[]","left,","nums)","nums,","nums.length","privat","public","quicksort(int[]","quicksort(nums,","return","right)","sortarray(int[]","{","}","排序","排序数组","方法1:快排"],"docs/leetcode/classify/simulation.html":["&","((blocks[idx]","((cols[c]","());","(1","(int","(n","(tot","*","+","/","//行","0)","0;","1","1)","1],","2028.","36.","6","8]",":","=","==",">",">>","[0","arrays.fill(res,","block","blocksmap","blocksmap.put(i,","board)","board.length,","board[0].length;","boolean","boolean[][]","boolean[r][c];","c","col","colsmap","colsmap.put(i,","false;","hashmap<>();","hashset<>());","int","int[10];","int[]","int[]{};","int[c","int[n];","int[r","isvalidsudoku(char[][]","k:当前的行/列/块","m","m)","map>","mean,","mean;","missingrolls(int[]","n","n)","n);","new","public","r","re","res;","res[idx++]++;","return","rolls)","rolls,","rolls.length;","row","rows[r]","rowsmap","t)","tot","v:当前的行/列/块","x","x;","{","|=","||","}","列","包含的数字","另外一种写法","块的map","找出缺失的观测数据","方法1","方法2","有效的数独","模拟","的索引"],"docs/leetcode/classify/string.html":["\"));","\"1\";","&&","'","')","'+')","'0'","(atoi)","(int","(int)","(s","(s.charat(0)","(sign","*","//2147483647","//flag是","//r表示每一行的索引","//结果列表","0)","0,","0;","1","1;","1]","2147483648","2147483648,","2147483649","2;","38.","394.","42\"));","42,","6.","8.","987\"));","=","==",">","[0,numrow","_2nd","_2nd();","args)","assert.assertequals(","assert.assertequals(0,","assert.assertequals(2147483647,","assert.assertequals(42,","c","cha","char[]","convert(str","countandsay(int","decodestring(str","flag","handler","handler.myatoi(\"","handler.myatoi(\"2147483649\"));","handler.myatoi(\"42\"));","handler.myatoi(\"word","int","integer.max_value)","integer.max_value;","integer.min_value;","k","linkedlist","linkedlist<>();","long","main(string[]","multi","myatoi(str","n)","new","null","numlist","numrows)","public","r","re","res;","return","s","s)","s,","s.length()","s.tochararray();","s.trim();","sb","sign","start","start;","static","str","string","stringbuild","stringbuilder();","stringbuilder[]","stringbuilder[numrows];","strlist","system.out.println(integer.max_value);","system.out.println(integer.min_value);//","void","z","{","||","}","两个方向区分正负","另外一种写法：","外观数列","字形变换","字符串","字符串解码","字符串转换整数","或者","按从上到下或者从下到上","方法1.模拟","方法2.打表","略"],"docs/leetcode/classify/binary_search.html":["%","&","&&","((double)","((m","(arr[(n","(child","(i","(idx","(int","(int)","(isodd)","(j","(k","(l","(le","(leftkthnum","(len1","(m","(math.max(nums1leftmax,","(n","(num","(nums1[i]","(nums2leftmax","(nums[l]","(nums[m]","(nums[mid]","(pq.size()","(root","(start","(target","(true)",")","*","*/","+",",",".","/","/**","//","//[1,2,3,4]","//[1]","//k经剩下1个时，说明找到了","//true：奇数","//各自上下取整，错开一个位置","//如果nums1[i]","//如果找到，返回","//始终保持nums1的长度短","//开始返回结果，结合奇偶性","//当前[start1..end1]","//找到partition的索引","//拿`nums1=[1,2]`和`nums2=[3,4]`举例，当`nums1`用完的时候，`start1`已经跳到`len(nums1)`的位置，开始发生越界，这时候说明`nums1`已经用完了，按`nums2`的数组下标计算目标索引，也就是`nums2[start2+k","//每次取k的一半","//计算上下取整的位置的kth，免去判断奇偶数","//这个case表示在1","//随机化一个pivot","//需要临界点判断下","0","0)","0,","0.0;","0;","1","1)","1));","1);","1,","153.","154.","162.","1;","1]","1],因为一开始保证了nums1比nums2长度小","1];","1];的判断","1]`,因为一开始保证了`nums1`比`nums2`长度小","1e9;","1};","2","2)","2.0;","215.","278.","2;","2]","2])","2];","3","33.","34.","4","4.","475.","704.","744.","81.",":","=","=0","==","=pivot",">",">=","?","@param","@return","[start2...end2]的长度","arr","arr.length;","arr[n","arrays.binarysearch(heaters,","arrays.sort(heaters);","arrays.sort(houses);","boolean","break;","char","child","child;","cut1","cut1,","cut2;","dist2","doubl","end","end1","end1,","end2","end2,","false;","false：偶数","findkthlargest(int[]","findmediansortedarrays(int[]","findmediansortedarrays(nums2,","findmin(int[]","findpeakelement(int[]","findradius(int[]","firstbadversion(int","follow","for(int","getkthnum(int[]","getkthnum(nums1,","getkthnum(nums2,","heapify(int[]","heapify(nums,","heapinsert(nums);","heaters)","heaters.length;","heaters[idx","heaters[j]","hi)","hous","house));","house)){","house);","house:","houses)","houses){","houses,","houses.length,","i++;","i,","idx","ii","int","int[]","int[]{","int[m","integer.max_value;","integer.min_value;","isodd","j","j)","j++;","j,","j;","k","k)","k);","k,","l","l);","l++;","l,","l;","le,","le.length","left","left);","leftkthnum","len1","len2","len2)","letters,","letters.length,","letters[0];","letters[l]","m","m;","math.abs(heaters[i","math.abs(heaters[i]","math.max(nums1leftmax,","math.max(res,","math.min(len1,","math.min(len2,","math.min(nums1[start1],","math.min(nums1rightmin,","mergearray(int[]","mergearray(nums1,","mid","mid;","n","n)","n;","n];","new","nextgreatestletter(char[]","null","nums)","nums,","nums.length","nums.length,","nums.length;","nums1","nums1);","nums1,","nums1.length,","nums1rightmin)","nums1右半部分最小值比nums2左半部分的最大值小，说明需要扩大[cut1...end]这个范围","nums2","nums2)","nums2);","nums2,","nums2.length;","nums2[j])","nums2[j]去掉[start2...j]的部分，反之，去掉[start1...i]的部分","nums2[start2","nums2[start2+k","nums2[start2]);","nums2leftmax)","nums2leftmax);","nums2rightmin)","nums2rightmin)))","nums[child])","nums[child];","nums[i]","nums[i];","nums[idx];","nums[j]","nums[j];","nums[l]","nums[l])","nums[m]","nums[m])","nums[r])","nums[root]","nums[root];","partition(int[]","partition(nums,","pq","pq.offer(nums[i]);","pq.peek())","pq.peek();","pq.poll();","priorityqueu","priorityqueue<>();","privat","public","r","r)","r);","r=","re","res;","res[1]","return","return;","right","right);","rightkthnum","rightkthnum)","root","root,","search(int[]","searchrange(int[]","start","start1","start1,","start2","start2,","swap(int[]","swap(nums,","t","t;","ta)","ta;","target","target)","up1:给定两个排序数组，找第kth大的元素","up2:给定一个无序数组，找第kth大的元素","void","while(i","while(l","{","{//与左端点比较后再与target值比较","||","}","二分","二分查找","代码可以参考上面方法2","但是只有1位置有房子，结果为0","位置都有热水器","供暖器","关于if","双指针merge两个数组，用多余的数组来存储最终的结果","和","在排序数组中查找元素的第一个和最后一个位置","复杂度分析","寻找两个正序数组的中位数","寻找峰值","寻找旋转排序数组中的最小值","寻找比目标字母大的最小字母","拿nums1=[1,2]和nums2=[3,4]举例，当nums1用完的时候，start1已经跳到len(nums1)的位置，开始发生越界，这时候说明nums1已经用完了，按nums2的数组下标计算目标索引，也就是nums2[start2+k","搜索旋转排序数组","数组1","数组1的开始位置","数组1的结束位置","数组2","数组2的开始位置","数组2的结束位置","数组中的第k个最大元素","方法1","方法1:优先队列","方法1:双指针","方法2","方法2:快排","方法2:求kth","方法3","方法3:二分","方法3:堆排序","时间复杂度：o(log(m+n))其中m和n是两个数组的长度","时间复杂度：o(m+n)其中m和n是两个数组的长度","空间复杂度：o(1没有使用到多余的空间","空间复杂度：o(m+n)其中m和n是两个数组的长度","第k个","第一个错误的版本","计算新的i和j开始二分"],"docs/leetcode/classify/structure_design.html":["!=","&&","(!cache.containskey(key))","(!help.isempty())","(account","(cache.size()","(data.isempty()","(data.isempty())","(data.size()","(end","(help.isempty()","(help.isempty())","(help.peek()","(i","(int","(node","(node.end","(node.start","(pop","(start","(this.balance[account1]","(this.balance[account]","*","*/","+","+=","/","/**","//","//data的数据没有了从help中拿","//两个栈的数据都为空，返回","//弹出data的栈顶元素","0,","09.","0;","1","1)","1);","1,","146.","155.","1;","1];","2043.","225.","232.","2;","307.","=","==","=new",">",">=","@param","@return","account,","account2","addfirst(doublelinkednod","addfirst(node);","appendtail(int","arraydeque<>();","balance)","balance.length","balance;","bank","bank(long[]","boolean","buildtree(int[]","buildtree(nums,","cache.get(key);","cache.put(key,","cache.remove(last.key);","cache;//","capac","capacity)","capacity;","capacity;//容量","class","cqueue","cqueue()","curr","curr.left","curr.left.v","curr.right","curr.right.val;","curr.val","curr;","data","data.add(x);","data.addfirst(help.pollfirst());","data.isempty()","data.peek();","data.poll();","data.pollfirst();","data.pop();","data.push(help.pop());","data.push(x);","data.size()","data;","deletehead()","dequ","doublelinkednod","doublelinkednode()","doublelinkednode();","doublelinkednode(int","doublelinkednode(key,","element","element.","empty\");","empty()","empty.","empty，当data,help均为空时，返回tru","end)","end);","end;","false;","get(int","get(key)","getmin()","hashmap<>();","head,","head.next","head.next.pr","head.next;//2.当前节点的后继节点指向head的后继节点","head;","head;//1.当前节点的前驱结点指向head节点","help","help.add(data.poll());","help.add(res);","help.addfirst(value);","help.isempty())","help.isempty();","help.peek()","help.peek())","help.peek();","help.pop();","help.push(value);","help.push(x);","help;","here.","i,","if(data.isempty()","if(data.isempty()){","initi","int","j);","key)","key,","key;","k是key，v是key生成的nod","last","last;","left;","linkedlist<>();","long","long[]","long[balance.length","lru","lrucach","lrucache(int","map","mid","mid)","mid);","minstack","minstack()","money)","money;","movetohead(doublelinkednod","movetohead(node);","myqueu","myqueue()","mystack","mystack()","new","next","next.pr","next;","next;//前驱接节点，后继节点","node","node)","node);","node,","node.end)","node.next","node.next;","node.pr","node.pre;","node.start","node.start)","node.v","node.valu","node.value;","node;//3.head节点的后继节点的前驱结点指向当前节点","node;//4.head的后继节点指向当前节点","null)","null;","numarray","numarray(int[]","nums)","nums,","nums.length","nums[start];","offer","onto","peek()","peek时，与pop的过程一样，只是在返回的时候，data.peek()","pop","pop()","poplast()","poplast();","pop时，只要去data的栈顶元素，即data.pop(),但是data栈没有元素了需要怎样?将help栈的元素不断往data栈推，推完为止，如果data,help栈均无元素，报错","pop的时候，pop的元素是否和help","pre","pre,","pre.next","pre;","privat","public","push","push(int","push时，只需要向help栈中推","put(int","put(k,v)","querytree(node.left,","querytree(node.right,","queue","queue\");","queue.offer(res);","queue.offer(x);","queue.poll();","queue.size();","queue;","re","remov","removenode(doublelinkednod","removenode(last);","removenode(node);","res;","return","right;","root","runtimeexception(\"empti","runtimeexception(\"stack","runtimeexception(\"th","shift()","shift();","shift()方法是为top()","size","stack","stack.","stack<>();","start","start)","start,","start;","structur","swap()","swap();","tail.pre;","tail;","tail;//node的收尾节点","this.bal","this.balance[account]","this.cach","this.capac","this.end","this.head","this.head.next","this.key","this.start","this.tail","this.tail.pr","this.valu","throw","tmp","tmp;","top","top()","top()与pop()方法只是在弹出data的最后一个元素的时候是否要继续放回help队列","treenod","treenode(int","treenode(start,","true;","update(int","updatetree(root,","updatetree(treenod","val)","val);","val;","value)","value);","value;","value;//k,v","void","whether","while(!help.isempty())","withdraw(int","x","x)","{","||","}","下面开始lru","与pop()方法准备的，做一件事：就是弹出队头到倒数第2个队尾元素的，将其送到队列的尾部，在执行top()","与pop()，弹出queue的队头元素，如果是top()，继续保留这个元素，pop()时扔掉","做一个额外的判断：如果当前的cache的大小大于capacity，需要移除最末尾的节点，链表和$cache$都要做移除操作","先移除这个节点移除，再将这个节点添加到链表的开头","其中data的存数据的，help辅助栈用来存最小值，在push操作时，help如果栈顶元素大于待push的元素，将待push的元素塞进help中，如果不是，则重复塞一次help的栈顶元素，注意help为空的时候特殊处理下","准备两个栈，data和help，做push操作时，需要保持help栈顶的元素始终最小，data的数据正常推入，help栈顶维持最小，在执行getmin方法的时候，返回help的栈顶元素","准备两个栈，一个数据栈data,一个辅助栈help","初始化","剑指","区域和检索","升级版本辅助栈，当push","参考「232.","取出节点，分节点存在与否讨论：","因为data队列的元素始终存在，判断栈是否为空的时候，只需要关注size(data)==0","基础版辅助栈，准备一个data,","如果cache中不存在key,返回","如果cache中存在，取出这个节点，将节点movetohead，返回节点的值","将一个已经在链表中存在的节点移动到链表的开头movetohead(node)","将当前节点移动到最头部位置","将新加入的节点插入到双端链表的头部位置addfirst(node)","将节点加入到双向链表的开头的位置","弹出最末尾的节点并将改节点返回","弹出最末尾的节点，并返回最后的节点poplast","当help元素为空的时候，也需要往里推","当help的栈顶元素大于等于新来的元素时，help同步要推一份新的元素进来","当help的栈顶元素比新来的元素小的时候，这个时候保持help不变","思路","数据栈，准备一个help","数组可修改","方法1:stack","方法1:两个队列","方法1:二分","方法1:模拟","方法1：辅助栈[浪费空间]","方法2:dequ","方法2:一个队列","方法2:线段树","方法2：辅助栈[不浪费空间]","最小栈","栈：先进后出filo","注意head节点和tail节点需要new出来","注释的代码写法是等价的，详细参考基础与技巧","用两个栈实现队列","用栈实现队列","用栈实现队列」","用队列实现栈","的元素有重叠，有就将help的元素pop出去，没有就维持不动，data栈正常pop","移除一个普通的节点","移除一个节点removenode(node)","简易银行系统","结构设计","缓存","节点不存在：新创建节点，将该节点插入到链表的头部，并将其put进cache中","节点存在:返回节点的值，将节点移动到链表头部","辅助栈","这个双端链表有下面的几个属性","进去的时候，","队列是先进先出，栈是先进后出，在top()方法中，为了避免，数据拷贝，有一个swap()的动作，data与help的存储顺序是一样的","队列：先进先出fifo","需要一个哈希双端链表，doublelinkednod"],"docs/leetcode/classify/two_pointers.html":["\");","&&","(;","(c","(i","(int","(j","(l","(num","(r","(right","(s","(string","*","*/","*[","*[[","+","/*","//","//[0,0,1,1,1,2,2,3,3,4]","//[1]","//固定a","0","0)","0,","0.抽象模型","0;","1","1)","1);","1,","1,0,1,2,","1,0,1]]","1,2],[","15.","151.","18.","1;","1])","26.","3.","4]",":",";",";//滑动","=","==",">",">[1,2]","@param","@return","[0,1,2,3,4]","[1,1,2]","[128]","[1]","[256]","[26]","a.length()","a.tochararray();","an","ans.append(\"","ans.append(tmp);","ans.tostring().trim();","arr","arr)","arraylist<>();","arr，sourc","b","break;","c","cha","char[]","chas,","chas.length","chas.length;","cleanspaces(char[]","cleanspaces(chas,","continue;","d","d两个指针","foursum(int[]","hashmap<>();","hashset<>();","helper","int","int[128];","int[]","j","l","l,","left","lengthoflongestsubstring1st(str","lengthoflongestsubstring2nd(str","lengthoflongestsubstring3rd(str","list>","map","minwindow(str","n","n)","n);","new","null","null;","num","nums)","nums,","nums.length","nums.length;","nums[a","nums[a]","nums[b","nums[b]","nums[i","nums[i]","privat","public","pwwkew中wke是子串","r","r)","re","removeduplicates(int[]","result","results;","return","reverse(char[]","reverse(chas,","reverse(tmp,","reversewords(chas,","reversewords(str","right","s)","s,","s.length()","s.length();","s.tochararray();","set","string","string.valueof(chas);","string[]","stringbuild","stringbuilder();","t","t)","t.trim().split(\"\\\\s+\");","target)","target，先给t的记上，作为标准，每个字母出现的次数","target，判断source是否都包含target，包含的话true，不包含的话fals","threesum(int[]","tmp","void","{","||","}","‘a’","‘z’","三数之和","准备一个helper数组，每次记录right指针的绝对位置，","准备两个hash","出现新的字符，很好，right指针向右扩展，并将当前字符加入set中，更新最长无重复子串长度","出现旧的字符，将左边界left指针向右收缩，移除当前的left指针指向的字符","初始化时准备两个指针，left与right指针，指向index=0","删除有序数组中的重复项","双指针","后","四数之和","在符合条件下，不断扩right，缩left，直到right达到数组或是字符串的末尾，left缩小到不符合窗口大小","子串：不可跳跃，如","子序列：可以跳跃，如pwwkew中pkw是子序列","常用的表如下所示：","当valid满足条件时，说明window都能涵盖了t的字符，记录长度和res，并将source相应的字符","当valid过不了的时候，说明window中还不含有t，记录下source，并将right++，即将window的右边界往右边推","或","扩大right指针，当第一次符合窗口大小时，执行逻辑","提供一个valid的方法，比较sourc","方法1","方法1:基本","方法1:粗糙版滑动窗口","方法2","方法2:优化版滑动窗口","方法2:多次翻转","方法3:再优化版滑动窗口","无重复字符的最长子串","更新res,更新left(拿到其最大位置)","最小覆盖子串","注意：子串与子序列的区别","然后开始构造window，最外层的条件是right,","用res去记录目前位置最大的长度，每次滑动窗口更新就去决定是否需要更新r","用set来维护重复字符与否的问题","用一个hashmap来建立字符和其出现位置之间的映射。","用一个mapper记录出现过并且没有被删除的字符","用一个滑动窗口记录当前index开始的最大的不重复的字符序列","用于ascii码","用于字母","用于扩展ascii码","维护一个滑动窗口，窗口内的都是没有重复的字符，去尽可能的扩大窗口的大小，窗口不停的向右滑动。","翻转字符串里的单词","这一题是leetcode的no.3题，曾经被面到过，很经典的一道题","选取","（1）如果当前遍历到的字符从未出现过，那么直接扩大右边界；","（2）如果当前遍历到的字符出现过，则缩小窗口（左边索引向右移动），然后继续观察当前遍历到的字符；","（3）重复（1）（2），直到左边索引无法再移动；","（4）维护一个结果res，每次用出现过的窗口大小来更新结果res，最后返回res获取结果。","，将left++，缩小window的左边界"],"docs/leetcode/classify/sliding_window.html":["$a_n$的窗口宽度是$w$,目标是为了获取一个$d[]=int[n","$d[iw+j]=max(a[iw+j+x])$这里的$x$满足：$0","$d[iw+j]=max(right[iw+j],","$d[m]","$left[iw+j]=left_max(a[iw+k])$​","$right[iw+j]=right_max(a[iw+k])$","&&","'a']","'a'];","'f'","'f',","'t',","(cnt","(i","(int","(maxcnt","(num","(r","(right","(s.charat(l++)","+","...","//","//count数组","//maxf表示滑窗中，相同字符最大的出现次数，本题只是't'","//字符s中不至多包含k个c的最大长度","//字符s中可以至多包含k个c的最大长度","//左右窗口","//左右窗口，让r自增往右推","//统计最大长度","0","0)","0,","0;","1","1)","1);","1,","1.将源数组按k的大小分，最后一组不够k的话，维持现状","10","10,","12","12,","1;","1]","1])","1])$","1])$​","1];","2","2.1.遍历数组，组装left_max，即从左开始，每个k组从左开始，取最大值","2.2.遍历数组，组装right_max，即从右开始，每个k组从右开始，取最大值","2024.","239.","3","3.","3.借助左右辅助数组拼装结果数组，math.max(right_max[i],","395.","4","4,","424.","56","6","6,","8","8,","9","9,",";","=","==","=>",">","[128]","[256]","[26]","an","ans;","ans[index++]","arr","arr[chas[l]","arraylist<>();","break;","c)","c,","cha","char","char[]","characterreplacement(str","cnt","cnt[i]","count","count[s.charat(l++)","dequ","dfs(s,","dfs(string","follow","getmaxlength(str","getmaxlength(str,","hashmap<>();","hashset<>();","helper","i;","idx","index","int","int[128];","int[26];","int[]","int[]{l,","int[]{};","int[n","int[n];","k","k)","k))","k));","k),","k);","l","l++;","l,","l;","left","left[(i+1)w+j","left[(iw+w+j","left[m+w","left[n","left_max","left_max[0]","left_max[i","lengthoflongestsubstring1st(str","lengthoflongestsubstring2nd(str","lengthoflongestsubstring3rd(str","linkedlist<>();","linkedlist<>();//存的是元素的下标索引","list","longestsubstring(str","map","math.max(getmaxlength(str,","math.max(res,","max(right[m],","maxcnt","maxconsecutiveanswers(str","maxf","maxslidingwindow(int[]","maxx","maxx)","n","new","null","nums,","nums.length","nums.length;","nums[0];","nums[deque.peekfirst()];","nums[n","nums[q.peek()];//peekfirst()","privat","public","pwwkew中wke是子串","q","r","r)","r,","re","res;","res[idx++]","reslist","reslist.add(new","reslist.clear();","reslist;","return","right","right_max","right_max[n","r});","s)","s,","s.length(),","s.length();","s.tochararray();","set","start","static","str,","up:返回所有符合条件的索引","void","w+1]$","w],","w]=max(right[n","{","|","||","}","‘a’","‘z’","上述贪心的证明：","个重复字符的最长子串","假设$a_0$,$a_1$,$a_2$","假设有如下的数组：","其中$0","其中$j","准备一个helper数组，每次记录right指针的绝对位置，","出现新的字符，很好，right指针向右扩展，并将当前字符加入set中，更新最长无重复子串长度","出现旧的字符，将左边界left指针向右收缩，移除当前的left指针指向的字符","另外一种思路：","可以缩减到[2]个长度","和","国际站看的的一个思路，很赞","如上图:","子串：不可跳跃，如","子序列：可以跳跃，如pwwkew中pkw是子序列","实现","将上面的数组从左边开始分，每个元素的形式:$i*w+j$,其中$i$是从左边开始数，窗口的$index$，$j$是在这个窗口下的偏移量，其中$0","常用的表如下所示：","思路来源国际站，很赞的一个证明","思路来自@lee215大佬，该解法可以参考424题","或","数组$left[]$是从左到右的每个窗口最大值","数组$right[]$是从右到左的每个窗口的最大值","方法1:滑动窗口","方法1:粗糙版滑动窗口","方法1:递归","方法1：双端队列","方法2:优化版滑动窗口","方法2:滑动窗口+统计","方法2：双端队列","方法3:再优化版滑动窗口","方法3：辅助数组+贪心","无重复字符的最长子串","更新res,更新left(拿到其最大位置)","替换后的最长重复字符","有如下的推导：","构建如下的结果：","注意：子串与子序列的区别","滑动窗口","滑动窗口最大值","用res去记录目前位置最大的长度，每次滑动窗口更新就去决定是否需要更新r","用set来维护重复字符与否的问题","用一个hashmap来建立字符和其出现位置之间的映射。","用一个mapper记录出现过并且没有被删除的字符","用一个滑动窗口记录当前index开始的最大的不重复的字符序列","用于ascii码","用于字母","用于扩展ascii码","结果数组$d[]$​的最后一个元素是:$d[n","维护一个滑动窗口，窗口内的都是没有重复的字符，去尽可能的扩大窗口的大小，窗口不停的向右滑动。","考试的最大困扰度","至少有","说明[l,r]当前的窗口内有超过了k个字符c，缩减左窗口","这一题是leetcode的no.3题，曾经被面到过，很经典的一道题","（1）如果当前遍历到的字符从未出现过，那么直接扩大右边界；","（2）如果当前遍历到的字符出现过，则缩小窗口（左边索引向右移动），然后继续观察当前遍历到的字符；","（3）重复（1）（2），直到左边索引无法再移动；","（4）维护一个结果res，每次用出现过的窗口大小来更新结果res，最后返回res获取结果。"],"docs/leetcode/classify/monotonic_stack.html":["&&","(cur","(int","(l","(m","(math.min(height[cur],","(r","(stk.isempty())","*","+","+=","//","//l","//lefth[i]表示第i个柱子左边最高的柱子的高度","//righth[i]表示第i个柱子右边最高的柱子的高度","//上述的两个数组应该是符合单调性的","//从右侧往左找，一直递增地找","//从左侧往右找，一直递增地找","//如果基准的right高度比其左侧的l的高度大，是可以形成雨水的，因为left比right大","//存的下标索引","//左右两侧都不能形成一个封闭的区域","//左右侧的索引","//左右索引","//当前位置的下标","//最左边的柱子的左边没有柱子了，lefth[0]=0","//每次取左右两侧的最小值，做高度，每次步进1个长度","//计算：","//这里可能会出现相等高度的柱子，体积是0","0,","0;","1);","1;","1]);","1],","42.","739.","=",">",">=","arraydeque<>();","break;//前探一个位置，没有位置跳出","cur","dailytemperatures(int[]","dequ","height)","height.length","height.length;","height[","height[++l])","height[i","height[i])","height[i]);","height[l];","height[r]","height[r];","height[stk.peek()])","height[stk.pop()];//记录下这个值，做这一轮计算的底","i)","int","int[]","int[n];","integer.min_value,","integer.min_value;","l","left","lefth","m","m)","math.max(righth[i","n","new","public","r","r])","re","res;","return","right","righth","righth[i]","r精髓，强制向左滑动","stack","stack<>();","stack<>();//存数组的下标索引","stk","stk.peek()","stk.push(cur++);//当前元素比栈顶元素小，入栈，指针后移","t)","t.length;","trap(int[]","{","}","下标的相减得到宽度","单调栈","另外一种写法，也很巧妙：","另外一种写法，大同小异:","和","对应的height，初始值是min","当前位置cur","接雨水","方法1:stack","方法1：单调栈","方法2:dequ","方法2：双指针","方法3：动态规划","栈顶位置的最小值，组成一个封闭空间，和m这个底相减（木桶原理）,","每日温度","组成高度","详细参考基础与技巧"],"docs/leetcode/classify/search.html":["!=","!vis[i","\"","\"\"","\"\",","\")","\"));","\");","\"billion\"};","\"c\",","\"cc\",","\"ccc\",","\"cd\",","\"cm\"","\"cm\",","\"d\",","\"dc\",","\"dcc\",","\"dccc\",","\"eight\",","\"eighteen\",","\"eighty\",","\"eleven\",","\"fifteen\",","\"fifty\",","\"five\",","\"forty\",","\"four\",","\"fourteen\",","\"i\",","\"i\"};//对应的罗马数字","\"ii\",","\"iii\",","\"iv\",","\"ix\"","\"ix\",","\"l\",","\"lx\",","\"lxx\",","\"lxxx\",","\"m\",","\"million\",","\"mm\",","\"mmm\"","\"nine\",","\"nineteen\"};","\"ninety\"};","\"one\",","\"seven\",","\"seventeen\",","\"seventy\",","\"six\",","\"sixteen\",","\"sixty\",","\"ten\",","\"thirteen\",","\"thirty\",","\"thousand\",","\"three\",","\"twelve\",","\"twenty\",","\"two\",","\"v\",","\"vi\",","\"vii\",","\"viii\",","\"x\",","\"xc\"","\"xc\",","\"xl\",","\"xx\",","\"xxx\",","\"zero\";","%","&&","'*')","(!q.isempty())","(\"\".equals(remain))","());","(),","(cache.containskey(i))","(cache.containskey(s))","(cache.containskey(start))","(cache[i]","(cache[s1][p1]","(f","(i","(idx","(index","(int","(list","(memory.containskey(s))","(num","(p1","(res)","(s","(s.isempty())","(s.length()","(s.startswith(word))","(set.contains(i))","(start","(string","(sub));","(sub.isempty()","(sub.size()","(sum","(t","(target","(word.length()",")","*","*/","+","/**","//","//dp[i]","//f[i]表示以s[i","//k:子集或后的值，v:该值出现的次数","//出口函数","//加上当前切分的单词","//存字符s的下标索引，这些索引例如idx,","//当前索引idx","//最大单词长度，下面的dfs做切分的时候，超过这个单词的长度变得没有意义，一个小的优化点","//枚举所有子集","//注意用start索引做key，s做key的时候不可行","//记录当前处理到的索引","//记忆化hashmap","/=","0","0)","0);","0,","0;","1)","1));","1),","1);","1,","10);","10,","10.","100);","100,","1000","1000);","1000,","1000;","1000~3000","100~900","10;//每次拿到num的最后面的数，找到后添加","10;//移除最末位","10~90","12.","13.","131.","139.","140.","16.08.","1;","1]","1])","1];","1];//多放一个位置","1][p.length()","1]结尾的字符串能否拆分成worddict","1};//关键的罗马数字节点","1~9","2","2)","2044.","273.","39.","4);","4,","40);","40,","40.","400);","400,","46.","47.","5);","5,","50);","50,","500);","500,","78.","9);","9,","90);","90,","90.","900);","900,",":","=","==",">",">=","?","@param","@return","[idx,s.length())不能由worddict里的单词形成","[idx,s.length)这个范围内的单词都不能由worddict的单词组成","arabic_num","arabic_nums[i])","arabic_nums[i];","arraylist<>());","arraylist<>(),","arraylist<>();","arraylist<>(levellist));","arraylist<>(sub));","arrays.sort(candidates);","arrays.sort(nums);","arrays.sort(nums);//sort","backtrace(","backtrace(levellist,","boolean","boolean[]","boolean[][]","boolean[n","boolean[n][n];","boolean[nums.length]);","boolean[s.length()","cach","cache.get(i);","cache.get(s);","cache.get(start);","cache.put(s,","cache.put(start,","cache;","cache[i];","cache[s1][p1]","candid","candidates,","char[]","combinationsum(int[]","combinationsum2(int[]","continue;","continue;//skip","countmaxorsubsets(int[]","cur)","dfs(candidates,","dfs(int[]","dfs(list","dfs(new","dfs(nums,","dfs(s);","dfs(s,","dfs(s.substring(word.length()));//当前的word是一种可能切分，","dfs(string","dfs(sub,","dict","dict[i][last]);","dp;","dp[0]","duplic","end)","f","f)","f);","f[0]","false;","final","hashmap<>());","hashmap<>();","hashset<>();","hashset<>(worddict);","helper(int","helper(num","hundr","i)","i++;","idx","idx)","idx,","idx;","ii","index","index)","index++;","index,","index;","int","int[]","int[][]","int[s.length()","inttoroman(int","ismatch(char[]","ismatch(ss,","ismatch(str","ispalindrome(str","j","last","less_than_twenti","levellist","levellist)","levellist,","levellist.add(num);","levellist.size()","linkedlist<>();","list","list>","map","map.get(maxx);","map.getordefault(t,","map.put(\"c\",","map.put(\"cd\",","map.put(\"cm\",","map.put(\"d\",","map.put(\"i\",","map.put(\"iv\",","map.put(\"ix\",","map.put(\"l\",","map.put(\"m\",","map.put(\"v\",","map.put(\"x\",","map.put(\"xc\",","map.put(\"xl\",","map.put(t,","map>","map>>","math.max(maxx,","maxlen","maxlen)","maxx","memory)","memory))","memory.get(s);","memory.put(s,","n","n)","n,","new","null","null)","num","num)","num,","numbertowords(int","nums)","nums,","nums.length","nums.length)","nums.length;","nums[i","nums[i]","nums[i])","nums[i],","p)","p.tochararray();","p1","p1)","p1));","partition(s,","partition(s.substring(i","partition(str","permute(int[]","permuteunique(int[]","pp","pp,","pp.length)","pp[p1","privat","public","q","q.offer(0);","q.poll();","queue","re","remain","remain);","remainlist","remainlist)","res)","res);","res);//更新cache，避免重复搜索","res.add(\"\");","res.add(\"\");//当前的下标到达s的末尾","res.add(cur.tostring());","res.add(new","res.add(s.substring(start,","res.add(word","res.append(romans[i]);","res.insert(0,","res.tostring().trim();","res.tostring();","res;","reslist","reslist.add(new","reslist.add(sb.tostring());//收集结果","reslist;","result","result);","result.add(collections.emptylist());","result.add(subresult);","return","return;","right","roman","romantoint(str","s","s)","s,","s.length()","s.length())","s.length();","s.tochararray(),","s1","s1,","sb","sb)","sb);","sb.append(levellist.get(i)).append(\"","sb.append(thousand[index]).append(\"","sb.deletecharat(sb.length()","set","ss","ss,","ss.length;","start","start)","start,","start;","string","string[]","string[][]","stringbuild","stringbuilder());","stringbuilder();","sub","sub)","sub);","sub,","sub.add(nums[i]);","sub.add(nums[idx]);","sub.foreach(system.out::print);","sub.remove(sub.size()","sublist","sublist)","subresult","subresult.add(left);","subresult.addall(right);","subsets(int[]","subsets(nums);","subsetswithdup(int[]","sum","sum,","system.out.println();","t","t)","t);","t,","t;","target)","target,","target;","this.dp","this.t","this.target","this.target)","this.worddict","thousand","true;","vi","vis)","vis);","vis[i]","void","word","word.length();","wordbreak(str","worddict","worddict)","worddict;","worddict;//可以做成hashset","wordset","wordset;","x","x;//是或「|」","{","{\"\",","{\"m\",","{//s全部探测完，开始组装levelist","{//从大到小遍历，贪心判断当前的值是否可以再被缩减","{//准备","{//如果cache中有s的映射，返回","{//已经到s的末尾，返回","{//组装word","{//遍历worddict","{1000,","|=","||","}","},","};","「^」","下标索引从i开始到len(s)结束，能否由worddict字典形成这个单词","不是异或","中的单词","位置为\"\"","全排列","关键节点的","分割回文串","分析","前缀子串可以拆分成","单词拆分","可以在记忆化上做很多手脚，上面的map是存储的索引的结果，可以是false也可以是true，本方法的set指的是那些返回false的结果","和sub，","如果是两个单词，隔开","子集","当前处理到s的下标索引","当前处理到单词的下标索引","搜索","整数的英语表示","整数转换英文表示","整数转罗马数字","方法1","方法1:df","方法1:dfs枚举所有子集统计","方法1:回溯","方法1:回溯（stringbuilder）","方法1:回溯（递减）","方法1:记忆化dfs(使用map)","方法1：df","方法2","方法2:dp预处理+df","方法2:回溯（累加）","方法2:记忆化dfs(使用set)","方法2：记忆化df","方法3:记忆化df","方法3:记忆化dfs(使用array)","方法3：记忆化dfs(剪枝)","方法4:dp","方法4:记忆化bf","方法5:dp","正则表达式匹配","的","硬编码的罗马数字","类似方法1，采用boolean[]的方式","组合总和","统计按位或能得到最大值的子集数目","罗马数字转整数","表示「长度」为","这一题是139题的进阶题，需要列出所有的组成方案","面试题","，0"],"docs/leetcode/classify/graph.html":["!=","(!deque.isempty())","(dist[v]","(int","(int[]","*","+","/","//","0;","0;//记录边的序号,边的序号从0开始","1);","100_005;//顶点数量","1;","2039.","2;","2;//边的数量",":","=","addedge(e[0],","addedge(e[1],","addedge(int","arraydeque<>();","arrays.fill(dist,","arrays.fill(head,","continue;","cur;","dequ","deque.addlast(0);","deque.addlast(v);","deque.pollfirst();","dist","dist[0]","dist[u]","dist[v]","e","e[0]);","e[1]);","edg","edge[i];","edge[idx]","edges)","edges,","head","head[u]","head[u];","head[u];//采用头插法","idx","idx++","idx++;//","idx;","inf","inf)","inf);","int","int[]","int[e];//按输入顺序存储每条边指向的节点","int[e];//记录邻接表中当前节点的下一个节点","int[v];","int[v];//头节点数组","integer.max_valu","networkbecomesidle(int[][]","new","next","next[i])","next[idx]","patience)","public","re","res)","return","static","u","u,","v","v)","v;//","void","{","}","不能使用static","图论","当前链表头节点更新，指向第idx边","搜索与图论之拓扑排序","更新边序号","第idx边指向v","第idx边的下一个节点是上一个时刻的头节点","网络空闲的时刻"],"docs/leetcode/classify/dynamic_programing.html":["!=","!visited[leftpos])","\"\";","\"\";//结果","\",","%","%d","&&","(","(!queue.isempty())","(arr[curpos]","(curpo","(curr","(end","(i","(int","(j","(len","(memo[curr]","(memo[start][end]","(p[i]","(price","(rightpo","(s","(s.charat(start)","(s.indexof(divide)","(start","(submaxx","(sum",")","){","*","*/","+","+1==","+=",",int",",因为只有一次买入卖出的机会，","/","/*","/**","//","//f[0]","//f[1]","//f[i]","//f[i][0]表示第i天手里有股票获得的最大利润","//f[i][0]表示第i天手里没有股票获得的最大利润","//f[i][0]表示第i天手里没有股票，持有的总收益","//f[i][1]表示第i天手里有股票获得的最大利润","//f[i][1]表示第i天手里有股票，持有的总收益","//f[j][i]","//memo[i]表示从索引为i的位置，能否跳跃到最后一个下标","//step表示可以跳跃的步数","//从","//倒数第二个位置开始","//全局最大值和局部最大值","//全局最大子数组和的起始索引","//出口，索引idx到达最后一个下标的位置或者超过了最后一个下标","//初始化","//卖出（sell）的时候需要扣除手续费，为","//基于上一种方法，fee`的话相当于在卖入`buy`的时候算负债，或者在卖出`sell`的时候扣除得到的利润","//如果当前的位置能跳跃到上一个位置lastpos，更新上一个位置lastpo","//对于当前的curr索引，最多可以跳nums[curr]步，最少我们从1开始起跳，0没有意义，出去了","//局部的最大子数组和的起始索引","//当curr跳到末尾或者跳过末尾的时候，递归结束","//当前方法是在买入（buy）的时候算负债","//是否到开头了","//更新全局的","//最后一个位置","//规定买入（buy）的时候利润为负","//规定卖出（sell）的时候利润为正，即+prices[i]","//记忆化剪枝","0","0(1)","0)","0);","0,","01","0;","0;//交易了一次","0;//交易了两次","0;//无股票状态","0;//最长的回文子串的长度","0表示第i天没有股票的状态[无股票]","0说明找到了，返回true","1","1(5)","1)","1)+fib(n","1)+fib(num","1);","1,","10","11","121.","122.","123.","1306.","188.","1;","1=0+n","1=n","1]","1]);","1];","1][0]","1][0],dp[i","1][0]=0","1][0]表示i","1][0]，也可能是昨天持有股票，但是卖出了(sell)，为dp[i","1][1]+prices[i]","1][1]+prices[i]}","1][1],","1][1],也可能是昨天没有持有股票，但是买入了(buy),","1][2];","1][3];","1][j","1][j]","1][k","1][t];","1][t]即答案","1]范围内时，返回fals","1天的时候，是无股票的，在i天的时候买入了股票，也就是说要必须在i天之后的某一天卖出股票，所以很显然dp[i","1表示第i天持有股票的状态[有股票]","2","2(11)","2));","2);","2;","2][0]","3","3(5)","309.","4","416.","45.","5","5.","509.","53.","55.","6","7","714.","8","9",":",";","=","=0","=1","=1;i","==","=f_i_0`,因为上面的转移方程已经改变了`f_i_0`的值",">",">=",">=n","?","@param","@return","[1,5,11,5]","[1,nums[idx]]这个区间范围内","_inf","_inf;","`f_i_1`是昨天持有股票`f_i_1`,或者是昨天无股票状态，今天买入了股票`buy`，买入相当于负债，但是需要提前记录下`tmp","addboundaries(str","an","ans.length())","ans;","arr,","arr.length","arr.length;","arr[curpos],","bad:不可以跳到末尾位置","base","boolean","boolean[]","boolean[][]","boolean[arr.length];","boolean[n];","boolean[n];//初始化","boolean[n][n];","boolean[n][t","boolean[s.length()][s.length()];","boolean[t","canjump(int[]","canjump2nd(int[]","canjump4th(int[]","canpartition(int[]","canreach(int[]","case:","center","char","class","curpo","curpos,","curr","curr)","curvalue;","dfs(arr,","dfs(int[]","divid","divide)","down)","dp","dp[0]","dp[0][1][0]","dp[0][1][1]","dp[0][2][0]","dp[0][2][1]","dp[3][11]往上走到dp[2][11]","dp[3][11]往左走到dp[3][6],这一行用掉5","dp[3][6]一直往上走到dp[1][6]减去这一行的5","dp[i","dp[i][0]","dp[i][0]表示第i天无股票，可能是昨天也没有股票，状态持续到今天，为dp[i","dp[i][0|1]","dp[i][1]表示第i天有股票，可能是昨天就有股票，状态持续到今天，为dp[i","dp[i][j]","dp[i][j]表示在子集数组的区间范围内[0...i]之间选择若干个数，可以组成j","dp[j","dp[j]","dp[n","dp[n][t+1],其中n是子集数组的大小，t是目标和，多放一个，从0开始的","dp[t];","end","end)","end);","expandbyseed(str","f","f[0]","f[0];","f[0][0]","f[0][1]","f[0][2]","f[1]","f[i","f[i]","f[i]);","f[j]","f[n","f[n][0];","f_i_0","f_i_0;","f_i_1","false;","false不是回文","fee","fee)","fee,注意在初始化f[0][1]时的处理，","fee;//买入(buy),股票的价值为prices[i]，需要负债手续费","fee，也可以在买入（buy）的时候算利润","fee，有如下代码","fib(int","fib(n","fib(num","follow","for(int","good:可以跳到末尾位置","helper(int[]","helper(nums,","helper(nums,0);","helper(s,","helper(str","i)","i;","idx","if(idx","if(memo[idx]!=null)","if(memo[num]!=null)","if(n","if(n==0)","if(n==1)","if(num==0)","if(num==1)","ii","iii","illegalargumentexception(\"参数错误，您传递的分割字符，在输入字符串中存在！\");","index[]","index[nums.length];","inf","int","int[2];","int[]","int[][]","int[][][]","int[k","int[n","int[n];","int[n][2];","int[n][maxk","integer.max_valu","integer.min_value;","integer[]","integer[n+1];","integer[n];","iv","i表示第i天","j","jump(int[]","k","k,","k为遍历的字符长度，可以为n","lastpo","lastpos)","len","linkedlist","linkedlist<>();","longestpalindrome(str","loop","math.max(f_i_0,","math.max(f_i_1,","math.max(res,","math.min(f[i],","max(f_i_0,","max(f_i_1,","maxk","maxlen","maxlen)","maxlen);","maxprofit(int","maxprofit(int[]","maxright","maxright)","maxsubarray(int[]","maxx","maxx)","maxx;","max{dp[i","memo","memo;","memo;//返回当前位置索引curr跳到最后位置的最小步数","memo[curr];","memo[idx];","memo[num]","memo[num];","memo[start][end]","memo[start][end];","n","n)","n;","new","null","null)","num","num)","num){","num;","num];","nums)","nums,","nums.length,","nums.length;","nums[0],","nums[0];","nums[i]","nums[i])","nums[i];","nums[i]]","nums[i]];","p[i];","prices)","prices,","prices.length","prices.length;","prices[0]","prices[0];","prices[0];//交易了一次","prices[0];//交易了两次","prices[0];//有股票状态","prices[i","prices[i]","prices[i])","prices[i]);","prices[i]}","printutils.printmatrix(dp);","privat","public","queue","queue.add(start);","queue.addfirst(leftpos);","queue.size();","re","recursive(int","recursive(n);","res;","return","right","rightpo","s","s)","s,","s.charat(end))","s.charat(end);","s.charat(start)","s.length()","s.length();","s.substring(i,","s.substring(start,","s[j...i]这个区间的子串是否是回文，true是回文","size","solut","start","start)","start))","start,","step=1;step","string","stringbuild","stringbuilder();","subend","subend++;","subend;","submaxx","submaxx;","substart","substart;","sum","system.out.printf(\"%d","t","t;","throw","tmp","true;","unknown:不知道是否可以跳到末尾位置","up)","up:返回最大子数组和的起始索引","visit","visited)","visited);","visited[curpos]","visited[curpos])","visited[leftpos]","visited表示当前的curpos位置有无被访问过","{","{//之前submaxx是负数，重新开始","||","}","}*/","一开始的时候都是unknown状态，最末尾的位置是good状态，因为可以由自己跳到自己的位置","一直往上走到dp[0][1]","一般情况，dp[i][j]对于，第i个数，有这两种情况:","不过也可以，在处理fee的时候，上面的做法是卖出（sell）的时候，算扣除的手续费","不选：dp[i][j]=","为dp[i","也可以不判断，硬比较","买卖股票的最佳时机","买卖股票的最佳时机含手续费","使用分隔字符处理以后得到的字符串","关于倒序的遍历的问题：参考这篇：背包问题之","其中curpos表示当前访问的位置","其中f[i][j]表示s中，从i到j是否有回文子串","准备一个bool类型的数组visited表示当前的下标有无被访问过","准备一个queue，转这个queu","准备一个函数：dfs(int[]","减去这一行的1","出口时判断，是否是good状态，计算memo,返回true的时候记录good状态，返回false时记录bad状态","出口条件：","分别渠道左右两边去找，curpos的位置不越界并且leftpos和rightpos未被访问过","分割等和子集","分析","分隔字符","创建预处理字符串","到dp[1][1]","动态规划","即","即当i=0的时候","原始字符串","去掉一维","取到这一轮的总的size大小，进行for","另外一种写法","只能买卖一次","可以买卖多次","可以买卖多次，但是卖出有一天冷冻期","可以买卖多次，但是每次卖出收取手续费fee","和","基于上一种的最多买卖2次，这里允许2变成一般的次数k，最多买卖k次","基于上面方法的第一段代码，去掉一维，改成如下的形式：","开始","开始都可以","弹出当前的curpos,如果arr[curpos]==","当arr[curpos]==0时，表示找到了，返回tru","当i=0的时候，dp[0][j]","当j=0的时候，dp[i][0]为true，当不选任何子集数组的数的时候，可以形成一直方案","当j>=nums[i]的时候，说明j还可以拆解,可以选或者不选i这个数，只要有一种方案是true即可","当j的时候，说明j不可以拆解，我们肯定选不到i这个数了，也就是dp[i][j]=dp[i","当前curpos的访问过，返回fals","当前curpos越界了，也就是不在[0,len","当前所处的位置","得11","得到","得到11","总结就是：","或者基于变量的方式有下面的改写方式：","或者是昨天持有股票，今天卖出了sell,卖出相当于盈利为f_i_1+prices(i)","手里有股票","手里没有股票","打印","持有的总收益","指的是当选第0个数的时候，能否等于j，显然在nums[0]=j的时候满足这种条件，其他都为fals","探索左边和右边位置","数组","斐波那契数","方法1:dp","方法1:暴力递归","方法1:朴素版dp","方法1:记忆化递归","方法1：朴素版dp","方法2:bf","方法2:dp","方法2:压缩空间dp","方法2:空间压缩dp","方法2:自顶向下记忆化递归(top","方法2:记忆化递归","方法2：空间压缩o(1)dp","方法3:自底向上填表dp(bottom","方法3:自底向上填表递归(bottom","方法3:贪心","方法4:中心扩展法","方法5:manacher算法","是当前无股票状态时","是当前有股票状态时","是形成11的一个组合","是昨天无股票f_i_0","最佳买卖股票时机含冷冻期","最多只能买卖两次","最多有k笔交易的限制","最大子数组和","最长回文子串","本动态规划的文章着重讲动态规划，涉及马拉车算法的内容不详细展开，下面的代码取自weiwei大佬的题解","条件为当前字符[i]==[j]的时候，要么只有两个字符，要么砍头去尾，有回文子串","此时i=0,j=i+k","特判","用index的enum来记录某个坐标是否可以到达最末尾的位置，有三类值：","由中心往两边扩散，返回满足最大回文的长度","由于值依赖前一天的收益情况（有无股票的状态）,f只需要来回滚动即可，去掉一维","相等时，说明只有一个字符了，返回t","经典的种子题","结尾的连续子数组的最大和","结束","股票只能买卖一次","股票可以多次买卖","背包问题（科普文，基础，背包九讲）","脱胎与方法1，添加记忆化","表示","表示s从start到end位置，是否有回文子串","表：以","规定卖出的时候(sell)获利，+prices[i],买入的时候，暂时算负债(buy)，","记录最长回文子串的长度和相应它在原始字符串中的起点","访问后要设置下visited的属性，并且将位置放置于queue中","跳跃游戏","返回当前位置索引curr跳到最后位置的最小步数","这一行用掉11","这时为","这时为dp[i][1]","这时为f_i_1","选:dp[i][j]=dp[i","需要同时更新","：两个字符的时候，比较两个字符是否相等"],"docs/leetcode/classify/game_problem.html":["(int","0,","0;","1.alice和bob均不可以在两段拿走a或者b，需要判断是否在字符串中出现了连续的aaa或者bbb这样的字符的时候，拿走一个a或者b，分别统计拿走的次数分别记为a和b，返回a>b即可","1;","2038.","=","b","b;","boolean","ch","char[]","colors)","colors.length();","colors.tochararray();","int","n","public","winnerofgame(str","{","}","博弈问题","如果相邻两个颜色均相同则删除当前颜色"],"docs/leetcode/classify/bit.html":["!=","&","'a';","'a']","'a']++;","((mark","((t","(1","(ch[c","(char","(int","(n","+","//右移一位","//如果当前的bit位于上一位t是相同的，则返回fals","//如果这一位被对冲掉，返回fals","//异或（","//当前位bit","//拿到最右边的一位","//拿到每个字符的移动的位数","//调用库函数","0)","01.01.","0;","1)","1);","1;","1;//初始值","25]开始","693.",":","=","==",">",">>",">>=","[0","^","astr)","astr.tochararray())","bit","bit)","bit;","boolean","c","ch","ch[c","char[26];","char[]","false;","hasalternatingbits(int","int","integer.tobinarystring(n).tochararray();","isunique(str","mark","n","n)","new","public","return","t","true;","{","}","交替位二进制数","位运算","判定字符是否唯一","延伸阅读：位运算操作常见技巧","方法1:基本位运算","方法1:数组","方法2:位运算","方法2:高阶位运算","方法3:库函数","汉明距离","赋值给上一位","面试题","）每一位进行比较，相同为0，不同为1"],"docs/leetcode/classify/math.html":["728.","java","数学","方法1:模拟","自除数"],"docs/leetcode/classify/sweep_line.html":["218.",">","天际线问题","扫描线"],"docs/leetcode/swordoffer/swordoffer.html":["!=","%","&&","(!pq.isempty()","(arr","(head.next","(idx","(int","(l","(m","(pq.size()","+","//如果只剩下一个节点，因为节点是环状的，所以自己指向自己即可退出","//跳到下一个节点","0,","0;","0;//计数索引","1)","11.","1;","2)","3;","40.","51.","62.",":",";","=","==",">","_2nd","_2nd();","a);","args)","arr)","arr,","arr.length","arraylist<>();","b","b)","delnodeincircle(listnod","getleastnumbers(int[]","handler","handler.delnodeincircle(head,","head","head)","head,","head.next","head.next.next.next.next;","head.next.next;//删除要删除的节点","head.next;","head.val;","head;","idx","idx++;//计数","idx是索引，差2个","int","int[]","int[k];","k","k)","k))","l","lastremaining(int","lcof","list","list.get(0);","list.remove(idx);","list.size();","listnod","listnodeioutils.transform(\"[0,1,2,3,4]\");","m","m)","m);","m,","main(string[]","mid","minarray(int[]","n","n,","new","null","nums)","nums.length;","nums[l];","nums[r])","offer","pq","pq.offer(x);","pq.poll();","priorityqueu","priorityqueue<>((a,","privat","public","r","re","return","reversepairs(int[]","size","size)","static","tail","tail.next","void","x","{","{//m表示个数","||","}","个数（基于快速排序的数组划分，清晰图解）","使用链表的方式模拟删除的操作","剑指","剑指offer","剑指offer(leetcode)","圆圈中最后剩下的数字","如果每次旋转的圈数很大，可以mod掉","扩展","按递推公式来处理","数组中的逆序对","方法1.二分","方法1:优先队列","方法2:排序","旋转数组的最小数字","最小的","最小的k个数"],"docs/swordoffer/structure.html":["!=","!f)","&&","(!nodequeue.isempty())","(!q.isempty())","(cur","(cur.val","(curnode.left","(curnode.right","(fast.next","(int","(l1","(l1.val","(left","(list1","(list1.val","(node","(phead","(proot","(right","(root","(root.left","(root.right","(slow","(sub));","(sum","+","+=","//f的标志位要是true的时候，并且slow==fast","//初始时，slow和fast是相等的，如果没有标志位会提前退出","//删除cur节点","//只要左右子树有一个是true即可","//回溯过程需要将map的数量","//头节点开始，且","//如果slow和fast不是同一个节点","//如果这时候不是第一次相遇，而fast已经到链表的末尾了，说明没有环","//将从根节点到当前节点，有多少的路径和等于pathsum存入map","//左右两棵子树只要一个符合即可","//开始时","//当前的节点是叶子节点，比较剩下的sum值是否相等","//当前节点只要不是null，就一直在循环里绕","//当前节点是叶子节点，开始比较val是否相等","//探索左右子树","//收集节点","//添加结果","//翻转结果","//路径和","//这一步是为了移除这个叶子节点的值，不管这个叶子节点是否满足条件","//进入下一层","//遍历完当前节点后，将当前节点滑动到下一个节点","//遍历获取当前节点和当前节点的前一个节点","0)","0);","01.数据结构","0;","1","1);","1.left和right都为空，说明root的左右子树中都不包含p和q节点，返回null即可","2.left不为空，right为空，说明p和q不在右子树中（因为右子树为空了），这时，返回left，这里面有下面的两种情况：","3.right不为空，left为空，说明p和q不在左子树中（因为左子树为空了），这时，返回right，这里面有下面的两种情况：","4.left不为空，并且right不为空，说明p和q分布在root节点的左右子树的两侧，这时root为p和q的最近公共祖先节点，返回",":","=","==",">","?","arraylist","arraylist<>());","arraylist<>();","arraylist<>(sub));","arraylist>","boolean","break;","collections.reverse(res);","cur","cur.next;","cur;","curnod","curnode.left.val);","curnode.right","curnode.right.val);","curnum","deletenode(listnod","dfs(listnod","dfs(node);","dfs(node.next);","dfs(root,","dfs(root,sum,0,new","dfs(root.left,","dfs(root.right,","dfs(treenod","dummi","dummy,","dummy.next","dummy.next;","entrynodeofloop(listnod","f","f)","false;","false;//标志位","fast","fast)","fast.next.next","fast.next.next;","fast.next;","findpath(treenod","hashmap<>();","haspathsum(root.left,","haspathsum(root.right,","haspathsum(treenod","haspathsum4th(treenod","head","head,","head;","helper(root,","helper(root.left,","helper(root.right,","helper(treenod","int","integ","jz18","jz23","jz25","jz34","jz6","jz68","jz77","jz82","jz84","jz86","l1","l1,listnod","l1;","l2","l2)","left","left;","level","level++;","linkedlist","linkedlist<>();","list1","list1,listnod","list1.next","list1;","list2","list2)","list2);","list2.next","list2.next);","list2.val)","list2;","listnod","listnode(","listnode(0);","lowestcommonancestor(treenod","map","map.get(pathsum)","map.getordefault(pathsum","map.getordefault(pathsum,","map.put(0,","map.put(pathsum,","merge(list1,","merge(list1.next,","merge(listnod","new","node","node)","node.next;","nodequeu","nodequeue.offer(curnode.left);","nodequeue.offer(curnode.right);","nodequeue.offer(root);","nodequeue.pop();","null","null)","null;","numqueu","numqueue.offer(curnum","numqueue.offer(root.val);","numqueue.pop();","o1,","o2)","o2);","p","p,","pathsum","pathsum)","pathsum);","phead","phead)","phead,","phead.next","phead.next;","phead;","phead;//slow回到起点，slow和fast步调一致，第一个相遇的点就是环形链表入口","prev","prev.next","prev.next.next;","prev.next;","print(treenod","printlistfromtailtohead(listnod","privat","proot)","public","p和q都在left即左子树上，而root节点恰好指向了p或者q","p和q都在left即左子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点","p和q都在right即右子树上，而root节点恰好指向了p或者q","p和q都在right即右子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点","q","q)","q);","q.offer(proot);","q.size();","queue","re","res.add(new","res.add(node.val);","res.val;","res;","return","return;","right","right;","root,","root.right","root.val","root.val)","root.val);","root.val,","root.val;","root.val;//路径和加上当前节点的值","root;","size","slow","slow.next)","slow.next;","slow;","slow和fast相同，但是是初始时的slow","slow和fast错开一个位置","sub","sub)","sub);","sub.add(root.val);","sub.remove(sub.size()","sum","sum)","sum);","sum,","sum;","targetsum)","targetsum,","total","total)","total,","treenod","true;","true;//设置标志位","val)","void","{","||","}","也可以有如下的解法：","二叉搜索树的最近公共祖先","二叉树中和为某一值的路径(一)","二叉树中和为某一值的路径(三)","二叉树中和为某一值的路径(二)","从尾到头打印链表","代码","出口条件：当节点是null的时候","分析","删除链表的节点","合并两个排序的链表","在二叉树中找到两个节点的最近公共祖先","思路：","或者","按之字形顺序打印二叉树","数据结构","方法1.","方法1.遍历","方法1:df","方法1:回溯","方法1:快慢指针","方法1:迭代","方法1：递归","方法2.递归","方法2:回溯","方法2:递归","方法2：迭代","方法3:bf","树","的节点，这个节点是多少个，在此基础上累加","目标sum的值","简单的遍历，收集每个节点的val，然后对结果翻转，返回","累加","递减","采用递归的方式，不断进入下一个节点，当到达最后一个节点指向null时，开始返回","链表","链表中环的入口结点"],"docs/swordoffer/dynamic_programing.html":["&&","(arr","(array","(cur","(f[i]","(int","(price","(resr","+","//f[i]表示以arr[i]这个数为结尾的，连续子数组的最大和","//f[i]表示以array[i","//f_0是当天手里无股票，","//空间压缩dp","0)","0,","02.算法","0;","0;//当前的滑窗","0;//结果集滑窗","1)","101;","1;","1];","1]这个数为结尾的，连续子数组的最大和","=","==","arr)","arr.length","arr.length;","arr[0],","arr[0];","array)","array.length","array.length;","cur","f","f[0]","f[0];","f_0","f_1","f_1是当天手里有股票","findgreatestsumofsubarray(int[]","int","int[]","int[]{};","int[n","int[n];","jz42连续子数组的最大和","jz63","jz85","l","maxprofit(int[]","maxsum","n","new","null","prev","prev;","prices)","prices.length","prices.length;","prices[0];","public","r","re","resl","resr","return","{","||","买卖股票的最好时机(一)","动态规划","方法1.动态规划","方法1:朴素版dp","方法2:空间压缩dp","方法2：空间压缩dp","连续子数组的最大和(二)"],"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":["\",","(i,","(int","(j,","(n","(x,","(y,",")","*","*/","...","/**","//按矩阵的的列翻转","//考虑每一个环","//转置","0","0.如何将一张图翻转90度","01.07.","0;","1","1.为了解决给定的问题，有两个任务。","1.创建一个大小为","1.在n边的矩阵中有n/2个正方形或环。一次处理一个正方形，运行一个环，一次遍历矩阵一个环，即从","1.如何原地将矩阵旋转90度","1.查找矩阵的转置。","1.翻转每一行","10","10,","10},","11","11,","12","12,","12},","12}};","13","13,","14","14,","15","15,","15},","16","16}","16}}","16}};","17","17,","18","18,","19","19,","1:","1;","1，循环计数器为","2","2*i。","2,","2.以螺旋形式开始遍历矩阵并将当前环的元素存储在","2.再论如何原地将矩阵旋转90度","2.反转转置的列。","2.执行转置","2.矩阵的转置是当矩阵翻转其对角线时，即元素的行索引变为列索引，反之亦然。","2.考虑当前正方形中的","20","20},","21","22","22,","23","23,","24","24,","25","25}","2:","3","3,","3.如何原地将矩阵旋转180度","3.对于存储在","3.所以在从","3.找到矩阵的转置。","3.要反转转置矩阵的列，请运行两个嵌套循环，外循环从","4","4,","4.对矩阵的每个环重复此过程。","4.将矩阵的每个环逆时针旋转","4.当前组中的元素是","4.转置的反转列","48.","4},","4✖️4","5","5.在最后一次遍历矩阵中再次螺旋并将","5},","6","6,","6}}","7","7,","8","8,","867.","8},","9","9,","90",":","=","=0;i",">",">=","@param","[i,k]","[k,i]","^","_1st","_1st();","_2nd","_2nd();","_3rd","_3rd();","_4th","_4th();","_5th","_5th();","_6th","_6th();","args)","c","case","class","col","dest","dest)","dest);","display(int[][]","for(int","handler","handler.display(dest,","handler.display(matrix);","handler.display(matrix,","handler.display(source,","handler.rotate(m,","handler.rotate(matrix);","handler.rotatematrix(matrix);","handler.rotatematrix(matrix,","i)","input","input:","int","int[][]","int[][]{","int[c][r];","int[n][m];","i。","j","j)","j])对调，其中","k","k，则不要旋转它。","k，将矩阵的每个环逆时针旋转","m","m);","m*n","m,","main(string[]","mat[3][4]","mat[4][4]","matrix","matrix)","matrix,","matrix.length,","matrix.length,c=","matrix.length;","matrix:","matrix[0].length;","matrix[i][j]","matrix[i][j]);","matrix[i][k]","matrix[i][k];","matrix[j][i]","matrix[k][i]","matrix[k][i];","n","n)","n);","n,","n/2","new","o(1)，没有使用到额外的空间","o(1)，没有使用到额外的空间，只是一个变量","output","output:","privat","public","r","re","reversecolumns(int[][]","reversecolumns(matrix);","rotate(int","rotate(int[][]","rotatematrix(int[][]","row","row[count","sourc","source,","source.length,","source[0].length;","source的","static","system.out.printf(\"%d","system.out.println();","t;","temp","temp[]","temp[]。","transpose(int[][]","transpose(matrix);","void","x","x),","x)，现在旋转这4个元素，即(x,","x,","y)","y),","y,","y。","{","{1,","{10,","{11,","{13,","{16,","{21,","{5,","{6,","{9,","{{1,","|","}","};","–","上面已经讨论了如何进行原地的矩阵翻转了，下面再给出另外一种思路","上面的两部分解决了如何旋转90度的问题，那么180度怎么处理？","上面的方式其实是将矩阵翻转90度做了两次，其实有更好的方法","下面的是个例子","不过还有另外一种思路：","个元素","个元素。","个元素组，一次旋转","个环。","中时，跟踪当前环的开始和结束位置。","中的每个环，旋转该子数组","主要的思路是：将矩阵的转置，然后反转转置矩阵的列。","也可以参考2.再论如何原地将矩阵旋转90度，在做第二步翻转的时候，将行翻转变成列翻转","互换。执行两个循环，外循环从","从上图中，可以简单地将矩阵旋转180度，以相反的方式打印给定的矩阵。","从上图我们可以观察到","代码","例如，一个","例子:","其中n是矩阵的行列","其中n是矩阵的长度","其中r和c是矩阵的行列","分别是内循环和外循环的索引。","到","到列数，内循环从","到外循环的索引。","到行数/2，将","到行数，内循环从","参考1.如何原地将矩阵旋转90度，挪动下调换的坐标即可","可以将图视为可以存储在缓冲区中的二维矩阵。","和","因此，一个循环中此类组的数量为n","因此，要找到转置，将位置","图解结果如下：","图解翻转矩阵问题","在将元素存储在","在第一部分已经讨论过，如果利用多余的空间翻转矩阵了，本部分讨论下如何原地空间复杂度的方式翻转矩阵","处的元素与","复杂度分析","如图：可以将m✖️n的矩阵转化为n✖️m矩阵，逻辑如下：","如果任何环中的元素小于等于","如此...","度？","循环到","怎么转呢？","思路","想法很简单，将源矩阵的每一行转换为最终图的所需列，将使用辅助缓冲区来转换图。","想法是以螺旋形式遍历矩阵，","提供了矩阵维度和它的地址。","数组中。","数组的元素复制到矩阵。","方法1（仅打印旋转矩阵）","方法2：原地翻转(转置翻转列两次)","方法3：位置交换","旋转图像","旋转矩阵","时间复杂度：o(n*n)","时间复杂度：o(r*c)","有了上面的这些铺垫，可以来解决几道题目：","比如说需要将下面的矩阵逆时针旋转90度","源图的最后一行","源图的第一行","源图的第二行","源矩阵","的每个循环中运行一个环，循环计数器为","的矩阵将有","的辅助数组","目标图的倒数第二列","目标图的最后一列","目标图的第一列","目标矩阵","空间复杂度:","第一个是找到转置，第二个是在不使用额外空间的情况下反转列。","第一个环由它的第一行、最后一列、最后一行和第一列组成。","第二个环由第二行、倒数第二列、倒数第二行和第二列组成。","第二列和倒数第二列","算法","给定一个","给定一张图片，如何将它旋转","翻转的是第一列和最后一列","要在没有多余空间的情况下解决问题，将数组旋转为正方形，将矩阵划分为正方形或环。","转置矩阵","输出","这一题只需要用到转置的那段代码即可,但是这一题m*n的矩阵，m和n可能不相同，所以用到额外空间，简单模拟即可","这一题等同于48题","这个想法是对于每个方形循环，以逆时针方向交换与矩阵中相应单元格相关的元素，即从上到左、从左到下、从下到右和从右到上一次，只使用一个临时变量来实现这一点。","这是解决这个问题的算法：","阶矩阵和一个值","面试题","顺时针翻转90度后，变成：","题目要求的是原地旋转，顺时针旋转"],"docs/articles/algorithm/backtracing/图解回溯算法.html":["0","1","1.骑士巡回问题","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","32","33","34","35","36","37","38","39","4","40","41","42","43","44","45","46","47","48","49","5","50","51","52","53","54","55","56","57","58","59","6","60","61","62","63","7","8","9",":","=","backtrac","input","n","output:","例如，考虑以下骑士巡回问题","例子","回溯是一种算法范例，尝试不同的解决方案，直到找到一个「有效」的解决方案。通常使用回溯解决的问题具有以下共同特性。这些问题只能通过尝试每种可能的配置来解决，并且每种配置只尝试一次。对于这些问题，一个简单的解决方案是尝试所有配置，并输出符合给定问题约束的配置。回溯是一种渐进式的工作方式，是对原始解决方案的优化，所有可能的配置都会生成并尝试。","图解回溯算法","在一个8✖️8的棋盘上，骑士所走的点如下:","描述","给出一个n✖️n的棋盘，骑士被放在一块空棋盘的第一块上。按照象棋的规则，骑士的移动必须准确地访问每个方块一次。打印每个单元格的访问顺序。"],"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":["%","&","(1","(int",")","*","*/","/**","0,","001100011","0;","0],","0，说明第","1","1,","10","101","101，x","11","110，x","11，x","1;","1]","1],","1]]","1。","1。如果该表达式的值大于零，那么第k","1的值为","1：","1；","2","3","5","6","=","=1","=10","=2","==>(1,2)",">0，说明第",">=",">>=","@param","@return","[0,","[1,","[[0,","c","c)","decode(int","encode(int[][]","i=idx/n=6/4","idx=6=i*n+j=1*4+2=6","int","int[][]","int[r][c];","j=idx%n=6%4","k位（最低位为第0","matrix","matrix,","matrix;","matrix[r][c]","new","privat","r","r,","refer","return","x","x,","x，我们可以用x","{","}","一个十进制的数如何转化为二进制的矩阵：","一个矩阵转化成二进制数再转化成十进制数：","举例","二维矩阵","二维矩阵的常见转换技巧","二进制表示的第","位不为","位为","位）是否为","例如当","例如当x","如下图所示，每一个二维矩阵对应的，按第1行到第m行依次排列所得到的一维数组的坐标，可以互相转换","如第2行第3列的16这个数，其矩阵的坐标是(1,2),而映射到一维数组的时候，其对应的下标索引idx=6","对于十进制整数","对应的十进制是99","将上述的一维矩阵看成一个二进制的数是：","得到","得到矩阵的坐标为(i,j)","怎么转化","技巧1：二维矩阵按索引拍平到一维数组","技巧2：将矩阵当成二进制转化成十进制","时，x","来判断","源数","的二进制表示为","的二进制表示的最低位，它等价于x","的值为0。","矩阵的列数","矩阵的行数","给定一个矩阵：","而如何通过idx=6反向得到矩阵的坐标呢？","背景知识","该矩阵如果按每行依次排开的话，可以转换成一维矩阵","转化为全零矩阵的最少反转次数","："]},"length":26},"tokenStore":{"root":{"0":{"0":{"1":{"1":{"0":{"0":{"0":{"1":{"1":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},".":{"0":{"1":{"docs":{},".":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}},"7":{"docs":{},".":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},"2":{"docs":{},".":{"docs":{},"算":{"docs":{},"法":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}},"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.008928571428571428},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0055762081784386614},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.009656652360515022},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.006376195536663124},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.004281949934123847},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.02857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.017811704834605598},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.019230769230769232},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.028169014084507043},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.01152073732718894},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.024390243902439025},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.033582089552238806},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0075107296137339056},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.013071895424836602},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.020722635494155154},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.01568627450980392},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.010743801652892562},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.01818181818181818}},"/":{"docs":{},"/":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"记":{"docs":{},"录":{"docs":{},"边":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{},",":{"docs":{},"边":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}},"docs":{}}}}}}}}}}}}},"交":{"docs":{},"易":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"两":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"状":{"docs":{},"态":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}},"计":{"docs":{},"数":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"滑":{"docs":{},"窗":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}}}}}},"结":{"docs":{},"果":{"docs":{},"集":{"docs":{},"滑":{"docs":{},"窗":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}}}}}}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.017657992565055763},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.027649769585253458},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.021520803443328552},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.026041666666666668},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.02727272727272727}}},"}":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"}":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}},".":{"0":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{},"抽":{"docs":{},"象":{"docs":{},"模":{"docs":{},"型":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}},"如":{"docs":{},"何":{"docs":{},"将":{"docs":{},"一":{"docs":{},"张":{"docs":{},"图":{"docs":{},"翻":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"docs":{}}}}}}}}}},"(":{"1":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"天":{"docs":{},"没":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"[":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}},"]":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"第":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}},"1":{"0":{"0":{"0":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},"~":{"3":{"0":{"0":{"0":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"~":{"9":{"0":{"0":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"docs":{}},"docs":{}},"docs":{}},"_":{"0":{"0":{"5":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"数":{"docs":{},"量":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"1":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},";":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},"，":{"docs":{},"x":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}},"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00860832137733142},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.014049586776859505},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"/":{"docs":{},"/":{"docs":{},"每":{"docs":{},"次":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"后":{"docs":{},"添":{"docs":{},"加":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"末":{"docs":{},"位":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"~":{"9":{"0":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"docs":{}},"docs":{}},"}":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"1":{"0":{"docs":{},"，":{"docs":{},"x":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}},"1":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.014049586776859505},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.006611570247933884}}},".":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}},"，":{"docs":{},"x":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}}},"2":{"1":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.014049586776859505},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"}":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}}},"}":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"3":{"0":{"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}},"1":{"docs":{},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.011570247933884297},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},"}":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"4":{"0":{"docs":{},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"1":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"5":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.011570247933884297},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148}}}},"5":{"1":{"docs":{},".":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"5":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.011570247933884297},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}}},"}":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"6":{"0":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.011570247933884297},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"0":{"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{}},"docs":{}},"}":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"}":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}}}}},"7":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"8":{"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"9":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.02040816326530612},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.014084507042253521},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.004782146652497344},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0256198347107438},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.01818181818181818}},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.01020408163265306},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.019230769230769232},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0029644268774703555},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.008047210300429184},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.007423117709437964}}},"=":{"4":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}},"docs":{}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"+":{"docs":{},"f":{"docs":{},"i":{"docs":{},"b":{"docs":{},"(":{"docs":{},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},".":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"，":{"docs":{},"得":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"该":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"键":{"docs":{},"在":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"且":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"由":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"，":{"docs":{},"得":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"都":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"都":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"p":{"docs":{},"和":{"docs":{},"q":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"即":{"docs":{},"可":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"接":{"docs":{},"受":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"入":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"将":{"docs":{},"源":{"docs":{},"数":{"docs":{},"组":{"docs":{},"按":{"docs":{},"k":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"分":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"组":{"docs":{},"不":{"docs":{},"够":{"docs":{},"k":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"维":{"docs":{},"持":{"docs":{},"现":{"docs":{},"状":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"和":{"docs":{},"b":{"docs":{},"o":{"docs":{},"b":{"docs":{},"均":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"两":{"docs":{},"段":{"docs":{},"拿":{"docs":{},"走":{"docs":{},"a":{"docs":{},"或":{"docs":{},"者":{"docs":{},"b":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"或":{"docs":{},"者":{"docs":{},"b":{"docs":{},"b":{"docs":{},"b":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"走":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"或":{"docs":{},"者":{"docs":{},"b":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"统":{"docs":{},"计":{"docs":{},"拿":{"docs":{},"走":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"分":{"docs":{},"别":{"docs":{},"记":{"docs":{},"为":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"a":{"docs":{},">":{"docs":{},"b":{"docs":{},"即":{"docs":{},"可":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"解":{"docs":{},"决":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}},"在":{"docs":{},"n":{"docs":{},"边":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"有":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"个":{"docs":{},"正":{"docs":{},"方":{"docs":{},"形":{"docs":{},"或":{"docs":{},"环":{"docs":{},"。":{"docs":{},"一":{"docs":{},"次":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"方":{"docs":{},"形":{"docs":{},"，":{"docs":{},"运":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"环":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"一":{"docs":{},"个":{"docs":{},"环":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"如":{"docs":{},"何":{"docs":{},"原":{"docs":{},"地":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"旋":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"docs":{}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"转":{"docs":{},"置":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}},"翻":{"docs":{},"转":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"骑":{"docs":{},"士":{"docs":{},"巡":{"docs":{},"回":{"docs":{},"问":{"docs":{},"题":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}}}}}}}},"或":{"docs":{},"“":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"docs":{}},"]":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}},"docs":{}}},"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.007434944237918215},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.01818181818181818}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.002635046113306983},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.007142857142857143},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.015267175572519083},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.028169014084507043},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.02973977695167286},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.01152073732718894},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.006437768240343348},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.026143790849673203},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.010095642933049946},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.015625},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.01818181818181818}},"/":{"docs":{},"/":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}},"]":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.010714285714285714},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"/":{"docs":{},"/":{"docs":{},"多":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},",":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"=":{"0":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}},"表":{"docs":{},"示":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"了":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"，":{"docs":{},"为":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"+":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"}":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"没":{"docs":{},"有":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"买":{"docs":{},"入":{"docs":{},"了":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}}}},"3":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"j":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}},"k":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"即":{"docs":{},"答":{"docs":{},"案":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},",":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"因":{"docs":{},"为":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"比":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"长":{"docs":{},"度":{"docs":{},"小":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}},"`":{"docs":{},",":{"docs":{},"因":{"docs":{},"为":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"`":{"docs":{},"比":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"`":{"docs":{},"长":{"docs":{},"度":{"docs":{},"小":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"$":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}},"​":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},";":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"能":{"docs":{},"否":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"时":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"，":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}},"]":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"为":{"0":{"docs":{},"位":{"docs":{},"置":{"docs":{},"往":{"docs":{},"前":{"docs":{},"推":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}}},"docs":{}},"}":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028}}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"/":{"docs":{},"/":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}},"e":{"9":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}},"~":{"9":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"docs":{}},"(":{"5":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}},"=":{"0":{"docs":{},"+":{"docs":{},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"docs":{},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"天":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"是":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"i":{"docs":{},"天":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"买":{"docs":{},"入":{"docs":{},"了":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"要":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"i":{"docs":{},"天":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"天":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"天":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"[":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},":":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"为":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"。":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"如":{"docs":{},"果":{"docs":{},"该":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"零":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"第":{"docs":{},"k":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}},"：":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"；":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}},"2":{"0":{"0":{"5":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"docs":{}},"2":{"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}},"docs":{}},"3":{"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}}},"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}},"docs":{}},"4":{"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{}},"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}},"}":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"8":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}},",":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"9":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{},".":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"7":{"docs":{},".":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/sweep_line.html":{"ref":"docs/leetcode/classify/sweep_line.html","tf":0.25}}}},"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"2":{"5":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"3":{"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"4":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"5":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},"]":{"docs":{},"开":{"docs":{},"始":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"}":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"6":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"7":{"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"8":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"9":{"7":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.023809523809523808},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.005738880918220947},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.02231404958677686},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.00743801652892562}}},".":{"0":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}},"1":{"docs":{},".":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"组":{"docs":{},"装":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{},"左":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"k":{"docs":{},"组":{"docs":{},"从":{"docs":{},"左":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"取":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"组":{"docs":{},"装":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{},"右":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"k":{"docs":{},"组":{"docs":{},"从":{"docs":{},"右":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"取":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"不":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"且":{"docs":{},"小":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"内":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{},"为":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"键":{"docs":{},"不":{"docs":{},"在":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"且":{"docs":{},"小":{"docs":{},"于":{"docs":{},"范":{"docs":{},"围":{"docs":{},"（":{"docs":{},"数":{"docs":{},"组":{"docs":{},"）":{"docs":{},"内":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"–":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"值":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"相":{"docs":{},"同":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"不":{"docs":{},"同":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"本":{"docs":{},"身":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"p":{"docs":{},"和":{"docs":{},"q":{"docs":{},"不":{"docs":{},"在":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"面":{"docs":{},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"并":{"docs":{},"建":{"docs":{},"立":{"docs":{},"映":{"docs":{},"射":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"，":{"docs":{},"则":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"位":{"docs":{},"于":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"。":{"docs":{},"调":{"docs":{},"用":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}},"对":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"重":{"docs":{},"复":{"docs":{},"步":{"docs":{},"骤":{"1":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"螺":{"docs":{},"旋":{"docs":{},"形":{"docs":{},"式":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"并":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"环":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"论":{"docs":{},"如":{"docs":{},"何":{"docs":{},"原":{"docs":{},"地":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"旋":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"docs":{}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"转":{"docs":{},"置":{"docs":{},"的":{"docs":{},"列":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"转":{"docs":{},"置":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"转":{"docs":{},"置":{"docs":{},"是":{"docs":{},"当":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"其":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"时":{"docs":{},"，":{"docs":{},"即":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"行":{"docs":{},"索":{"docs":{},"引":{"docs":{},"变":{"docs":{},"为":{"docs":{},"列":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"反":{"docs":{},"之":{"docs":{},"亦":{"docs":{},"然":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"方":{"docs":{},"形":{"docs":{},"中":{"docs":{},"的":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.004782146652497344}},"/":{"docs":{},"/":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"]":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}},"(":{"1":{"1":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}},"docs":{}},"*":{"docs":{},"i":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},":":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"3":{"0":{"7":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"1":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"2":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"3":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"4":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"5":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"6":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}},"7":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"8":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"9":{"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"5":{"docs":{},".":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.01020408163265306},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.021487603305785124},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}},".":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"不":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"且":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"，":{"docs":{},"得":{"docs":{},"“":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"键":{"docs":{},"在":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"由":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"，":{"docs":{},"得":{"docs":{},"“":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"p":{"docs":{},"和":{"docs":{},"q":{"docs":{},"不":{"docs":{},"在":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"了":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"面":{"docs":{},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"，":{"docs":{},"则":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"位":{"docs":{},"于":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"。":{"docs":{},"调":{"docs":{},"用":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}},"何":{"docs":{},"原":{"docs":{},"地":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"旋":{"docs":{},"转":{"1":{"8":{"0":{"docs":{},"度":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"哑":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"让":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{},"断":{"docs":{},"开":{"docs":{},"，":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"到":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"弹":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"内":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"步":{"docs":{},"骤":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"复":{"docs":{},"制":{"docs":{},"，":{"docs":{},"让":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"和":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"分":{"docs":{},"别":{"docs":{},"指":{"docs":{},"向":{"docs":{},"这":{"docs":{},"个":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"借":{"docs":{},"助":{"docs":{},"左":{"docs":{},"右":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"拼":{"docs":{},"装":{"docs":{},"结":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"从":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"找":{"docs":{},"到":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"转":{"docs":{},"置":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}},"要":{"docs":{},"反":{"docs":{},"转":{"docs":{},"转":{"docs":{},"置":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"列":{"docs":{},"，":{"docs":{},"请":{"docs":{},"运":{"docs":{},"行":{"docs":{},"两":{"docs":{},"个":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"外":{"docs":{},"循":{"docs":{},"环":{"docs":{},"从":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},"(":{"5":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.00743801652892562}}}},"4":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}},"1":{"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"2":{"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},",":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},".":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}},"3":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"4":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"5":{"0":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"6":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"7":{"5":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"8":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"9":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.02231404958677686},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"不":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"且":{"docs":{},"大":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"内":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{},"为":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"键":{"docs":{},"不":{"docs":{},"在":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"且":{"docs":{},"大":{"docs":{},"于":{"docs":{},"范":{"docs":{},"围":{"docs":{},"（":{"docs":{},"数":{"docs":{},"组":{"docs":{},"）":{"docs":{},"内":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"p":{"docs":{},"和":{"docs":{},"q":{"docs":{},"分":{"docs":{},"布":{"docs":{},"在":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"两":{"docs":{},"侧":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"为":{"docs":{},"p":{"docs":{},"和":{"docs":{},"q":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"上":{"docs":{},"述":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"均":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"整":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"结":{"docs":{},"束":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"对":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"环":{"docs":{},"重":{"docs":{},"复":{"docs":{},"此":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"环":{"docs":{},"逆":{"docs":{},"时":{"docs":{},"针":{"docs":{},"旋":{"docs":{},"转":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}},"转":{"docs":{},"置":{"docs":{},"的":{"docs":{},"反":{"docs":{},"转":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"}":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.006611570247933884}}}},"✖":{"docs":{},"️":{"4":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"docs":{}}}},"5":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"1":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}},"2":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"3":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"4":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"5":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"6":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.007173601147776184},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"7":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"8":{"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"9":{"0":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.027210884353741496},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.02066115702479339},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"再":{"docs":{},"次":{"docs":{},"螺":{"docs":{},"旋":{"docs":{},"并":{"docs":{},"将":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}},"}":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}},"6":{"0":{"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"1":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"2":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},".":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}},"3":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}},"5":{"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}},"8":{"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"docs":{}},"9":{"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}},"docs":{}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.010043041606886656},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.02066115702479339},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},".":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148}}},"}":{"docs":{},"}":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"7":{"0":{"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}},"1":{"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{},".":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"2":{"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/math.html":{"ref":"docs/leetcode/classify/math.html","tf":0.2}}}},"docs":{}},"3":{"9":{"docs":{},".":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}},"docs":{}},"4":{"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}},"8":{"docs":{},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.01020408163265306},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.019008264462809916},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.00743801652892562}}}},"8":{"1":{"docs":{},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"3":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"6":{"7":{"docs":{},".":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.019008264462809916},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.02564102564102564}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"]":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}},".":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}},"}":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148}}}}},"9":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},".":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"1":{"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}}}},"docs":{}},"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"5":{"4":{"docs":{},".":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"docs":{}},"6":{"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"8":{"7":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}},"docs":{},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.019008264462809916},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"docs":{},"c":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.01607142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.02727272727272727}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}}}}}}}}}}}}}}}}},"l":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348}}}}}}}}}}}},"[":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"+":{"docs":{},"+":{"docs":{},")":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332}},"a":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"r":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0055762081784386614},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"[":{"2":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"docs":{}},"docs":{},"]":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576}},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},":":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"u":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"[":{"docs":{},"c":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.011661807580174927},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}},"u":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.012845849802371542},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.004281949934123847},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},".":{"docs":{},"v":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"p":{"docs":{},"o":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}},"t":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"2":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}}},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}},"i":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},"/":{"docs":{},"/":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"s":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"p":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395}}}},"docs":{}}}}},"docs":{}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"/":{"docs":{},"/":{"docs":{},"容":{"docs":{},"量":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"2":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"4":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},":":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}},")":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"链":{"docs":{},"接":{"docs":{},"：":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"k":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}}}},"2":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.005738880918220947}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},":":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}},"p":{"1":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0032938076416337285},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.006802721088435374},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.01555793991416309},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.005302226935312832},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.010743801652892562},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"(":{"docs":{},"l":{"1":{"docs":{},",":{"docs":{},"l":{"2":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}}}},"docs":{}},"o":{"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}},"a":{"docs":{},",":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.005313496280552604},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.007438894792773645},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},"/":{"docs":{},"/":{"docs":{},"交":{"docs":{},"易":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"两":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"状":{"docs":{},"态":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}},"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"}":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"d":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0036231884057971015},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"/":{"docs":{},"/":{"docs":{},"每":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"的":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.020421607378129116},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.019642857142857142},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.030534351145038167},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.019230769230769232},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.028169014084507043},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.022304832713754646},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.04178814382896016},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.02534562211981567},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.018651362984218076},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.026119402985074626},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.015021459227467811},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.013071895424836602},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.020191285866099893},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.034722222222222224},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.0196078431372549},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.019088016967126194},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.00743801652892562}}}}}},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},"'":{"docs":{},",":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}},"]":{"docs":{},"'":{"docs":{},",":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}},"}":{"docs":{},"'":{"docs":{},",":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"k":{"docs":{},",":{"docs":{},"v":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"s":{"docs":{},"h":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553}}}}}},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"向":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"推":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.006362672322375398}},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}},"(":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"q":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"/":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"（":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"使":{"docs":{},"用":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"）":{"docs":{},"）":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"去":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"即":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"但":{"docs":{},"是":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"栈":{"docs":{},"没":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"了":{"docs":{},"需":{"docs":{},"要":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"?":{"docs":{},"将":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"断":{"docs":{},"往":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"栈":{"docs":{},"推":{"docs":{},"，":{"docs":{},"推":{"docs":{},"完":{"docs":{},"为":{"docs":{},"止":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"均":{"docs":{},"无":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"报":{"docs":{},"错":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"否":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}},"和":{"docs":{},"q":{"docs":{},"都":{"docs":{},"在":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"即":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"上":{"docs":{},"，":{"docs":{},"而":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"p":{"docs":{},"或":{"docs":{},"者":{"docs":{},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}},"未":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"p":{"docs":{},"或":{"docs":{},"者":{"docs":{},"q":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"即":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"上":{"docs":{},"，":{"docs":{},"而":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"p":{"docs":{},"或":{"docs":{},"者":{"docs":{},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}},"未":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"p":{"docs":{},"或":{"docs":{},"者":{"docs":{},"q":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"是":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"时":{"docs":{},"，":{"docs":{},"与":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"在":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"中":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"是":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"p":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}},"[":{"docs":{},"p":{"1":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"docs":{}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"回":{"docs":{},"到":{"docs":{},"起":{"docs":{},"点":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"步":{"docs":{},"调":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"的":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{},"入":{"docs":{},"口":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"1":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}},"t":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}},"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}},"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.014084507042253521},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.006907545164718385}},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562}}}}},"c":{"docs":{},"k":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.013605442176870748},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.007774538386783284},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179}},"/":{"docs":{},"/":{"docs":{},"存":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.0457516339869281},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.009917355371900827}}}}}},"r":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.028169014084507043},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.013824884792626729},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.005844845908607864}},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.00536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"[":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}}}}}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}}}},"k":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.007142857142857143},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.014925373134328358}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"比":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"，":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"=":{"1":{"docs":{},";":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"docs":{}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.02040816326530612}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}},"\"":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"%":{"docs":{},"d":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"]":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"b":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},"docs":{}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.010178117048346057},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028}}}}},"h":{"docs":{},"u":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"为":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}},"z":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},")":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.018779342723004695}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.007423117709437964}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}}}}}}}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"是":{"docs":{},"初":{"docs":{},"始":{"docs":{},"时":{"docs":{},"的":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},"错":{"docs":{},"开":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"r":{"docs":{},"c":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"e":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}},"docs":{}},"的":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"u":{"docs":{},"b":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}}}}},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"x":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.007423117709437964}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.009544008483563097}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.008483563096500531}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},"o":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0125},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.01152073732718894},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00860832137733142},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562}}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"[":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}},",":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.010043041606886656},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.01072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302}}},"s":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"[":{"docs":{},"j":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"这":{"docs":{},"个":{"docs":{},"区":{"docs":{},"间":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"★":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}},"个":{"docs":{},"人":{"docs":{},"主":{"docs":{},"页":{"docs":{},"【":{"docs":{},"阿":{"docs":{},"飞":{"docs":{},"算":{"docs":{},"法":{"docs":{},"】":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}},"数":{"docs":{},"（":{"docs":{},"基":{"docs":{},"于":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"划":{"docs":{},"分":{"docs":{},"，":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"图":{"docs":{},"解":{"docs":{},"）":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}},"组":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"旋":{"docs":{},"转":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}},"环":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"关":{"docs":{},"注":{"docs":{},"微":{"docs":{},"信":{"docs":{},"公":{"docs":{},"众":{"docs":{},"号":{"docs":{},"，":{"docs":{},"进":{"docs":{},"群":{"docs":{"./":{"ref":"./","tf":0.14285714285714285}}}}}}}}}}},"于":{"docs":{},"i":{"docs":{},"f":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"倒":{"docs":{},"序":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"参":{"docs":{},"考":{"docs":{},"这":{"docs":{},"篇":{"docs":{},"：":{"docs":{},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"之":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"简":{"docs":{},"介":{"docs":{"./":{"ref":"./","tf":10}}},"化":{"docs":{},"路":{"docs":{},"径":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"易":{"docs":{},"银":{"docs":{},"行":{"docs":{},"系":{"docs":{},"统":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"单":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"收":{"docs":{},"集":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"结":{"docs":{},"果":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"1":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.013636363636363636}}},"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"[":{"docs":{},"]":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.006802721088435374}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"v":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}},"i":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0029644268774703555},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0125},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.01272264631043257},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.02403846153846154},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.023474178403755867},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00860832137733142},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.014925373134328358},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.013412017167381975},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.013071895424836602},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.018065887353878853},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.011764705882352941},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.010743801652892562},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.013636363636363636}},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}},"d":{"docs":{},"x":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.011764705882352941}}}},"s":{"docs":{},"o":{"docs":{},"d":{"docs":{},"d":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}}},"l":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"2":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.00929368029739777},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},"e":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},"n":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}},"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"a":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},"b":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"i":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"n":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}},"!":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"q":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}},")":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"\"":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"u":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.005270092226613966},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}},"p":{"docs":{},"o":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"r":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"[":{"docs":{},"c":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"s":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"s":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"p":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{}}}}},"docs":{}}}}}}}},"f":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}},"]":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.004281949934123847}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}},"k":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"e":{"docs":{},"y":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"docs":{}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},"[":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.008047210300429184}},"s":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"2":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}},"docs":{},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"m":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}}},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"p":{"1":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}},"o":{"docs":{},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.005738880918220947},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},"r":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.005599472990777339},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.009544008483563097}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.005302226935312832}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}}}}}}}},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"p":{"docs":{},"o":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"s":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.005302226935312832}}}}},"u":{"docs":{},"b":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"x":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"m":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348}}}},"docs":{},"i":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"l":{"docs":{},"+":{"docs":{},"+":{"docs":{},")":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302}}}}},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"o":{"docs":{},"t":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}},"t":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}},"o":{"docs":{},"p":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"+":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}}},"a":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"r":{"docs":{},"r":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}},"[":{"docs":{},"(":{"docs":{},"n":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"a":{"docs":{},"y":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"j":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}},"x":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"y":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"+":{"1":{"docs":{},"=":{"docs":{},"=":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.01020408163265306},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.014163372859025032},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.008928571428571428},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.01272264631043257},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.027881040892193308},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.008746355685131196},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00860832137733142},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.016094420600858368},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.013071895424836602},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.014346439957492029},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.015625}},"=":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.014925373134328358},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}}}},"/":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.00929368029739777},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225}},"/":{"2":{"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.002635046113306983},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302}},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"(":{"docs":{},"两":{"docs":{},"端":{"docs":{},"都":{"docs":{},"可":{"docs":{},"进":{"docs":{},"出":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}},"堆":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}},"普":{"docs":{},"通":{"docs":{},"队":{"docs":{},"列":{"docs":{},"(":{"docs":{},"一":{"docs":{},"端":{"docs":{},"进":{"docs":{},"另":{"docs":{},"一":{"docs":{},"端":{"docs":{},"出":{"docs":{},")":{"docs":{},":":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"栈":{"docs":{},"首":{"docs":{},"元":{"docs":{},"素":{"docs":{},"后":{"docs":{},"，":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"会":{"docs":{},"出":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}},"将":{"docs":{},"会":{"docs":{},"出":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"3":{"docs":{},"]":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"4":{"docs":{},"，":{"0":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"3":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}}},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"5":{"docs":{},",":{"3":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"需":{"docs":{},"要":{"docs":{},"断":{"docs":{},"开":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"k":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},":":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"子":{"docs":{},"集":{"docs":{},"或":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"v":{"docs":{},":":{"docs":{},"该":{"docs":{},"值":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}},"经":{"docs":{},"剩":{"docs":{},"下":{"1":{"docs":{},"个":{"docs":{},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"docs":{}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"1":{"docs":{},":":{"docs":{},"率":{"docs":{},"先":{"docs":{},"找":{"docs":{},"到":{"docs":{},"p":{"docs":{},"或":{"docs":{},"者":{"docs":{},"q":{"docs":{},"，":{"docs":{},"先":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"后":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"选":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"优":{"docs":{},"先":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"：":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"收":{"docs":{},"集":{"docs":{},"的":{"docs":{},"是":{"docs":{},"p":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"p":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"直":{"docs":{},"系":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},":":{"docs":{},"找":{"docs":{},"q":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"的":{"docs":{},"即":{"docs":{},"是":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"表":{"docs":{},"示":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"跃":{"docs":{},"的":{"docs":{},"步":{"docs":{},"数":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"k":{"docs":{},"存":{"docs":{},"的":{"docs":{},"是":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"（":{"docs":{},"下":{"docs":{},"标":{"docs":{},"）":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"直":{"docs":{},"压":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"添":{"docs":{},"加":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"串":{"docs":{},"联":{"docs":{},"两":{"docs":{},"段":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"来":{"docs":{},"标":{"docs":{},"识":{"docs":{},"是":{"docs":{},"否":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"，":{"docs":{},"控":{"docs":{},"制":{"docs":{},"\"":{"docs":{},")":{"docs":{},"\"":{"docs":{},"边":{"docs":{},"界":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"一":{"docs":{},"段":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"去":{"docs":{},"掉":{"docs":{},"首":{"docs":{},"位":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"哑":{"docs":{},"结":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"回":{"docs":{},"到":{"docs":{},"起":{"docs":{},"始":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"溯":{"docs":{},"过":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"大":{"docs":{},"根":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"从":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"底":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"头":{"docs":{},"插":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"个":{"docs":{},"的":{"docs":{},"话":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"且":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"经":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"已":{"docs":{},"经":{"docs":{},"相":{"docs":{},"遇":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"是":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"是":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"右":{"docs":{},"边":{"docs":{},"括":{"docs":{},"号":{"docs":{},"，":{"docs":{},"且":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"意":{"docs":{},"的":{"docs":{},"右":{"docs":{},"边":{"docs":{},"括":{"docs":{},"号":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"看":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"不":{"docs":{},"是":{"docs":{},"成":{"docs":{},"对":{"docs":{},"的":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"docs":{}}}}},"基":{"docs":{},"准":{"docs":{},"的":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"高":{"docs":{},"度":{"docs":{},"比":{"docs":{},"其":{"docs":{},"左":{"docs":{},"侧":{"docs":{},"的":{"docs":{},"l":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"大":{"docs":{},"，":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"形":{"docs":{},"成":{"docs":{},"雨":{"docs":{},"水":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"比":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"大":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"能":{"docs":{},"跳":{"docs":{},"跃":{"docs":{},"到":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"位":{"docs":{},"于":{"docs":{},"上":{"docs":{},"一":{"docs":{},"位":{"docs":{},"t":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"一":{"docs":{},"位":{"docs":{},"被":{"docs":{},"对":{"docs":{},"冲":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"，":{"docs":{},"而":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"已":{"docs":{},"经":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"了":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"没":{"docs":{},"有":{"docs":{},"环":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"环":{"docs":{},"状":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"自":{"docs":{},"己":{"docs":{},"指":{"docs":{},"向":{"docs":{},"自":{"docs":{},"己":{"docs":{},"即":{"docs":{},"可":{"docs":{},"退":{"docs":{},"出":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"k":{"docs":{},":":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"v":{"docs":{},":":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179}}}}}}},"字":{"docs":{},"符":{"docs":{},"s":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"索":{"docs":{},"引":{"docs":{},"例":{"docs":{},"如":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"右":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"侧":{"docs":{},"都":{"docs":{},"不":{"docs":{},"能":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"封":{"docs":{},"闭":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}},"棵":{"docs":{},"子":{"docs":{},"树":{"docs":{},"只":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"符":{"docs":{},"合":{"docs":{},"即":{"docs":{},"可":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"窗":{"docs":{},"口":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}},"，":{"docs":{},"让":{"docs":{},"r":{"docs":{},"自":{"docs":{},"增":{"docs":{},"往":{"docs":{},"右":{"docs":{},"推":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}},"侧":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"节":{"docs":{},"点":{"docs":{},"先":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"入":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"先":{"docs":{},"入":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"后":{"docs":{},"入":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"括":{"docs":{},"号":{"docs":{},"纷":{"docs":{},"纷":{"docs":{},"入":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}},"当":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"的":{"docs":{},"后":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"相":{"docs":{},"同":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}},"r":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"或":{"docs":{},"者":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"结":{"docs":{},"束":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"与":{"docs":{},"下":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"如":{"docs":{},"果":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"跳":{"docs":{},"下":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"的":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"空":{"docs":{},"，":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"非":{"docs":{},"空":{"docs":{},"，":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"加":{"docs":{},"\"":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"要":{"docs":{},"不":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"就":{"docs":{},"一":{"docs":{},"直":{"docs":{},"在":{"docs":{},"循":{"docs":{},"环":{"docs":{},"里":{"docs":{},"绕":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"比":{"docs":{},"较":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}}}}}}},"docs":{}}}}}}},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}},"索":{"docs":{},"引":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"在":{"docs":{},"买":{"docs":{},"入":{"docs":{},"（":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"算":{"docs":{},"负":{"docs":{},"债":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"找":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"中":{"docs":{},"点":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"切":{"docs":{},"分":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"标":{"docs":{},"识":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"进":{"docs":{},"来":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"二":{"docs":{},"次":{"docs":{},"相":{"docs":{},"遇":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"翻":{"docs":{},"转":{"docs":{},"第":{"docs":{},"二":{"docs":{},"段":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"第":{"docs":{},"二":{"docs":{},"段":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"结":{"docs":{},"果":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}},"而":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"是":{"4":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"是":{"5":{"docs":{},"，":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"是":{"docs":{},"空":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"剪":{"docs":{},"枝":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"处":{"docs":{},"理":{"docs":{},"到":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"获":{"docs":{},"取":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"2":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"docs":{}}}}},"完":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"，":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"链":{"docs":{},"接":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"说":{"docs":{},"明":{"docs":{},"上":{"docs":{},"一":{"docs":{},"步":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"临":{"docs":{},"界":{"docs":{},"点":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"没":{"docs":{},"有":{"docs":{},"了":{"docs":{},"从":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"中":{"docs":{},"拿":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},":":{"docs":{},"[":{"docs":{},"[":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"6":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"1":{"docs":{},",":{"1":{"4":{"docs":{},"]":{"docs":{},"]":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}},"注":{"docs":{},"意":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"索":{"docs":{},"引":{"docs":{},"做":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"s":{"docs":{},"做":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"可":{"docs":{},"行":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遇":{"docs":{},"到":{"docs":{},"+":{"docs":{},"号":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"x":{"docs":{},"f":{"docs":{},"表":{"docs":{},"示":{"docs":{},"滑":{"docs":{},"窗":{"docs":{},"中":{"docs":{},"，":{"docs":{},"相":{"docs":{},"同":{"docs":{},"字":{"docs":{},"符":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"本":{"docs":{},"题":{"docs":{},"只":{"docs":{},"是":{"docs":{},"'":{"docs":{},"t":{"docs":{},"'":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"从":{"docs":{},"索":{"docs":{},"引":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"能":{"docs":{},"否":{"docs":{},"跳":{"docs":{},"跃":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"下":{"docs":{},"标":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"右":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}},"找":{"docs":{},"到":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"数":{"docs":{},"据":{"docs":{},"范":{"docs":{},"围":{"docs":{},"取":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}},"行":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"是":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"表":{"docs":{},"示":{"docs":{},"以":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"，":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"天":{"docs":{},"手":{"docs":{},"里":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}},"，":{"docs":{},"持":{"docs":{},"有":{"docs":{},"的":{"docs":{},"总":{"docs":{},"收":{"docs":{},"益":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"天":{"docs":{},"手":{"docs":{},"里":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"，":{"docs":{},"持":{"docs":{},"有":{"docs":{},"的":{"docs":{},"总":{"docs":{},"收":{"docs":{},"益":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"的":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"要":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"0":{"docs":{},"是":{"docs":{},"当":{"docs":{},"天":{"docs":{},"手":{"docs":{},"里":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}},"docs":{}}},"r":{"docs":{},"表":{"docs":{},"示":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"h":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"右":{"docs":{},"边":{"docs":{},"最":{"docs":{},"高":{"docs":{},"的":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"列":{"docs":{},"表":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"：":{"docs":{},"奇":{"docs":{},"数":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}},"各":{"docs":{},"自":{"docs":{},"上":{"docs":{},"下":{"docs":{},"取":{"docs":{},"整":{"docs":{},"，":{"docs":{},"错":{"docs":{},"开":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}},"始":{"docs":{},"终":{"docs":{},"保":{"docs":{},"持":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"短":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"docs":{}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"结":{"docs":{},"合":{"docs":{},"奇":{"docs":{},"偶":{"docs":{},"性":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}},"时":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},"拿":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"=":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},"`":{"docs":{},"和":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"=":{"docs":{},"[":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},"`":{"docs":{},"举":{"docs":{},"例":{"docs":{},"，":{"docs":{},"当":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"`":{"docs":{},"用":{"docs":{},"完":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"`":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},"`":{"docs":{},"已":{"docs":{},"经":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"`":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},"`":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"发":{"docs":{},"生":{"docs":{},"越":{"docs":{},"界":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"说":{"docs":{},"明":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"`":{"docs":{},"已":{"docs":{},"经":{"docs":{},"用":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"按":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"`":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"计":{"docs":{},"算":{"docs":{},"目":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"`":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},"+":{"docs":{},"k":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}}}}}},"到":{"docs":{},"最":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"一":{"docs":{},"位":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"位":{"docs":{},"数":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"取":{"docs":{},"k":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"左":{"docs":{},"右":{"docs":{},"两":{"docs":{},"侧":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"做":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"步":{"docs":{},"进":{"1":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"上":{"docs":{},"下":{"docs":{},"取":{"docs":{},"整":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"，":{"docs":{},"免":{"docs":{},"去":{"docs":{},"判":{"docs":{},"断":{"docs":{},"奇":{"docs":{},"偶":{"docs":{},"数":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"这":{"docs":{},"个":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"表":{"docs":{},"示":{"docs":{},"在":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"docs":{}}}}}}}}},"里":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"相":{"docs":{},"等":{"docs":{},"高":{"docs":{},"度":{"docs":{},"的":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"，":{"docs":{},"体":{"docs":{},"积":{"docs":{},"是":{"0":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}},"docs":{}}}}}}}}}}}}}}}}}},"一":{"docs":{},"步":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"移":{"docs":{},"除":{"docs":{},"这":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"不":{"docs":{},"管":{"docs":{},"这":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"条":{"docs":{},"件":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"都":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}},"弹":{"docs":{},"出":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}},"固":{"docs":{},"定":{"docs":{},"a":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"s":{"docs":{},"中":{"docs":{},"不":{"docs":{},"至":{"docs":{},"多":{"docs":{},"包":{"docs":{},"含":{"docs":{},"k":{"docs":{},"个":{"docs":{},"c":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"至":{"docs":{},"多":{"docs":{},"包":{"docs":{},"含":{"docs":{},"k":{"docs":{},"个":{"docs":{},"c":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}}}}}}}}}}}}}}}}}}},"统":{"docs":{},"计":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}},"l":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"左":{"docs":{},"边":{"docs":{},"最":{"docs":{},"高":{"docs":{},"的":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"符":{"docs":{},"合":{"docs":{},"单":{"docs":{},"调":{"docs":{},"性":{"docs":{},"的":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}},"从":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"右":{"docs":{},"侧":{"docs":{},"往":{"docs":{},"左":{"docs":{},"找":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"递":{"docs":{},"增":{"docs":{},"地":{"docs":{},"找":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}},"左":{"docs":{},"侧":{"docs":{},"往":{"docs":{},"右":{"docs":{},"找":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"递":{"docs":{},"增":{"docs":{},"地":{"docs":{},"找":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"没":{"docs":{},"有":{"docs":{},"柱":{"docs":{},"子":{"docs":{},"了":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"0":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"单":{"docs":{},"词":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"做":{"docs":{},"切":{"docs":{},"分":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"超":{"docs":{},"过":{"docs":{},"这":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"变":{"docs":{},"得":{"docs":{},"没":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"点":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"出":{"docs":{},"口":{"docs":{},"函":{"docs":{},"数":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"，":{"docs":{},"索":{"docs":{},"引":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"到":{"docs":{},"达":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"或":{"docs":{},"者":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"下":{"docs":{},"标":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"上":{"docs":{},"当":{"docs":{},"前":{"docs":{},"切":{"docs":{},"分":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"枚":{"docs":{},"举":{"docs":{},"所":{"docs":{},"有":{"docs":{},"子":{"docs":{},"集":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"开":{"docs":{},"始":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"全":{"docs":{},"局":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"和":{"docs":{},"局":{"docs":{},"部":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"时":{"docs":{},"，":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"会":{"docs":{},"提":{"docs":{},"前":{"docs":{},"退":{"docs":{},"出":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"卖":{"docs":{},"出":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扣":{"docs":{},"除":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{},"，":{"docs":{},"为":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"上":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"`":{"docs":{},"的":{"docs":{},"话":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"在":{"docs":{},"卖":{"docs":{},"入":{"docs":{},"`":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},"`":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"算":{"docs":{},"负":{"docs":{},"债":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"`":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"`":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"扣":{"docs":{},"除":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"利":{"docs":{},"润":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"最":{"docs":{},"多":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"]":{"docs":{},"步":{"docs":{},"，":{"docs":{},"最":{"docs":{},"少":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"起":{"docs":{},"跳":{"docs":{},"，":{"0":{"docs":{},"没":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"，":{"docs":{},"出":{"docs":{},"去":{"docs":{},"了":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"局":{"docs":{},"部":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"到":{"docs":{},"开":{"docs":{},"头":{"docs":{},"了":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"更":{"docs":{},"新":{"docs":{},"全":{"docs":{},"局":{"docs":{},"的":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"规":{"docs":{},"定":{"docs":{},"买":{"docs":{},"入":{"docs":{},"（":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"利":{"docs":{},"润":{"docs":{},"为":{"docs":{},"负":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}}},"卖":{"docs":{},"出":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"利":{"docs":{},"润":{"docs":{},"为":{"docs":{},"正":{"docs":{},"，":{"docs":{},"即":{"docs":{},"+":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"异":{"docs":{},"或":{"docs":{},"（":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"调":{"docs":{},"用":{"docs":{},"库":{"docs":{},"函":{"docs":{},"数":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}},"跳":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}},"只":{"docs":{},"要":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"即":{"docs":{},"可":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}},"将":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"等":{"docs":{},"于":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"存":{"docs":{},"入":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"探":{"docs":{},"索":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},"收":{"docs":{},"集":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}},"添":{"docs":{},"加":{"docs":{},"结":{"docs":{},"果":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},"进":{"docs":{},"入":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"空":{"docs":{},"间":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"d":{"docs":{},"p":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}},"按":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"的":{"docs":{},"列":{"docs":{},"翻":{"docs":{},"转":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"环":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}},"转":{"docs":{},"置":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}}}},"*":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"*":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.015549076773566569},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}},"=":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}}}},"=":{"0":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},";":{"docs":{},"i":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"1":{"0":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},";":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"2":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.04081632653061224},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.08794466403162056},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0875},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.10432569974554708},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.11057692307692307},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.11737089201877934},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.08921933085501858},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.05830903790087463},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.08064516129032258},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.10043041606886657},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.11567164179104478},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0611587982832618},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.13725490196078433},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.10201912858660998},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.17857142857142858},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.0625},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.09019607843137255},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.05832449628844114},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.13541666666666666},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0371900826446281},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.05909090909090909}},"=":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.022397891963109356},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.033928571428571426},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.023474178403755867},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.013940520446096654},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.029953917050691243},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.010043041606886656},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.017167381974248927},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.015409139213602551},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.011764705882352941},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.043478260869565216},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.052083333333333336}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},">":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},")":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"docs":{}}},"docs":{}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},">":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"0":{"docs":{},"`":{"docs":{},",":{"docs":{},"因":{"docs":{},"为":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"已":{"docs":{},"经":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"`":{"docs":{},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"0":{"docs":{},"`":{"docs":{},"的":{"docs":{},"值":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},">":{"0":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"第":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}},"2":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"3":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"4":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},"5":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"就":{"docs":{},"是":{"5":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{}}}}}}}}}}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00691699604743083},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.017811704834605598},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.007434944237918215},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/leetcode/classify/sweep_line.html":{"ref":"docs/leetcode/classify/sweep_line.html","tf":0.25},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}},"=":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"l":{"1":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"docs":{}},">":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}},"=":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"docs":{}}},"docs":{}}},"@":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.006505576208178439},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.02727272727272727}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}}}}}}},"[":{"0":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}},"1":{"2":{"8":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{}},"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"docs":{}}},"5":{"docs":{},",":{"1":{"1":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},"]":{"docs":{},"这":{"docs":{},"个":{"docs":{},"区":{"docs":{},"间":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"2":{"5":{"6":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{}},"6":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}}},"docs":{}}},"7":{"docs":{},",":{"6":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}}},"docs":{}}},"docs":{},"]":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},"c":{"docs":{},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}},"[":{"0":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"1":{"6":{"docs":{},",":{"9":{"docs":{},",":{"1":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"5":{"docs":{},",":{"2":{"0":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"2":{"docs":{},"]":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},",":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"不":{"docs":{},"能":{"docs":{},"由":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"里":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"形":{"docs":{},"成":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"这":{"docs":{},"个":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"都":{"docs":{},"不":{"docs":{},"能":{"docs":{},"由":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"组":{"docs":{},"成":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"k":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"k":{"docs":{},",":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}},"a":{"docs":{},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},":":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}},"]":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},"r":{"docs":{},"r":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"a":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.008928571428571428},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.007423117709437964}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.003952569169960474},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.009656652360515022},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.006362672322375398}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}},">":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.006362672322375398}}}}}}},")":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},";":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},";":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}},"docs":{},"i":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028}}},"n":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}},"，":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}},"：":{"docs":{},"要":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}},"n":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.004782146652497344}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"docs":{}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"2":{"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"7":{"docs":{},",":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"2":{"docs":{},",":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"docs":{}},"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}},"1":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}},"docs":{}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}},"b":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}},"i":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"t":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332}},")":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}},";":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0029644268774703555},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.006437768240343348},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.006907545164718385},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.034722222222222224},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.006362672322375398}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}}}},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924}}}}}}}},"n":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"/":{"docs":{},"/":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924}}}}}}}}}}}},"docs":{}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}},"/":{"docs":{},"/":{"docs":{},"前":{"docs":{},"探":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"位":{"docs":{},"置":{"docs":{},"跳":{"docs":{},"出":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}},"docs":{}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"n":{"docs":{},"k":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},"e":{"docs":{},"(":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},":":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317}}}}}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}}},"d":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576}},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"m":{"docs":{},"o":{"docs":{},"示":{"docs":{},"例":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}},"q":{"docs":{},"u":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.047619047619047616},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.014285714285714285},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.013071895424836602}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}},"docs":{}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}},"b":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}},"c":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}},"docs":{},"v":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}},"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}},"接":{"docs":{},"口":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"(":{"docs":{},"继":{"docs":{},"承":{"docs":{},")":{"docs":{},"了":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"性":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"支":{"docs":{},"持":{"docs":{},"在":{"docs":{},"两":{"docs":{},"端":{"docs":{},"插":{"docs":{},"入":{"docs":{},"和":{"docs":{},"移":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"名":{"docs":{},"称":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"使":{"docs":{},"用":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}},"t":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},")":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.010689990281827016}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}}}}}}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.006802721088435374}}}}},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"n":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"docs":{}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511}}}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"切":{"docs":{},"分":{"docs":{},"，":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"c":{"docs":{},"t":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},")":{"docs":{},"'":{"docs":{},",":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"]":{"docs":{},"'":{"docs":{},",":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"}":{"docs":{},"'":{"docs":{},",":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}},"r":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"s":{"docs":{},"t":{"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}},"docs":{},"u":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}},"v":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"[":{"1":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}},"2":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}},"docs":{}}}},"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"3":{"docs":{},"]":{"docs":{},"[":{"1":{"1":{"docs":{},"]":{"docs":{},"往":{"docs":{},"上":{"docs":{},"走":{"docs":{},"到":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},"[":{"1":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}},"左":{"docs":{},"走":{"docs":{},"到":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{},"[":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"这":{"docs":{},"一":{"docs":{},"行":{"docs":{},"用":{"docs":{},"掉":{"5":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}},"6":{"docs":{},"]":{"docs":{},"一":{"docs":{},"直":{"docs":{},"往":{"docs":{},"上":{"docs":{},"走":{"docs":{},"到":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"[":{"6":{"docs":{},"]":{"docs":{},"减":{"docs":{},"去":{"docs":{},"这":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"5":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}},"docs":{}}}},"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"天":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"持":{"docs":{},"续":{"docs":{},"到":{"docs":{},"今":{"docs":{},"天":{"docs":{},"，":{"docs":{},"为":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"|":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}},"1":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"天":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"就":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"持":{"docs":{},"续":{"docs":{},"到":{"docs":{},"今":{"docs":{},"天":{"docs":{},"，":{"docs":{},"为":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"j":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"表":{"docs":{},"示":{"docs":{},"在":{"docs":{},"子":{"docs":{},"集":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"区":{"docs":{},"间":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"之":{"docs":{},"间":{"docs":{},"选":{"docs":{},"择":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"组":{"docs":{},"成":{"docs":{},"j":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"j":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}}},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"]":{"docs":{},"[":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"其":{"docs":{},"中":{"docs":{},"n":{"docs":{},"是":{"docs":{},"子":{"docs":{},"集":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"t":{"docs":{},"是":{"docs":{},"目":{"docs":{},"标":{"docs":{},"和":{"docs":{},"，":{"docs":{},"多":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"y":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.009718172983479106}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}},"e":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.013071895424836602}},"n":{"docs":{},"d":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}}}},"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.005844845908607864}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.004250797024442083}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553}}}}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"，":{"docs":{},"当":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"均":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}},"docs":{}},"d":{"docs":{},"g":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}},",":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"f":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.02497343251859724},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"操":{"docs":{},"作":{"docs":{},"）":{"docs":{},"。":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"后":{"docs":{},"一":{"docs":{},"种":{"docs":{},"形":{"docs":{},"式":{"docs":{},"是":{"docs":{},"专":{"docs":{},"为":{"docs":{},"使":{"docs":{},"用":{"docs":{},"有":{"docs":{},"容":{"docs":{},"量":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.003952569169960474},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.005302226935312832}},"/":{"docs":{},"/":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},"：":{"docs":{},"偶":{"docs":{},"数":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"不":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.008483563096500531}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"（":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"）":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"从":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"移":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"从":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"k":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"f":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}},"：":{"docs":{},"指":{"docs":{},"定":{"docs":{},"范":{"docs":{},"围":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"处":{"docs":{},"索":{"docs":{},"引":{"docs":{},"（":{"docs":{},"包":{"docs":{},"含":{"docs":{},"）":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562}}}},"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562}}}},"2":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}},"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}},"docs":{},"i":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0125},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"]":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.007142857142857143},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"j":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"docs":{}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}},"_":{"0":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},"1":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},"是":{"docs":{},"当":{"docs":{},"天":{"docs":{},"手":{"docs":{},"里":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}},"docs":{},"i":{"docs":{},"_":{"0":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"1":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302}}},"docs":{}}}},"e":{"docs":{},"e":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}},",":{"docs":{},"注":{"docs":{},"意":{"docs":{},"在":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"f":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"时":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"买":{"docs":{},"入":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"价":{"docs":{},"值":{"docs":{},"为":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"负":{"docs":{},"债":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"买":{"docs":{},"入":{"docs":{},"（":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"算":{"docs":{},"利":{"docs":{},"润":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.015480895915678524},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.02857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.061068702290076333},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.08},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.03365384615384615},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.028169014084507043},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.06598513011152417},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.03206997084548105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.055299539170506916},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0746054519368723},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.06343283582089553},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.02575107296137339},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.058823529411764705},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.048884165781083955},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.07142857142857142},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.027777777777777776},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.058823529411764705},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.029692470837751856},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.078125},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.006611570247933884},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.02727272727272727}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028}}}}}}}},"1":{"0":{"0":{"5":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"docs":{}},"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}},"2":{"8":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"docs":{}},"docs":{}},"2":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}}}}},"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}},"docs":{},"]":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.08},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.012081784386617101},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.015781922525107604},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.022388059701492536},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.032679738562091505},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.004250797024442083},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332}},"{":{"3":{"docs":{},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}},"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}},"}":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}}},"l":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.010743801652892562},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"{":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.014925373134328358},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},"[":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"k":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"]":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"c":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}},"]":{"docs":{},"[":{"docs":{},"r":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"r":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"e":{"docs":{},"]":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"按":{"docs":{},"输":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"存":{"docs":{},"储":{"docs":{},"每":{"docs":{},"条":{"docs":{},"边":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"表":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},"/":{"docs":{},"/":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}},"k":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"]":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}},"e":{"docs":{},"g":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}},",":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}},"n":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"docs":{}},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},"f":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},")":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},":":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"d":{"docs":{},"x":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.004646840148698885},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.0196078431372549}},"+":{"docs":{},"+":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"/":{"docs":{},"/":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},"计":{"docs":{},"数":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}}}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}},"是":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"差":{"2":{"docs":{},"个":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}},"docs":{}}}}}},"=":{"6":{"docs":{},"=":{"docs":{},"i":{"docs":{},"*":{"docs":{},"n":{"docs":{},"+":{"docs":{},"j":{"docs":{},"=":{"1":{"docs":{},"*":{"4":{"docs":{},"+":{"2":{"docs":{},"=":{"6":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}}},"f":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"l":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"k":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"x":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},")":{"docs":{},"{":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"1":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}},"u":{"docs":{},"m":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"1":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}}}}}},"i":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"s":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}}}}},"s":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"d":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}}}},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888}}}}}}}}}}}}},"v":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553}}},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"参":{"docs":{},"数":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"您":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"分":{"docs":{},"割":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"在":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"！":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"天":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"=":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"/":{"docs":{},"n":{"docs":{},"=":{"6":{"docs":{},"/":{"4":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{}}},"docs":{}}}}}}}}},"k":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.006505576208178439},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.010043041606886656},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"：":{"docs":{},"要":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"值":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}}}},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.010178117048346057},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.004646840148698885},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.021520803443328552},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}}},")":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}},":":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}},"docs":{}}}}},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"行":{"docs":{},"/":{"docs":{},"列":{"docs":{},"/":{"docs":{},"块":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}},"是":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"v":{"docs":{},"是":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},"为":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}},"，":{"docs":{},"则":{"docs":{},"不":{"docs":{},"要":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"它":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"环":{"docs":{},"逆":{"docs":{},"时":{"docs":{},"针":{"docs":{},"旋":{"docs":{},"转":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}},"位":{"docs":{},"（":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"为":{"docs":{},"第":{"0":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{}}}}}}}}},"l":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"2":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.019516728624535316},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.010043041606886656},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.014925373134328358},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"（":{"docs":{},"后":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"）":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"。":{"docs":{},"应":{"docs":{},"优":{"docs":{},"先":{"docs":{},"使":{"docs":{},"用":{"docs":{},"此":{"docs":{},"接":{"docs":{},"口":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"遗":{"docs":{},"留":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.01020408163265306}},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}},"或":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}},"/":{"docs":{},"/":{"docs":{},"存":{"docs":{},"的":{"docs":{},"是":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"1":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}},"2":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.005928853754940711},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.010178117048346057},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.01984978540772532},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},">":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.013412017167381975}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.017127799736495388},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.012725344644750796}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"[":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}},"docs":{}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"/":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},":":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},"{":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.005738880918220947}}},"a":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"p":{"docs":{},"o":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}},"b":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.008928571428571428},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}},"[":{"docs":{},"(":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}},"docs":{}},"w":{"docs":{},"+":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"m":{"docs":{},"+":{"docs":{},"w":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"n":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"[":{"0":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{},"i":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}},"h":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"n":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"2":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"3":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"docs":{},"l":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}}},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"p":{"docs":{},",":{"docs":{},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"r":{"docs":{},"u":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}},"n":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.002635046113306983}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237}}}},"2":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.015267175572519083},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.022304832713754646},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.013824884792626729},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.018651362984218076},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.01700318809776833},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.034722222222222224},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.00743801652892562},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},"e":{"docs":{},"w":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.027210884353741496},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.021739130434782608},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.025},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.020356234096692113},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.0625},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.023474178403755867},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.024295432458697766},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.013824884792626729},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.02295552367288379},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.029850746268656716},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.02575107296137339},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.032679738562091505},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.015409139213602551},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.01568627450980392},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.013785790031813362},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.00743801652892562},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"/":{"docs":{},"/":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"接":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"b":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.008893280632411068},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.016129032258064516},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.004250797024442083},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.021208907741251327},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.025032938076416336},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.030752916224814422}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.006258234519104084},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.005302226935312832}}}}},"m":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}},"s":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0055762081784386614}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"比":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"左":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"小":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"需":{"docs":{},"要":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},"这":{"docs":{},"个":{"docs":{},"范":{"docs":{},"围":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.004646840148698885}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"去":{"docs":{},"掉":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"j":{"docs":{},"]":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"反":{"docs":{},"之":{"docs":{},"，":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"+":{"docs":{},"k":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"docs":{}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}},"docs":{},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0037553648068669528},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.006907545164718385},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},"{":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.015267175572519083},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.00929368029739777},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.009120171673819743},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.004646840148698885},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.009216589861751152},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.004250797024442083},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}},"i":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"j":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}},"l":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076}}},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}},"m":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},"a":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"b":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"q":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"{":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.005928853754940711},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"(":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"p":{"docs":{},"r":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"v":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"/":{"docs":{},"/":{"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"结":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}},"docs":{}}}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}},"/":{"2":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"docs":{}}},"o":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}}}},"2":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}},"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}}},"p":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.0196078431372549}}}}}},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"到":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},":":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}}}}}}}},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.013605442176870748},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0032938076416337285},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"（":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"）":{"docs":{},"”":{"docs":{},"的":{"docs":{},"缩":{"docs":{},"写":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"读":{"docs":{},"为":{"docs":{},"“":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"”":{"docs":{},"。":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.010095642933049946},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"[":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}},"：":{"docs":{},"指":{"docs":{},"定":{"docs":{},"范":{"docs":{},"围":{"docs":{},"的":{"docs":{},"结":{"docs":{},"束":{"docs":{},"处":{"docs":{},"索":{"docs":{},"引":{"docs":{},"（":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"）":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924}},"a":{"docs":{},"l":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317}},"与":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"只":{"docs":{},"是":{"docs":{},"在":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"是":{"docs":{},"否":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"放":{"docs":{},"回":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"+":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.006802721088435374},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"m":{"docs":{},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"2":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}}}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}},"(":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"节":{"docs":{},"点":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},".":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.014822134387351778},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0058309037900874635},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.009544008483563097}},"e":{"docs":{},"(":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}},"v":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"[":{"2":{"0":{"docs":{},",":{"8":{"docs":{},",":{"2":{"2":{"docs":{},",":{"4":{"docs":{},",":{"1":{"2":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"4":{"docs":{},"]":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"3":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"0":{"docs":{},",":{"8":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"7":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"7":{"docs":{},",":{"2":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.002635046113306983},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0037194473963868225},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},"/":{"docs":{},"/":{"docs":{},"设":{"docs":{},"置":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.018656716417910446}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"的":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"是":{"docs":{},"距":{"docs":{},"离":{"docs":{},"根":{"docs":{},"最":{"docs":{},"远":{"docs":{},"的":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"的":{"docs":{},"共":{"docs":{},"同":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"确":{"docs":{},"定":{"docs":{},"树":{"docs":{},"中":{"docs":{},"节":{"docs":{},"点":{"docs":{},"对":{"docs":{},"之":{"docs":{},"间":{"docs":{},"距":{"docs":{},"离":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"最":{"docs":{},"低":{"docs":{},"共":{"docs":{},"同":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"：":{"docs":{},"从":{"docs":{},"n":{"1":{"docs":{},"到":{"docs":{},"n":{"2":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"可":{"docs":{},"以":{"docs":{},"计":{"docs":{},"算":{"docs":{},"为":{"docs":{},"从":{"docs":{},"根":{"docs":{},"到":{"docs":{},"n":{"1":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"，":{"docs":{},"加":{"docs":{},"上":{"docs":{},"从":{"docs":{},"根":{"docs":{},"到":{"docs":{},"n":{"2":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"，":{"docs":{},"减":{"docs":{},"去":{"docs":{},"从":{"docs":{},"根":{"docs":{},"到":{"docs":{},"其":{"docs":{},"最":{"docs":{},"低":{"docs":{},"共":{"docs":{},"同":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"的":{"docs":{},"两":{"docs":{},"倍":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.008364312267657992}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.010223048327137546},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},"，":{"docs":{},"先":{"docs":{},"给":{"docs":{},"t":{"docs":{},"的":{"docs":{},"记":{"docs":{},"上":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"标":{"docs":{},"准":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"是":{"docs":{},"否":{"docs":{},"都":{"docs":{},"包":{"docs":{},"含":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"话":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"话":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}},"i":{"docs":{},"l":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"/":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"收":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"v":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.0196078431372549}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.013605442176870748},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.001976284584980237},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.015549076773566569},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.008047210300429184},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.017355371900826446}}}}},":":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"深":{"docs":{},"度":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"指":{"docs":{},"出":{"docs":{},"来":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"了":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"行":{"docs":{},"/":{"docs":{},"列":{"docs":{},"/":{"docs":{},"块":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}},"i":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},"i":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"位":{"docs":{},"置":{"docs":{},"有":{"docs":{},"无":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"/":{"docs":{},"/":{"docs":{},"k":{"docs":{},",":{"docs":{},"v":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}},";":{"docs":{},"/":{"docs":{},"/":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}},"{":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"1":{"0":{"0":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"docs":{}},"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"1":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"3":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}}}},"6":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}},"2":{"1":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"5":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148}}}},"6":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"9":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.006611570247933884}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.02040816326530612},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.047760210803689064},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.044642857142857144},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.04071246819338423},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.08},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.019230769230769232},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.03755868544600939},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.039962825278810406},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.06899902818270165},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.029953917050691243},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.03299856527977044},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.048507462686567165},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.0407725321888412},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.032679738562091505},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.03506907545164718},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.05555555555555555},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.054901960784313725},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.042417815482502653},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0256198347107438},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.01818181818181818}},"/":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"当":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"标":{"docs":{},"识":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"添":{"docs":{},"加":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}},"与":{"docs":{},"左":{"docs":{},"端":{"docs":{},"点":{"docs":{},"比":{"docs":{},"较":{"docs":{},"后":{"docs":{},"再":{"docs":{},"与":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"值":{"docs":{},"比":{"docs":{},"较":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"全":{"docs":{},"部":{"docs":{},"探":{"docs":{},"测":{"docs":{},"完":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"组":{"docs":{},"装":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"大":{"docs":{},"到":{"docs":{},"小":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"值":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"再":{"docs":{},"被":{"docs":{},"缩":{"docs":{},"减":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}},"准":{"docs":{},"备":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"如":{"docs":{},"果":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"中":{"docs":{},"有":{"docs":{},"s":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"到":{"docs":{},"s":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"组":{"docs":{},"装":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"x":{"docs":{},"是":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"重":{"docs":{},"新":{"docs":{},"开":{"docs":{},"始":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"表":{"docs":{},"示":{"docs":{},"个":{"docs":{},"数":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"1":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148}}}},"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}},"\"":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674}}}},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"}":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.013605442176870748},"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.043478260869565216},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.05178571428571429},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.043256997455470736},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.023474178403755867},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.03810408921933085},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0641399416909621},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.02304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.03299856527977044},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.048507462686567165},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.040236051502145924},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.0392156862745098},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.03028692879914984},"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.034722222222222224},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.058823529411764705},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.041357370095440084},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.01818181818181818},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.013636363636363636}},"}":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}},"*":{"docs":{},"/":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"–":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}},"”":{"docs":{},"（":{"docs":{},"插":{"docs":{},"入":{"docs":{},"点":{"docs":{},"）":{"docs":{},"。":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}},"插":{"docs":{},"入":{"docs":{},"点":{"docs":{},"是":{"docs":{},"索":{"docs":{},"引":{"docs":{},"键":{"docs":{},"将":{"docs":{},"要":{"docs":{},"插":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"即":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"于":{"docs":{},"该":{"docs":{},"键":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"般":{"docs":{},"场":{"docs":{},"景":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"对":{"docs":{},"于":{"docs":{},"，":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"有":{"docs":{},"这":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},":":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"是":{"docs":{},"l":{"docs":{},"q":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"r":{"docs":{},"q":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"的":{"docs":{},"数":{"docs":{},"如":{"docs":{},"何":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"再":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"有":{"docs":{},"根":{"docs":{},"的":{"docs":{},"树":{"docs":{},"t":{"docs":{},"。":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"低":{"docs":{},"共":{"docs":{},"同":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"t":{"docs":{},"中":{"docs":{},"具":{"docs":{},"有":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"作":{"docs":{},"为":{"docs":{},"后":{"docs":{},"代":{"docs":{},"的":{"docs":{},"最":{"docs":{},"低":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"其":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"后":{"docs":{},"代":{"docs":{},"）":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"最":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"是":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"自":{"docs":{},"己":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"往":{"docs":{},"上":{"docs":{},"走":{"docs":{},"到":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}},"docs":{}}}}}}}}}},"下":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}},"面":{"docs":{},"是":{"1":{"2":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}},"docs":{}},"docs":{}},"开":{"docs":{},"始":{"docs":{},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"的":{"docs":{},"是":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"标":{"docs":{},"的":{"docs":{},"相":{"docs":{},"减":{"docs":{},"得":{"docs":{},"到":{"docs":{},"宽":{"docs":{},"度":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"从":{"docs":{},"i":{"docs":{},"开":{"docs":{},"始":{"docs":{},"到":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"能":{"docs":{},"否":{"docs":{},"由":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"字":{"docs":{},"典":{"docs":{},"形":{"docs":{},"成":{"docs":{},"这":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"举":{"docs":{},"例":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}},"也":{"docs":{},"可":{"docs":{},"用":{"docs":{},"作":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":10.002304147465438}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"用":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"础":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}},"与":{"docs":{},"技":{"docs":{},"巧":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":10}}}}},"版":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}},"于":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"想":{"docs":{},"一":{"docs":{},"下":{"docs":{},"如":{"docs":{},"何":{"docs":{},"处":{"docs":{},"理":{"docs":{},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"上":{"docs":{},"一":{"docs":{},"种":{"docs":{},"的":{"docs":{},"最":{"docs":{},"多":{"docs":{},"买":{"docs":{},"卖":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"允":{"docs":{},"许":{"2":{"docs":{},"变":{"docs":{},"成":{"docs":{},"一":{"docs":{},"般":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"k":{"docs":{},"，":{"docs":{},"最":{"docs":{},"多":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"k":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"面":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"一":{"docs":{},"维":{"docs":{},"，":{"docs":{},"改":{"docs":{},"成":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"1":{"docs":{},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"2":{"docs":{},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"在":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"将":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"添":{"docs":{},"加":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"是":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"(":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},"呢":{"docs":{},"？":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"取":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"节":{"docs":{},"点":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"隔":{"docs":{},"开":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}},"相":{"docs":{},"邻":{"docs":{},"两":{"docs":{},"个":{"docs":{},"颜":{"docs":{},"色":{"docs":{},"均":{"docs":{},"相":{"docs":{},"同":{"docs":{},"则":{"docs":{},"删":{"docs":{},"除":{"docs":{},"当":{"docs":{},"前":{"docs":{},"颜":{"docs":{},"色":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"的":{"docs":{},"圈":{"docs":{},"数":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"掉":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}},"何":{"docs":{},"求":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"2":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"深":{"docs":{},"度":{"docs":{},"？":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"docs":{}}}}}},"上":{"docs":{},"图":{"docs":{},":":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"图":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"m":{"docs":{},"✖":{"docs":{},"️":{"docs":{},"n":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"n":{"docs":{},"✖":{"docs":{},"️":{"docs":{},"m":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"，":{"docs":{},"按":{"docs":{},"第":{"1":{"docs":{},"行":{"docs":{},"到":{"docs":{},"第":{"docs":{},"m":{"docs":{},"行":{"docs":{},"依":{"docs":{},"次":{"docs":{},"排":{"docs":{},"列":{"docs":{},"所":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"互":{"docs":{},"相":{"docs":{},"转":{"docs":{},"换":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"第":{"2":{"docs":{},"行":{"docs":{},"第":{"3":{"docs":{},"列":{"docs":{},"的":{"1":{"6":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"其":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"是":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},")":{"docs":{},",":{"docs":{},"而":{"docs":{},"映":{"docs":{},"射":{"docs":{},"到":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"其":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"=":{"6":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{}}}},"docs":{}}},"实":{"docs":{},"现":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"对":{"docs":{},"于":{"docs":{},"它":{"docs":{},"们":{"docs":{},"能":{"docs":{},"够":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"固":{"docs":{},"定":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"但":{"docs":{},"此":{"docs":{},"接":{"docs":{},"口":{"docs":{},"既":{"docs":{},"支":{"docs":{},"持":{"docs":{},"有":{"docs":{},"容":{"docs":{},"量":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"也":{"docs":{},"支":{"docs":{},"持":{"docs":{},"没":{"docs":{},"有":{"docs":{},"固":{"docs":{},"定":{"docs":{},"大":{"docs":{},"小":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"；":{"docs":{},"在":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"实":{"docs":{},"现":{"docs":{},"中":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"能":{"docs":{},"失":{"docs":{},"败":{"docs":{},"。":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"发":{"docs":{},"场":{"docs":{},"景":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}},"或":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"者":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"基":{"docs":{},"于":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"改":{"docs":{},"写":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"是":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"今":{"docs":{},"天":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"了":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"盈":{"docs":{},"利":{"docs":{},"为":{"docs":{},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"1":{"docs":{},"+":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"口":{"docs":{},"。":{"docs":{},"在":{"docs":{},"将":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"用":{"docs":{},"作":{"docs":{},"队":{"docs":{},"列":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"得":{"docs":{},"到":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"完":{"docs":{},"全":{"docs":{},"等":{"docs":{},"效":{"docs":{},"于":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}},"雨":{"docs":{},"水":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"插":{"docs":{},"入":{"docs":{},"点":{"docs":{},"索":{"docs":{},"引":{"docs":{},"值":{"docs":{},"”":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}}}}},"数":{"docs":{},"字":{"docs":{},"【":{"0":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"1":{"0":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"1":{"docs":{},"】":{"docs":{},"：":{"4":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}},"2":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"3":{"docs":{},"】":{"docs":{},"：":{"5":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}},"4":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"5":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"6":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"2":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"3":{"docs":{},"】":{"docs":{},"：":{"0":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}},"4":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"5":{"docs":{},"】":{"docs":{},"：":{"1":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},"docs":{}}}},"6":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"7":{"docs":{},"】":{"docs":{},"：":{"2":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},"docs":{}}}},"8":{"docs":{},"】":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}},"9":{"docs":{},"】":{"docs":{},"：":{"3":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}},"docs":{}}}},"docs":{}}},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":10.000329380764164},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":10}}}},"栈":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}},"组":{"1":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"结":{"docs":{},"束":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}},"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"结":{"docs":{},"束":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}},"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":10.002544529262087},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"元":{"docs":{},"素":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"可":{"docs":{},"修":{"docs":{},"改":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"$":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"$":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"$":{"docs":{},"是":{"docs":{},"从":{"docs":{},"右":{"docs":{},"到":{"docs":{},"左":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}},"学":{"docs":{"docs/leetcode/classify/math.html":{"ref":"docs/leetcode/classify/math.html","tf":10.2}}}},"方":{"docs":{},"法":{"1":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},".":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"一":{"docs":{},"遍":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"+":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"模":{"docs":{},"拟":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"二":{"docs":{},"分":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}},"遍":{"docs":{},"历":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}},":":{"docs":{},"b":{"docs":{},"f":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},"d":{"docs":{},"f":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"s":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"所":{"docs":{},"有":{"docs":{},"子":{"docs":{},"集":{"docs":{},"统":{"docs":{},"计":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"+":{"docs":{},"翻":{"docs":{},"转":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"排":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}}}},"迭":{"docs":{},"代":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"法":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"递":{"docs":{},"归":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"+":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}},"栈":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"二":{"docs":{},"分":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"模":{"docs":{},"拟":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/math.html":{"ref":"docs/leetcode/classify/math.html","tf":0.2}}}},"基":{"docs":{},"本":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}},"粗":{"docs":{},"糙":{"docs":{},"版":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}},"回":{"docs":{},"溯":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}},"递":{"docs":{},"减":{"docs":{},"）":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}}}},"暴":{"docs":{},"力":{"docs":{},"递":{"docs":{},"归":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}},"朴":{"docs":{},"素":{"docs":{},"版":{"docs":{},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"：":{"docs":{},"d":{"docs":{},"f":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"[":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"空":{"docs":{},"间":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}},"单":{"docs":{},"调":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"朴":{"docs":{},"素":{"docs":{},"版":{"docs":{},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"递":{"docs":{},"归":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},"（":{"docs":{},"仅":{"docs":{},"打":{"docs":{},"印":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"）":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}},"2":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},":":{"docs":{},"b":{"docs":{},"f":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"d":{"docs":{},"f":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"预":{"docs":{},"处":{"docs":{},"理":{"docs":{},"+":{"docs":{},"d":{"docs":{},"f":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"两":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"+":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"迭":{"docs":{},"代":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}},"递":{"docs":{},"归":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}},"快":{"docs":{},"排":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"求":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"线":{"docs":{},"段":{"docs":{},"树":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"优":{"docs":{},"化":{"docs":{},"版":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"多":{"docs":{},"次":{"docs":{},"翻":{"docs":{},"转":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"+":{"docs":{},"统":{"docs":{},"计":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"回":{"docs":{},"溯":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"（":{"docs":{},"累":{"docs":{},"加":{"docs":{},"）":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"压":{"docs":{},"缩":{"docs":{},"空":{"docs":{},"间":{"docs":{},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"空":{"docs":{},"间":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}},"自":{"docs":{},"顶":{"docs":{},"向":{"docs":{},"下":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"递":{"docs":{},"归":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}}}}}},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"高":{"docs":{},"阶":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}},"排":{"docs":{},"序":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}},"：":{"docs":{},"迭":{"docs":{},"代":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"[":{"docs":{},"不":{"docs":{},"浪":{"docs":{},"费":{"docs":{},"空":{"docs":{},"间":{"docs":{},"]":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"d":{"docs":{},"f":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"空":{"docs":{},"间":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"docs":{}}},"d":{"docs":{},"p":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}},"原":{"docs":{},"地":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"(":{"docs":{},"转":{"docs":{},"置":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"列":{"docs":{},"两":{"docs":{},"次":{"docs":{},")":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}},".":{"docs":{},"打":{"docs":{},"表":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"递":{"docs":{},"归":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}},"3":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},":":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"递":{"docs":{},"归":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"d":{"docs":{},"f":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"s":{"docs":{},"(":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"贪":{"docs":{},"心":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"排":{"docs":{},"序":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"二":{"docs":{},"分":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"再":{"docs":{},"优":{"docs":{},"化":{"docs":{},"版":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}},"自":{"docs":{},"底":{"docs":{},"向":{"docs":{},"上":{"docs":{},"填":{"docs":{},"表":{"docs":{},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}},"库":{"docs":{},"函":{"docs":{},"数":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"b":{"docs":{},"f":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},"：":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{},"+":{"docs":{},"贪":{"docs":{},"心":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"位":{"docs":{},"置":{"docs":{},"交":{"docs":{},"换":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"4":{"docs":{},":":{"docs":{},"连":{"docs":{},"接":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"b":{"docs":{},"f":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"中":{"docs":{},"心":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"法":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"5":{"docs":{},":":{"docs":{},"d":{"docs":{},"p":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"算":{"docs":{},"法":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}},"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}},"是":{"docs":{},"“":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}},"当":{"docs":{},"前":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"状":{"docs":{},"态":{"docs":{},"时":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}},"形":{"docs":{},"成":{"1":{"1":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"组":{"docs":{},"合":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"docs":{}},"docs":{}}},"昨":{"docs":{},"天":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"0":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}}}}}}}}}}},"此":{"docs":{},"接":{"docs":{},"口":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"两":{"docs":{},"端":{"docs":{},"访":{"docs":{},"问":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"提":{"docs":{},"供":{"docs":{},"插":{"docs":{},"入":{"docs":{},"、":{"docs":{},"移":{"docs":{},"除":{"docs":{},"和":{"docs":{},"检":{"docs":{},"查":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"每":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"都":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"种":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{},"一":{"docs":{},"种":{"docs":{},"形":{"docs":{},"式":{"docs":{},"在":{"docs":{},"操":{"docs":{},"作":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"形":{"docs":{},"式":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"值":{"docs":{},"（":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"j":{"docs":{},"=":{"docs":{},"i":{"docs":{},"+":{"docs":{},"k":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"docs":{}}}}},"类":{"docs":{},"。":{"docs":{},"在":{"docs":{},"将":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"用":{"docs":{},"作":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"时":{"docs":{},"，":{"docs":{},"元":{"docs":{},"素":{"docs":{},"被":{"docs":{},"推":{"docs":{},"入":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"并":{"docs":{},"从":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"开":{"docs":{},"头":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"。":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"方":{"docs":{},"法":{"docs":{},"完":{"docs":{},"全":{"docs":{},"等":{"docs":{},"效":{"docs":{},"于":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"似":{"docs":{},"方":{"docs":{},"法":{"1":{"docs":{},"，":{"docs":{},"采":{"docs":{},"用":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"[":{"docs":{},"]":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}},"docs":{}}}}},"要":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.003401360544217687}}}}}}},"在":{"docs":{},"没":{"docs":{},"有":{"docs":{},"多":{"docs":{},"余":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"为":{"docs":{},"正":{"docs":{},"方":{"docs":{},"形":{"docs":{},"，":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"正":{"docs":{},"方":{"docs":{},"形":{"docs":{},"或":{"docs":{},"环":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}}},"入":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"这":{"docs":{},"里":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"值":{"docs":{},"的":{"docs":{},"几":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"docs/leetcode/classify/basic_skill.html":{"ref":"docs/leetcode/classify/basic_skill.html","tf":0.006802721088435374}}}}}}}}}}}}}}},"刚":{"docs":{},"好":{"docs":{},"是":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"个":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}}}}}}}},"双":{"docs":{},"端":{"docs":{},"链":{"docs":{},"表":{"docs":{},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}},"想":{"docs":{},"法":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"形":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"以":{"docs":{},"逆":{"docs":{},"时":{"docs":{},"针":{"docs":{},"方":{"docs":{},"向":{"docs":{},"交":{"docs":{},"换":{"docs":{},"与":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"相":{"docs":{},"应":{"docs":{},"单":{"docs":{},"元":{"docs":{},"格":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"左":{"docs":{},"、":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"下":{"docs":{},"、":{"docs":{},"从":{"docs":{},"下":{"docs":{},"到":{"docs":{},"右":{"docs":{},"和":{"docs":{},"从":{"docs":{},"右":{"docs":{},"到":{"docs":{},"上":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"题":{"docs":{},"是":{"1":{"3":{"9":{"docs":{},"题":{"docs":{},"的":{"docs":{},"进":{"docs":{},"阶":{"docs":{},"题":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"列":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"组":{"docs":{},"成":{"docs":{},"方":{"docs":{},"案":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"n":{"docs":{},"o":{"docs":{},".":{"3":{"docs":{},"题":{"docs":{},"，":{"docs":{},"曾":{"docs":{},"经":{"docs":{},"被":{"docs":{},"面":{"docs":{},"到":{"docs":{},"过":{"docs":{},"，":{"docs":{},"很":{"docs":{},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"一":{"docs":{},"道":{"docs":{},"题":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"转":{"docs":{},"置":{"docs":{},"的":{"docs":{},"那":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"即":{"docs":{},"可":{"docs":{},",":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"一":{"docs":{},"题":{"docs":{},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"m":{"docs":{},"和":{"docs":{},"n":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"用":{"docs":{},"到":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"即":{"docs":{},"可":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"等":{"docs":{},"同":{"docs":{},"于":{"4":{"8":{"docs":{},"题":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"docs":{}}}}},"行":{"docs":{},"用":{"docs":{},"掉":{"1":{"1":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}},"docs":{}}}}},"时":{"docs":{},"为":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}}}}},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"1":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}}}}}}},"是":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.017786561264822136},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.013071895424836602},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.02545068928950159}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"q":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},"f":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}},"\"":{"1":{"docs":{},"\"":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.004940711462450593},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302}},"/":{"docs":{},"/":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"\"":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"左":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"即":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674}}}},"(":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}},")":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"\"":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"有":{"docs":{},"或":{"docs":{},"者":{"docs":{},"没":{"docs":{},"有":{"docs":{},"都":{"docs":{},"加":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"只":{"docs":{},"有":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"，":{"docs":{},"给":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"加":{"docs":{},"上":{"docs":{},"\"":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{},",":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"不":{"docs":{},"加":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{},"\"":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"\"":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},"[":{"docs":{},"]":{"docs":{},"\"":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}},"y":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},"m":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"u":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"}":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},"x":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"m":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}},"i":{"docs":{},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"c":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"\"":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}},"%":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"d":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"&":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.04090909090909091}},"&":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.007246376811594203},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0125},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004291845493562232},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.014846235418875928},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}},"{":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"*":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.00929368029739777},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.023323615160349854},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.008583690987124463},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.008501594048884165},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.04297520661157025},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.04090909090909091}},"/":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.015549076773566569},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}},"[":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}},"[":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"r":{"docs":{},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"因":{"docs":{},"为":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"的":{"docs":{},"机":{"docs":{},"会":{"docs":{},"，":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}},":":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0029644268774703555},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.007142857142857143},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.002656748140276302},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.013888888888888888},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},"如":{"docs":{},"何":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"路":{"docs":{},"径":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}},"/":{"docs":{},"/":{"docs":{},"滑":{"docs":{},"动":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}},"?":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}},"_":{"1":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"2":{"docs":{},"n":{"docs":{},"d":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"_":{"3":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"docs":{}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"3":{"docs":{},"r":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"4":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"5":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"6":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}},".":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"(":{"docs":{},"\"":{"2":{"1":{"4":{"7":{"4":{"8":{"3":{"6":{"4":{"9":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"2":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}},"docs":{}},"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.009389671361502348}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.006611570247933884}}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.007633587786259542},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"4":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}},"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.011764705882352941},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.005270092226613966},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0036231884057971015},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"删":{"docs":{},"除":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}}}}}}}}}}}}},"v":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"p":{"docs":{},"r":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}},"/":{"docs":{},"/":{"2":{"docs":{},".":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.007905138339920948},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}},"/":{"docs":{},"/":{"1":{"docs":{},".":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"结":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}},"docs":{},"重":{"docs":{},"置":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"a":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},"b":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"[":{"docs":{},"u":{"docs":{},"]":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},";":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},"/":{"docs":{},"/":{"docs":{},"采":{"docs":{},"用":{"docs":{},"头":{"docs":{},"插":{"docs":{},"法":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"j":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}},"l":{"docs":{},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.006802721088435374}},"e":{"docs":{},"r":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},"s":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.006802721088435374}}}}},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.018656716417910446}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179}},";":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}},"[":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},"+":{"docs":{},"+":{"docs":{},"l":{"docs":{},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}},"i":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},";":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"r":{"docs":{},"]":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},";":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.007462686567164179}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"，":{"docs":{},"做":{"docs":{},"这":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"底":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"i":{"docs":{},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"{":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},":":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"{":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}},"j":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.00536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.006907545164718385},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}},"i":{"docs":{},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"docs/leetcode/classify/math.html":{"ref":"docs/leetcode/classify/math.html","tf":0.2}}}}},"z":{"1":{"8":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"docs":{}},"2":{"3":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"5":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"docs":{}},"3":{"4":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"docs":{}},"4":{"2":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}},"docs":{}},"6":{"3":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},"8":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"7":{"7":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"docs":{}},"8":{"2":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"4":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"5":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}},"6":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"docs":{}},"docs":{}},"]":{"docs":{},")":{"docs":{},"对":{"docs":{},"调":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"=":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"%":{"docs":{},"n":{"docs":{},"=":{"6":{"docs":{},"%":{"4":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{}}},"docs":{}}}}}}}}},"m":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.010223048327137546},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.011764705882352941},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135}}}}}}}}}}}}},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002682403433476395},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"\"":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},">":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}},"x":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"h":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}},"docs":{}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"2":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"docs":{}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}},"docs":{}}}}},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.005785123966942148},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}},")":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.010743801652892562}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"c":{"docs":{},"=":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"k":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}},"k":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},":":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},";":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}},"[":{"3":{"docs":{},"]":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}}}},"4":{"docs":{},"]":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}}}},"docs":{}}},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.006376195536663124},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}}}},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.005738880918220947}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}}}}}}}}}}},"m":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.03125}}}}},"x":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},")":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}},"k":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"{":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}},"r":{"docs":{},"k":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}},"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},",":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}},"m":{"docs":{},"o":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562}},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"/":{"docs":{},"/":{"docs":{},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"索":{"docs":{},"引":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"步":{"docs":{},"数":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},"[":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.004859086491739553},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"n":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196}},";":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"y":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}}}}}}}}}}}}},"*":{"docs":{},"n":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.010178117048346057},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.04326923076923077},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.015799256505576207},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.014347202295552367},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00784313725490196},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.011570247933884297},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.03636363636363636}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"e":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.005270092226613966},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.017857142857142856},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.018779342723004695},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.011477761836441894},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.03731343283582089},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.01072961373390558},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.0196078431372549},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.015906680805938492},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}}}},"s":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}}}}}},"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}}}}}}},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"/":{"docs":{},"/":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"到":{"docs":{},"达":{"docs":{},"s":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001609442060085837}}}},"docs":{}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0032938076416337285},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.007142857142857143},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.003887269193391642},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.01072961373390558},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.010604453870625663}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"s":{"docs":{},";":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576}}}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"/":{"docs":{},"/":{"docs":{},"更":{"docs":{},"新":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"重":{"docs":{},"复":{"docs":{},"搜":{"docs":{},"索":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"s":{"docs":{},"b":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"收":{"docs":{},"集":{"docs":{},"结":{"docs":{},"果":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.002145922746781116}}}}}}},"[":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}}},"r":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.010416666666666666}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.03590250329380764},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.02142857142857143},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.022900763358778626},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.014423076923076924},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.018779342723004695},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.02137546468401487},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.028182701652089408},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.016129032258064516},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.01721664275466284},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.02682403433476395},"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.02497343251859724},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.034722222222222224},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.01568627450980392},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.044538706256627786},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.008047210300429184},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},",":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576}}}}}}}},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},",":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"n":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.007142857142857143},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.0069124423963133645},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.011194029850746268},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713},"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}},";":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},")":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},"[":{"docs":{},"n":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}},"h":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"p":{"docs":{},"o":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0032938076416337285},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.010178117048346057},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0037174721189591076},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.007246376811594203}},"{":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},",":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.002635046113306983},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.005089058524173028},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.014846235418875928}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"{":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"/":{"docs":{},"/":{"5":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"/":{"docs":{},"/":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00230566534914361},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.006362672322375398}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},";":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.003181336161187699}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"/":{"docs":{},"/":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{},"加":{"docs":{},"上":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},",":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}}}}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.003952569169960474},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0042417815482502655}}},"=":{"docs":{},"=":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}},",":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}}}},"w":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"s":{"docs":{},"[":{"docs":{},"r":{"docs":{},"]":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"q":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}},",":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}},"=":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}}}}}}},"t":{"docs":{},"h":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0029154518950437317}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"]":{"docs":{},")":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}},"精":{"docs":{},"髓":{"docs":{},"，":{"docs":{},"强":{"docs":{},"制":{"docs":{},"向":{"docs":{},"左":{"docs":{},"滑":{"docs":{},"动":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}},"u":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}},"p":{"1":{"docs":{},":":{"docs":{},"给":{"docs":{},"定":{"docs":{},"两":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"第":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},":":{"docs":{},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"无":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"找":{"docs":{},"第":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"大":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}},"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}},"：":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"长":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},":":{"docs":{},"返":{"docs":{},"回":{"docs":{},"所":{"docs":{},"有":{"docs":{},"符":{"docs":{},"合":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}},")":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},",":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},":":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"!":{"docs":{},"p":{"docs":{},"q":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}},"i":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"l":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}},"+":{"1":{"docs":{},"]":{"docs":{},"$":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"docs":{}},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"n":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.004828326180257511}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.005901287553648069}}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.005901287553648069}},"/":{"docs":{},"/":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"成":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},";":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}},"x":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0049586776859504135},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.04090909090909091}},")":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0058309037900874635}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"这":{"4":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"即":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}},"docs":{}}}}}}}},";":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}},"/":{"docs":{},"/":{"docs":{},"是":{"docs":{},"或":{"docs":{},"「":{"docs":{},"|":{"docs":{},"」":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"x":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}}}}}}}},"z":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}},"|":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.010043041606886656},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}},"|":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.006587615283267457},"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.014285714285714285},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514},"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.009615384615384616},"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821},"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.016129032258064516},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.003218884120171674},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.006907545164718385},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.01166489925768823},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.03125}}},"=":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"│":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0016469038208168643}}},"┌":{"docs":{},"─":{"docs":{},"─":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}}}}},"└":{"docs":{},"─":{"docs":{},"─":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}}}},"【":{"docs":{},"重":{"docs":{},"温":{"docs":{},"经":{"docs":{},"典":{"docs":{},"】":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"是":{"docs":{},"异":{"docs":{},"或":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}},"过":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"在":{"docs":{},"处":{"docs":{},"理":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"算":{"docs":{},"扣":{"docs":{},"除":{"docs":{},"的":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"种":{"docs":{},"思":{"docs":{},"路":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}},"选":{"docs":{},"：":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}},"两":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"个":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"索":{"docs":{},"引":{"docs":{},"总":{"docs":{},"和":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}},"方":{"docs":{},"向":{"docs":{},"区":{"docs":{},"分":{"docs":{},"正":{"docs":{},"负":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"和":{"docs":{},"为":{"docs":{},"某":{"docs":{},"一":{"docs":{},"值":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"(":{"docs":{},"一":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"三":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"二":{"docs":{},")":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"的":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"与":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"小":{"docs":{},"深":{"docs":{},"度":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"锯":{"docs":{},"齿":{"docs":{},"形":{"docs":{},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}},"倍":{"docs":{},"数":{"docs":{},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}},"分":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":10}},"查":{"docs":{},"找":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"的":{"docs":{},"常":{"docs":{},"见":{"docs":{},"转":{"docs":{},"换":{"docs":{},"技":{"docs":{},"巧":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":10.004545454545454}}}}}}}}}}}},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"第":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}},"依":{"docs":{},"次":{"docs":{},"从":{"docs":{},"大":{"docs":{},"到":{"docs":{},"小":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"修":{"docs":{},"改":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"先":{"docs":{},"查":{"docs":{},"看":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"再":{"docs":{},"查":{"docs":{},"看":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"变":{"docs":{},"为":{"docs":{},"先":{"docs":{},"查":{"docs":{},"看":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"再":{"docs":{},"查":{"docs":{},"看":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"写":{"docs":{},"入":{"docs":{},"结":{"docs":{},"果":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"将":{"docs":{},"插":{"docs":{},"入":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"插":{"docs":{},"入":{"docs":{},"队":{"docs":{},"首":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"口":{"docs":{},"条":{"docs":{},"件":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}},"：":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"当":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},"时":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},",":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"记":{"docs":{},"录":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"时":{"docs":{},"记":{"docs":{},"录":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"状":{"docs":{},"态":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"新":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"很":{"docs":{},"好":{"docs":{},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"向":{"docs":{},"右":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"加":{"docs":{},"入":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"最":{"docs":{},"长":{"docs":{},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"子":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"旧":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"将":{"docs":{},"左":{"docs":{},"边":{"docs":{},"界":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"向":{"docs":{},"右":{"docs":{},"收":{"docs":{},"缩":{"docs":{},"，":{"docs":{},"移":{"docs":{},"除":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"隔":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"字":{"docs":{},"符":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"割":{"docs":{},"字":{"docs":{},"符":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"等":{"docs":{},"和":{"docs":{},"子":{"docs":{},"集":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"析":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.003188097768331562},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328}}},"别":{"docs":{},"渠":{"docs":{},"道":{"docs":{},"左":{"docs":{},"右":{"docs":{},"两":{"docs":{},"边":{"docs":{},"去":{"docs":{},"找":{"docs":{},"，":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"不":{"docs":{},"越":{"docs":{},"界":{"docs":{},"并":{"docs":{},"且":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"和":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"未":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"内":{"docs":{},"循":{"docs":{},"环":{"docs":{},"和":{"docs":{},"外":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}}},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"项":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"为":{"docs":{},"：":{"docs":{},"根":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}},"缀":{"docs":{},"子":{"docs":{},"串":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"只":{"docs":{},"要":{"docs":{},"是":{"docs":{},"对":{"docs":{},"的":{"docs":{},"人":{"docs":{},"，":{"docs":{},"就":{"docs":{},"算":{"docs":{},"开":{"docs":{},"始":{"docs":{},"错":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"还":{"docs":{},"是":{"docs":{},"会":{"docs":{},"再":{"docs":{},"次":{"docs":{},"相":{"docs":{},"遇":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"的":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"一":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"右":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0013175230566534915}}},"合":{"docs":{},"并":{"docs":{},"k":{"docs":{},"个":{"docs":{},"升":{"docs":{},"序":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"区":{"docs":{},"间":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}},"两":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}},"后":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"开":{"docs":{},"始":{"docs":{},"添":{"docs":{},"加":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"顺":{"docs":{},"序":{"docs":{},"为":{"docs":{},"：":{"docs":{},"左":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"和":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"，":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"复":{"docs":{},"制":{"docs":{},"带":{"docs":{},"随":{"docs":{},"机":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}},"杂":{"docs":{},"度":{"docs":{},"分":{"docs":{},"析":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0027881040892193307},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"串":{"docs":{},"：":{"docs":{},"不":{"docs":{},"可":{"docs":{},"跳":{"docs":{},"跃":{"docs":{},"，":{"docs":{},"如":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"跃":{"docs":{},"，":{"docs":{},"如":{"docs":{},"p":{"docs":{},"w":{"docs":{},"w":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"中":{"docs":{},"p":{"docs":{},"k":{"docs":{},"w":{"docs":{},"是":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}},"对":{"docs":{},"于":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"当":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"树":{"docs":{},"时":{"docs":{},"，":{"docs":{},"位":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"，":{"docs":{},"即":{"docs":{},"位":{"docs":{},"于":{"docs":{},"n":{"1":{"docs":{},"和":{"docs":{},"n":{"2":{"docs":{},"（":{"docs":{},"n":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"整":{"docs":{},"数":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}}}}}},"称":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"应":{"docs":{},"的":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"是":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"是":{"9":{"9":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}},"docs":{}},"docs":{}}}}}}}},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"统":{"docs":{},"一":{"docs":{},"地":{"docs":{},"送":{"docs":{},"到":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"开":{"docs":{},"始":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"个":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"组":{"docs":{},"装":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"已":{"docs":{},"经":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"最":{"docs":{},"头":{"docs":{},"部":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}},"新":{"docs":{},"加":{"docs":{},"入":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"双":{"docs":{},"端":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{},"位":{"docs":{},"置":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"加":{"docs":{},"入":{"docs":{},"到":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"从":{"docs":{},"左":{"docs":{},"边":{"docs":{},"开":{"docs":{},"始":{"docs":{},"分":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},":":{"docs":{},"$":{"docs":{},"i":{"docs":{},"*":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{},"$":{"docs":{},",":{"docs":{},"其":{"docs":{},"中":{"docs":{},"$":{"docs":{},"i":{"docs":{},"$":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"边":{"docs":{},"开":{"docs":{},"始":{"docs":{},"数":{"docs":{},"，":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"$":{"docs":{},"，":{"docs":{},"$":{"docs":{},"j":{"docs":{},"$":{"docs":{},"是":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"下":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"移":{"docs":{},"量":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"$":{"0":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"述":{"docs":{},"的":{"docs":{},"一":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"看":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"的":{"docs":{},"数":{"docs":{},"是":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"5":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{}}},"左":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}},"当":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"返":{"docs":{},"回":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"空":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"往":{"docs":{},"里":{"docs":{},"推":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"新":{"docs":{},"来":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"同":{"docs":{},"步":{"docs":{},"要":{"docs":{},"推":{"docs":{},"一":{"docs":{},"份":{"docs":{},"新":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"来":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"新":{"docs":{},"来":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"保":{"docs":{},"持":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"不":{"docs":{},"变":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"满":{"docs":{},"足":{"docs":{},"条":{"docs":{},"件":{"docs":{},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"都":{"docs":{},"能":{"docs":{},"涵":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"t":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"长":{"docs":{},"度":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"不":{"docs":{},"了":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"中":{"docs":{},"还":{"docs":{},"不":{"docs":{},"含":{"docs":{},"有":{"docs":{},"t":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"即":{"docs":{},"将":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"的":{"docs":{},"右":{"docs":{},"边":{"docs":{},"界":{"docs":{},"往":{"docs":{},"右":{"docs":{},"边":{"docs":{},"推":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}},"处":{"docs":{},"理":{"docs":{},"到":{"docs":{},"s":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}},"单":{"docs":{},"词":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"边":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"越":{"docs":{},"界":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"在":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"所":{"docs":{},"处":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},"时":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"i":{"docs":{},"=":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"docs":{}}}}}}}}},"docs":{}}},"j":{"docs":{},"=":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"当":{"docs":{},"不":{"docs":{},"选":{"docs":{},"任":{"docs":{},"何":{"docs":{},"子":{"docs":{},"集":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"直":{"docs":{},"方":{"docs":{},"案":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}},">":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"j":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拆":{"docs":{},"解":{"docs":{},",":{"docs":{},"可":{"docs":{},"以":{"docs":{},"选":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"选":{"docs":{},"i":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"即":{"docs":{},"可":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"j":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},"拆":{"docs":{},"解":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"选":{"docs":{},"不":{"docs":{},"到":{"docs":{},"i":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}},"：":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"来":{"docs":{},"源":{"docs":{},"国":{"docs":{},"际":{"docs":{},"站":{"docs":{},"，":{"docs":{},"很":{"docs":{},"赞":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"证":{"docs":{},"明":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}},"自":{"docs":{},"@":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"2":{"1":{"5":{"docs":{},"大":{"docs":{},"佬":{"docs":{},"，":{"docs":{},"该":{"docs":{},"解":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"4":{"2":{"4":{"docs":{},"题":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"恢":{"docs":{},"复":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"结":{"docs":{},"果":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"将":{"docs":{},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"结":{"docs":{},"果":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"由":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"从":{"docs":{},"右":{"docs":{},"到":{"docs":{},"左":{"docs":{},"，":{"docs":{},"配":{"docs":{},"合":{"docs":{},"如":{"docs":{},"果":{"1":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"处":{"docs":{},"理":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"的":{"docs":{},"是":{"docs":{},"当":{"docs":{},"选":{"docs":{},"第":{"0":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"能":{"docs":{},"否":{"docs":{},"等":{"docs":{},"于":{"docs":{},"j":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"在":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"=":{"docs":{},"j":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"满":{"docs":{},"足":{"docs":{},"这":{"docs":{},"种":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"都":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"docs":{},"h":{"docs":{},")":{"docs":{},"，":{"docs":{},"h":{"docs":{},"为":{"docs":{},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"m":{"docs":{},"+":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},"其":{"docs":{},"中":{"docs":{},"m":{"docs":{},"和":{"docs":{},"n":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"+":{"docs":{},"n":{"docs":{},")":{"docs":{},"其":{"docs":{},"中":{"docs":{},"m":{"docs":{},"和":{"docs":{},"n":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"*":{"docs":{},"n":{"docs":{},")":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}},"r":{"docs":{},"*":{"docs":{},"c":{"docs":{},")":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}}}}}}},"，":{"docs":{},"x":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.01818181818181818}}}}},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"(":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"|":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}},"长":{"docs":{},"有":{"docs":{},"效":{"docs":{},"括":{"docs":{},"号":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"小":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"覆":{"docs":{},"盖":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}},"的":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}},"佳":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"股":{"docs":{},"票":{"docs":{},"时":{"docs":{},"机":{"docs":{},"含":{"docs":{},"冷":{"docs":{},"冻":{"docs":{},"期":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"多":{"docs":{},"只":{"docs":{},"能":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"两":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"有":{"docs":{},"k":{"docs":{},"笔":{"docs":{},"交":{"docs":{},"易":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"标":{"docs":{},"识":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"树":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}},"根":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0009881422924901185}},"据":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"创":{"docs":{},"建":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}},"测":{"docs":{},"试":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}},"相":{"docs":{},"交":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"同":{"docs":{},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"全":{"docs":{},"部":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"来":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"了":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"常":{"docs":{},"数":{"docs":{},"级":{"docs":{},"别":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"到":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}}}}}}}}}}},"docs":{},"h":{"docs":{},")":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"递":{"docs":{},"归":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"则":{"docs":{},"上":{"docs":{},"述":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"常":{"docs":{},"数":{"docs":{},"级":{"docs":{},"别":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"+":{"docs":{},"n":{"docs":{},")":{"docs":{},"其":{"docs":{},"中":{"docs":{},"m":{"docs":{},"和":{"docs":{},"n":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}}}}}}}},"翻":{"docs":{},"转":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}},"方":{"docs":{},"向":{"docs":{},"和":{"docs":{},"标":{"docs":{},"记":{"docs":{},"已":{"docs":{},"经":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"点":{"docs":{},"，":{"docs":{},"是":{"docs":{},"本":{"docs":{},"题":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"里":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}},"的":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{},"上":{"docs":{},"述":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"使":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"。":{"docs":{},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"需":{"docs":{},"要":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"形":{"docs":{},"式":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"会":{"docs":{},"以":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"占":{"docs":{},"用":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"逻":{"docs":{},"辑":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}},"遍":{"docs":{},"历":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"结":{"docs":{},"果":{"docs":{},"链":{"docs":{},"表":{"docs":{},"就":{"docs":{},"变":{"docs":{},"为":{"docs":{},"了":{"docs":{},"：":{"docs":{},"右":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}},"左":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}}}}}}}},"重":{"docs":{},"排":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}},"链":{"docs":{},"接":{"docs":{},"来":{"docs":{},"自":{"docs":{},"：":{"docs":{},"这":{"docs":{},"里":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287}}}}}}}},"表":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.00032938076416337287},"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}},"中":{"docs":{},"环":{"docs":{},"的":{"docs":{},"入":{"docs":{},"口":{"docs":{},"结":{"docs":{},"点":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}},"验":{"docs":{},"证":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"docs/leetcode/classify/data_structure.html":{"ref":"docs/leetcode/classify/data_structure.html","tf":0.0006587615283267457}}}}}}}}},"'":{"0":{"docs":{},"'":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}},"(":{"docs":{},"'":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}}}}},"[":{"docs":{},"'":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}},")":{"docs":{},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}}}}},"{":{"docs":{},"'":{"docs":{},")":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}},";":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.005357142857142857}}}}}},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},"+":{"docs":{},"'":{"docs":{},")":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}},"a":{"docs":{},"'":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}},";":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}},";":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}},"f":{"docs":{},"'":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}}}}},"t":{"docs":{},"'":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.00430416068866571}}}}},"*":{"docs":{},"'":{"docs":{},")":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"使":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"求":{"docs":{},"解":{"docs":{},"，":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"参":{"docs":{},"见":{"docs":{},"：":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"隔":{"docs":{},"字":{"docs":{},"符":{"docs":{},"处":{"docs":{},"理":{"docs":{},"以":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}}}}}},"去":{"docs":{},"掉":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跑":{"docs":{},"过":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0035714285714285713}}}}}}},"一":{"docs":{},"维":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"堆":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":10}}}},"官":{"docs":{},"解":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"弹":{"docs":{},"出":{"docs":{},"前":{"docs":{},"两":{"docs":{},"次":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}},"最":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"将":{"docs":{},"改":{"docs":{},"节":{"docs":{},"点":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},",":{"docs":{},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"括":{"docs":{},"号":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}},"数":{"docs":{},"独":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}},"了":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"铺":{"docs":{},"垫":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"几":{"docs":{},"道":{"docs":{},"题":{"docs":{},"目":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}},"棒":{"docs":{},"球":{"docs":{},"比":{"docs":{},"赛":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}},"等":{"docs":{},"价":{"docs":{},"写":{"docs":{},"法":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857}}}}}},"详":{"docs":{},"细":{"docs":{},"参":{"docs":{},"考":{"docs":{},"基":{"docs":{},"础":{"docs":{},"与":{"docs":{},"技":{"docs":{},"巧":{"docs":{"docs/leetcode/classify/heap_stack.html":{"ref":"docs/leetcode/classify/heap_stack.html","tf":0.0017857142857142857},"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}},"上":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}},"述":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"的":{"docs":{},"证":{"docs":{},"明":{"docs":{},"：":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"面":{"docs":{},"已":{"docs":{},"经":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"了":{"docs":{},"如":{"docs":{},"何":{"docs":{},"进":{"docs":{},"行":{"docs":{},"原":{"docs":{},"地":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"了":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"再":{"docs":{},"给":{"docs":{},"出":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"种":{"docs":{},"思":{"docs":{},"路":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"如":{"docs":{},"何":{"docs":{},"旋":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"1":{"8":{"0":{"docs":{},"度":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"处":{"docs":{},"理":{"docs":{},"？":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"翻":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{},"做":{"docs":{},"了":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"有":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}}}},"螺":{"docs":{},"旋":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"docs/leetcode/classify/array.html":{"ref":"docs/leetcode/classify/array.html","tf":0.002544529262086514}}}}}},"排":{"docs":{},"序":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":10.04}},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/sorting.html":{"ref":"docs/leetcode/classify/sorting.html","tf":0.04}}}}}},"列":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"种":{"docs":{},"写":{"docs":{},"法":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308},"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}},"：":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},"，":{"docs":{},"也":{"docs":{},"很":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"：":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}},"大":{"docs":{},"同":{"docs":{},"小":{"docs":{},"异":{"docs":{},":":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"：":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"块":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}},"找":{"docs":{},"出":{"docs":{},"缺":{"docs":{},"失":{"docs":{},"的":{"docs":{},"观":{"docs":{},"测":{"docs":{},"数":{"docs":{},"据":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}}}}}}}}},"模":{"docs":{},"拟":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":10.004807692307692}}}},"的":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}},"索":{"docs":{},"引":{"docs":{"docs/leetcode/classify/simulation.html":{"ref":"docs/leetcode/classify/simulation.html","tf":0.004807692307692308}}}},"元":{"docs":{},"素":{"docs":{},"有":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"，":{"docs":{},"有":{"docs":{},"就":{"docs":{},"将":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"出":{"docs":{},"去":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"就":{"docs":{},"维":{"docs":{},"持":{"docs":{},"不":{"docs":{},"动":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"栈":{"docs":{},"正":{"docs":{},"常":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"，":{"docs":{},"在":{"docs":{},"此":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"累":{"docs":{},"加":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"运":{"docs":{},"行":{"docs":{},"一":{"docs":{},"个":{"docs":{},"环":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"为":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"将":{"docs":{},"有":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"辅":{"docs":{},"助":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.01818181818181818}}},"的":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"，":{"docs":{},"它":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"x":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}},"值":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"docs":{}}}},"外":{"docs":{},"观":{"docs":{},"数":{"docs":{},"列":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}},"字":{"docs":{},"形":{"docs":{},"变":{"docs":{},"换":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}},"符":{"docs":{},"串":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":10}},"解":{"docs":{},"码":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}},"转":{"docs":{},"换":{"docs":{},"整":{"docs":{},"数":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}},"按":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"或":{"docs":{},"者":{"docs":{},"从":{"docs":{},"下":{"docs":{},"到":{"docs":{},"上":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}}}}}}}}}}},"递":{"docs":{},"推":{"docs":{},"公":{"docs":{},"式":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}},"之":{"docs":{},"字":{"docs":{},"形":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}},"略":{"docs":{"docs/leetcode/classify/string.html":{"ref":"docs/leetcode/classify/string.html","tf":0.004694835680751174}}},".":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}},".":{"docs":{},".":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"代":{"docs":{},"码":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0021208907741251328},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.003305785123966942}},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"上":{"docs":{},"面":{"docs":{},"方":{"docs":{},"法":{"2":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"docs":{}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"1":{"docs":{},"位":{"docs":{},"置":{"docs":{},"有":{"docs":{},"房":{"docs":{},"子":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"0":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}},"docs":{}}}}}}}}}}},"docs":{}}}}},"位":{"docs":{},"置":{"docs":{},"都":{"docs":{},"有":{"docs":{},"热":{"docs":{},"水":{"docs":{},"器":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"为":{"docs":{},"\"":{"docs":{},"\"":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}},"运":{"docs":{},"算":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":10}}}},"不":{"docs":{},"为":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"为":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}},"）":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}},"供":{"docs":{},"暖":{"docs":{},"器":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}}}}}}}}},"符":{"docs":{},"合":{"docs":{},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"，":{"docs":{},"不":{"docs":{},"断":{"docs":{},"扩":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"缩":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"达":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"或":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"到":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"大":{"docs":{},"小":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"元":{"docs":{},"素":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}},"第":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"已":{"docs":{},"经":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"过":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"利":{"docs":{},"用":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"了":{"docs":{},"，":{"docs":{},"本":{"docs":{},"部":{"docs":{},"分":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"下":{"docs":{},"如":{"docs":{},"何":{"docs":{},"原":{"docs":{},"地":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"8":{"docs":{},"✖":{"docs":{},"️":{"8":{"docs":{},"的":{"docs":{},"棋":{"docs":{},"盘":{"docs":{},"上":{"docs":{},"，":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"所":{"docs":{},"走":{"docs":{},"的":{"docs":{},"点":{"docs":{},"如":{"docs":{},"下":{"docs":{},":":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"寻":{"docs":{},"找":{"docs":{},"两":{"docs":{},"个":{"docs":{},"正":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}},"峰":{"docs":{},"值":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"旋":{"docs":{},"转":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}}}}}}}}}}},"比":{"docs":{},"目":{"docs":{},"标":{"docs":{},"字":{"docs":{},"母":{"docs":{},"大":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"字":{"docs":{},"母":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}}}},"拿":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"=":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"=":{"docs":{},"[":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},"举":{"docs":{},"例":{"docs":{},"，":{"docs":{},"当":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"用":{"docs":{},"完":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},"已":{"docs":{},"经":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"发":{"docs":{},"生":{"docs":{},"越":{"docs":{},"界":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"说":{"docs":{},"明":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"已":{"docs":{},"经":{"docs":{},"用":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"按":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"计":{"docs":{},"算":{"docs":{},"目":{"docs":{},"标":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},"+":{"docs":{},"k":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}}}}}},"搜":{"docs":{},"索":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":10.000536480686696}},"旋":{"docs":{},"转":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0018587360594795538}}}}}}}},"与":{"docs":{},"图":{"docs":{},"论":{"docs":{},"之":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}},"是":{"docs":{},"找":{"docs":{},"到":{"docs":{},"转":{"docs":{},"置":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"是":{"docs":{},"在":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"反":{"docs":{},"转":{"docs":{},"列":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}},"环":{"docs":{},"由":{"docs":{},"它":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"、":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"列":{"docs":{},"、":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"行":{"docs":{},"和":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"边":{"docs":{},"指":{"docs":{},"向":{"docs":{},"v":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"环":{"docs":{},"由":{"docs":{},"第":{"docs":{},"二":{"docs":{},"行":{"docs":{},"、":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"列":{"docs":{},"、":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"行":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"列":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}},"列":{"docs":{},"和":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"新":{"docs":{},"的":{"docs":{},"i":{"docs":{},"和":{"docs":{},"j":{"docs":{},"开":{"docs":{},"始":{"docs":{},"二":{"docs":{},"分":{"docs":{"docs/leetcode/classify/binary_search.html":{"ref":"docs/leetcode/classify/binary_search.html","tf":0.0009293680297397769}}}}}}}}}}}}},"与":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"准":{"docs":{},"备":{"docs":{},"的":{"docs":{},"，":{"docs":{},"做":{"docs":{},"一":{"docs":{},"件":{"docs":{},"事":{"docs":{},"：":{"docs":{},"就":{"docs":{},"是":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"队":{"docs":{},"头":{"docs":{},"到":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"2":{"docs":{},"个":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"送":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"队":{"docs":{},"头":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"保":{"docs":{},"留":{"docs":{},"这":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"扔":{"docs":{},"掉":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"一":{"docs":{},"个":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"大":{"docs":{},"于":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"链":{"docs":{},"表":{"docs":{},"和":{"docs":{},"$":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"$":{"docs":{},"都":{"docs":{},"要":{"docs":{},"做":{"docs":{},"移":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"移":{"docs":{},"除":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"除":{"docs":{},"，":{"docs":{},"再":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"的":{"docs":{},"存":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"如":{"docs":{},"果":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"于":{"docs":{},"待":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"将":{"docs":{},"待":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"塞":{"docs":{},"进":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"，":{"docs":{},"则":{"docs":{},"重":{"docs":{},"复":{"docs":{},"塞":{"docs":{},"一":{"docs":{},"次":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"为":{"docs":{},"空":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"处":{"docs":{},"理":{"docs":{},"下":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"0":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"docs":{},"j":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}},"f":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"中":{"docs":{},"，":{"docs":{},"从":{"docs":{},"i":{"docs":{},"到":{"docs":{},"j":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"是":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"行":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"长":{"docs":{},"度":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"r":{"docs":{},"和":{"docs":{},"c":{"docs":{},"是":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"行":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}}}}}}}},"准":{"docs":{},"备":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"，":{"docs":{},"做":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"持":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"始":{"docs":{},"终":{"docs":{},"最":{"docs":{},"小":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"正":{"docs":{},"常":{"docs":{},"推":{"docs":{},"入":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"维":{"docs":{},"持":{"docs":{},"最":{"docs":{},"小":{"docs":{},"，":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"的":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"栈":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"记":{"docs":{},"录":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"表":{"docs":{},"示":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"有":{"docs":{},"无":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"转":{"docs":{},"这":{"docs":{},"个":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.001943634596695821}},"时":{"docs":{},"准":{"docs":{},"备":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"与":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"指":{"docs":{},"向":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"=":{"0":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"剑":{"docs":{},"指":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105},"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.0196078431372549}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":10}}}}}}}}}}}}}}}}}}},"区":{"docs":{},"域":{"docs":{},"和":{"docs":{},"检":{"docs":{},"索":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"升":{"docs":{},"级":{"docs":{},"版":{"docs":{},"本":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"当":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}},"参":{"docs":{},"考":{"1":{"docs":{},".":{"docs":{},"如":{"docs":{},"何":{"docs":{},"原":{"docs":{},"地":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"旋":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{},"，":{"docs":{},"挪":{"docs":{},"动":{"docs":{},"下":{"docs":{},"调":{"docs":{},"换":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"即":{"docs":{},"可":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{},"「":{"2":{"3":{"2":{"docs":{},".":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"docs":{}},"docs":{}},"docs":{}}}},"取":{"docs":{},"出":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"分":{"docs":{},"节":{"docs":{},"点":{"docs":{},"存":{"docs":{},"在":{"docs":{},"与":{"docs":{},"否":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"：":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}},"到":{"docs":{},"这":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"的":{"docs":{},"总":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"始":{"docs":{},"终":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"栈":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"空":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"关":{"docs":{},"注":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"此":{"docs":{},"类":{"docs":{},"组":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"为":{"docs":{},"n":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"转":{"docs":{},"置":{"docs":{},"，":{"docs":{},"将":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}},"栈":{"docs":{},"：":{"docs":{},"先":{"docs":{},"进":{"docs":{},"后":{"docs":{},"出":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}},"顶":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"封":{"docs":{},"闭":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"和":{"docs":{},"m":{"docs":{},"这":{"docs":{},"个":{"docs":{},"底":{"docs":{},"相":{"docs":{},"减":{"docs":{},"（":{"docs":{},"木":{"docs":{},"桶":{"docs":{},"原":{"docs":{},"理":{"docs":{},"）":{"docs":{},",":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"节":{"docs":{},"点":{"docs":{},"需":{"docs":{},"要":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"出":{"docs":{},"来":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"子":{"docs":{},"串":{"docs":{},"与":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}},"释":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"写":{"docs":{},"法":{"docs":{},"是":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"，":{"docs":{},"详":{"docs":{},"细":{"docs":{},"参":{"docs":{},"考":{"docs":{},"基":{"docs":{},"础":{"docs":{},"与":{"docs":{},"技":{"docs":{},"巧":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}},"」":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"去":{"docs":{},"记":{"docs":{},"录":{"docs":{},"目":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"更":{"docs":{},"新":{"docs":{},"就":{"docs":{},"去":{"docs":{},"决":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"更":{"docs":{},"新":{"docs":{},"r":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"来":{"docs":{},"维":{"docs":{},"护":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"与":{"docs":{},"否":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"建":{"docs":{},"立":{"docs":{},"字":{"docs":{},"符":{"docs":{},"和":{"docs":{},"其":{"docs":{},"出":{"docs":{},"现":{"docs":{},"位":{"docs":{},"置":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"。":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"记":{"docs":{},"录":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"并":{"docs":{},"且":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"记":{"docs":{},"录":{"docs":{},"当":{"docs":{},"前":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"序":{"docs":{},"列":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"码":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}},"字":{"docs":{},"母":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"扩":{"docs":{},"展":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"码":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"的":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"某":{"docs":{},"个":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"到":{"docs":{},"达":{"docs":{},"最":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"有":{"docs":{},"三":{"docs":{},"类":{"docs":{},"值":{"docs":{},"：":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"移":{"docs":{},"除":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}},"节":{"docs":{},"点":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{},"设":{"docs":{},"计":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":10.000971817298348}}}}},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"$":{"docs":{},"d":{"docs":{},"[":{"docs":{},"]":{"docs":{},"$":{"docs":{},"​":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},":":{"docs":{},"$":{"docs":{},"d":{"docs":{},"[":{"docs":{},"n":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}},"尾":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}},"束":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}},"缓":{"docs":{},"存":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"：":{"docs":{},"新":{"docs":{},"创":{"docs":{},"建":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"部":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"进":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"中":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},":":{"docs":{},"返":{"docs":{},"回":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"将":{"docs":{},"节":{"docs":{},"点":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"部":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}},"进":{"docs":{},"去":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}},"队":{"docs":{},"列":{"docs":{},"是":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"是":{"docs":{},"先":{"docs":{},"进":{"docs":{},"后":{"docs":{},"出":{"docs":{},"，":{"docs":{},"在":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"动":{"docs":{},"作":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"与":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"先":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"f":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"双":{"docs":{},"端":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"docs/leetcode/classify/structure_design.html":{"ref":"docs/leetcode/classify/structure_design.html","tf":0.0009718172983479105}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"更":{"docs":{},"新":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"‘":{"docs":{},"a":{"docs":{},"’":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}}},"z":{"docs":{},"’":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.004608294930875576},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}}}},"三":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}},"四":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"表":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}},"扩":{"docs":{},"大":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"当":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"符":{"docs":{},"合":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"大":{"docs":{},"小":{"docs":{},"时":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"逻":{"docs":{},"辑":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}}}}},"展":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"维":{"docs":{},"度":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}},"更":{"docs":{},"新":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"更":{"docs":{},"新":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"其":{"docs":{},"最":{"docs":{},"大":{"docs":{},"位":{"docs":{},"置":{"docs":{},")":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}},"边":{"docs":{},"序":{"docs":{},"号":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}},"然":{"docs":{},"后":{"docs":{},"开":{"docs":{},"始":{"docs":{},"构":{"docs":{},"造":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"，":{"docs":{},"最":{"docs":{},"外":{"docs":{},"层":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}}}}}},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"内":{"docs":{},"的":{"docs":{},"都":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"去":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"不":{"docs":{},"停":{"docs":{},"的":{"docs":{},"向":{"docs":{},"右":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"。":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"取":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}},":":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"从":{"docs":{},"未":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"直":{"docs":{},"接":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"右":{"docs":{},"边":{"docs":{},"界":{"docs":{},"；":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"）":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"则":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"（":{"docs":{},"左":{"docs":{},"边":{"docs":{},"索":{"docs":{},"引":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"观":{"docs":{},"察":{"docs":{},"当":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"；":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},"）":{"docs":{},"重":{"docs":{},"复":{"docs":{},"（":{"1":{"docs":{},"）":{"docs":{},"（":{"2":{"docs":{},"）":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"左":{"docs":{},"边":{"docs":{},"索":{"docs":{},"引":{"docs":{},"无":{"docs":{},"法":{"docs":{},"再":{"docs":{},"移":{"docs":{},"动":{"docs":{},"；":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}},"4":{"docs":{},"）":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"用":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"的":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"大":{"docs":{},"小":{"docs":{},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"结":{"docs":{},"果":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"获":{"docs":{},"取":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788},"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"，":{"0":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}},"docs":{},"将":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"界":{"docs":{"docs/leetcode/classify/two_pointers.html":{"ref":"docs/leetcode/classify/two_pointers.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},"a":{"docs":{},"_":{"docs":{},"n":{"docs":{},"$":{"docs":{},"的":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"是":{"docs":{},"$":{"docs":{},"w":{"docs":{},"$":{"docs":{},",":{"docs":{},"目":{"docs":{},"标":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"获":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"$":{"docs":{},"d":{"docs":{},"[":{"docs":{},"]":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"n":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{},"+":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{},"$":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"$":{"docs":{},"x":{"docs":{},"$":{"docs":{},"满":{"docs":{},"足":{"docs":{},"：":{"docs":{},"$":{"0":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0028694404591104736}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"]":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"w":{"docs":{},"+":{"docs":{},"k":{"docs":{},"]":{"docs":{},")":{"docs":{},"$":{"docs":{},"​":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"w":{"docs":{},"+":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"w":{"docs":{},"+":{"docs":{},"k":{"docs":{},"]":{"docs":{},")":{"docs":{},"$":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"$":{"docs":{},"a":{"docs":{},"_":{"0":{"docs":{},"$":{"docs":{},",":{"docs":{},"$":{"docs":{},"a":{"docs":{},"_":{"1":{"docs":{},"$":{"docs":{},",":{"docs":{},"$":{"docs":{},"a":{"docs":{},"_":{"2":{"docs":{},"$":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"：":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"缩":{"docs":{},"减":{"docs":{},"到":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}},"docs":{}}}}},"在":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"上":{"docs":{},"做":{"docs":{},"很":{"docs":{},"多":{"docs":{},"手":{"docs":{},"脚":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"本":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"那":{"docs":{},"些":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"买":{"docs":{},"卖":{"docs":{},"多":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"有":{"docs":{},"一":{"docs":{},"天":{"docs":{},"冷":{"docs":{},"冻":{"docs":{},"期":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"收":{"docs":{},"取":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"图":{"docs":{},"视":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"中":{"docs":{},"的":{"docs":{},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}},"国":{"docs":{},"际":{"docs":{},"站":{"docs":{},"看":{"docs":{},"的":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"很":{"docs":{},"赞":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}},"替":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}},"构":{"docs":{},"建":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":10}},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}},"考":{"docs":{},"试":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"困":{"docs":{},"扰":{"docs":{},"度":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}},"至":{"docs":{},"少":{"docs":{},"有":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}},"说":{"docs":{},"明":{"docs":{},"[":{"docs":{},"l":{"docs":{},",":{"docs":{},"r":{"docs":{},"]":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"内":{"docs":{},"有":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"docs":{},"k":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"c":{"docs":{},"，":{"docs":{},"缩":{"docs":{},"减":{"docs":{},"左":{"docs":{},"窗":{"docs":{},"口":{"docs":{"docs/leetcode/classify/sliding_window.html":{"ref":"docs/leetcode/classify/sliding_window.html","tf":0.0014347202295552368}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"调":{"docs":{},"栈":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":10.003731343283581}}}},"词":{"docs":{},"拆":{"docs":{},"分":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}},"每":{"docs":{},"日":{"docs":{},"温":{"docs":{},"度":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}}},"组":{"docs":{},"成":{"docs":{},"高":{"docs":{},"度":{"docs":{"docs/leetcode/classify/monotonic_stack.html":{"ref":"docs/leetcode/classify/monotonic_stack.html","tf":0.0037313432835820895}}}}},"合":{"docs":{},"总":{"docs":{},"和":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}}},"「":{"docs":{},"^":{"docs":{},"」":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}},"中":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}},"每":{"docs":{},"个":{"docs":{},"环":{"docs":{},"，":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"该":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"跟":{"docs":{},"踪":{"docs":{},"当":{"docs":{},"前":{"docs":{},"环":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"和":{"docs":{},"结":{"docs":{},"束":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.001072961373390558}}}}},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"英":{"docs":{},"语":{"docs":{},"表":{"docs":{},"示":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"转":{"docs":{},"换":{"docs":{},"英":{"docs":{},"文":{"docs":{},"表":{"docs":{},"示":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"硬":{"docs":{},"编":{"docs":{},"码":{"docs":{},"的":{"docs":{},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}},"统":{"docs":{},"计":{"docs":{},"按":{"docs":{},"位":{"docs":{},"或":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"数":{"docs":{},"目":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}}}}}}}}}}},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{},"转":{"docs":{},"整":{"docs":{},"数":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}}}},"表":{"docs":{},"示":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"「":{"docs":{},"长":{"docs":{},"度":{"docs":{},"」":{"docs":{},"为":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279}}}}}}},"s":{"docs":{},"从":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"到":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"以":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{"docs/leetcode/classify/search.html":{"ref":"docs/leetcode/classify/search.html","tf":0.000536480686695279},"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"图":{"docs":{},"论":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":10.006535947712418}}},"解":{"docs":{},"结":{"docs":{},"果":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"翻":{"docs":{},"转":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"问":{"docs":{},"题":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":10}}}}}}}},"回":{"docs":{},"溯":{"docs":{},"算":{"docs":{},"法":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":10}}}}}}}},"网":{"docs":{},"络":{"docs":{},"空":{"docs":{},"闲":{"docs":{},"的":{"docs":{},"时":{"docs":{},"刻":{"docs":{"docs/leetcode/classify/graph.html":{"ref":"docs/leetcode/classify/graph.html","tf":0.006535947712418301}}}}}}}}},"`":{"docs":{},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"1":{"docs":{},"`":{"docs":{},"是":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"`":{"docs":{},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"_":{"1":{"docs":{},"`":{"docs":{},",":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"今":{"docs":{},"天":{"docs":{},"买":{"docs":{},"入":{"docs":{},"了":{"docs":{},"股":{"docs":{},"票":{"docs":{},"`":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},"`":{"docs":{},"，":{"docs":{},"买":{"docs":{},"入":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"负":{"docs":{},"债":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"提":{"docs":{},"前":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"`":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}},"为":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"硬":{"docs":{},"比":{"docs":{},"较":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"：":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}},"参":{"docs":{},"考":{"2":{"docs":{},".":{"docs":{},"再":{"docs":{},"论":{"docs":{},"如":{"docs":{},"何":{"docs":{},"原":{"docs":{},"地":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"旋":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{},"，":{"docs":{},"在":{"docs":{},"做":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"将":{"docs":{},"行":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"变":{"docs":{},"成":{"docs":{},"列":{"docs":{},"翻":{"docs":{},"转":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}},"买":{"docs":{},"卖":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"时":{"docs":{},"机":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}},"含":{"docs":{},"手":{"docs":{},"续":{"docs":{},"费":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"好":{"docs":{},"时":{"docs":{},"机":{"docs":{},"(":{"docs":{},"一":{"docs":{},")":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}}}},"减":{"docs":{},"去":{"docs":{},"这":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"1":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}}}}}}},"创":{"docs":{},"建":{"docs":{},"预":{"docs":{},"处":{"docs":{},"理":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"到":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"d":{"docs":{},"p":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"docs":{}}}},"docs":{}}}},"列":{"docs":{},"数":{"docs":{},"，":{"docs":{},"内":{"docs":{},"循":{"docs":{},"环":{"docs":{},"从":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"外":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"行":{"docs":{},"数":{"docs":{},"/":{"2":{"docs":{},"，":{"docs":{},"将":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"docs":{}},"，":{"docs":{},"内":{"docs":{},"循":{"docs":{},"环":{"docs":{},"从":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":10.000531349628055},"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":10.005208333333334}}}}}},"即":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}},"当":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}},"docs":{}}}}},"原":{"docs":{},"始":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"开":{"docs":{},"始":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"得":{"1":{"1":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}},"docs":{},"到":{"1":{"1":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}},"docs":{}},"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"为":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}},"总":{"docs":{},"结":{"docs":{},"就":{"docs":{},"是":{"docs":{},"：":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"手":{"docs":{},"里":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}},"没":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0010626992561105207}}}}}}}},"打":{"docs":{},"印":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"持":{"docs":{},"有":{"docs":{},"的":{"docs":{},"总":{"docs":{},"收":{"docs":{},"益":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0021253985122210413}}}}}}}},"探":{"docs":{},"索":{"docs":{},"左":{"docs":{},"边":{"docs":{},"和":{"docs":{},"右":{"docs":{},"边":{"docs":{},"位":{"docs":{},"置":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}},"本":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"文":{"docs":{},"章":{"docs":{},"着":{"docs":{},"重":{"docs":{},"讲":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"，":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"马":{"docs":{},"拉":{"docs":{},"车":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"不":{"docs":{},"详":{"docs":{},"细":{"docs":{},"展":{"docs":{},"开":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"取":{"docs":{},"自":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"大":{"docs":{},"佬":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"条":{"docs":{},"件":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"砍":{"docs":{},"头":{"docs":{},"去":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"有":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"特":{"docs":{},"判":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}},"由":{"docs":{},"中":{"docs":{},"心":{"docs":{},"往":{"docs":{},"两":{"docs":{},"边":{"docs":{},"扩":{"docs":{},"散":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"满":{"docs":{},"足":{"docs":{},"最":{"docs":{},"大":{"docs":{},"回":{"docs":{},"文":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"值":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"前":{"docs":{},"一":{"docs":{},"天":{"docs":{},"的":{"docs":{},"收":{"docs":{},"益":{"docs":{},"情":{"docs":{},"况":{"docs":{},"（":{"docs":{},"有":{"docs":{},"无":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"）":{"docs":{},",":{"docs":{},"f":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"来":{"docs":{},"回":{"docs":{},"滚":{"docs":{},"动":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"一":{"docs":{},"维":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"种":{"docs":{},"子":{"docs":{},"题":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"股":{"docs":{},"票":{"docs":{},"只":{"docs":{},"能":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"一":{"docs":{},"次":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}},"可":{"docs":{},"以":{"docs":{},"多":{"docs":{},"次":{"docs":{},"买":{"docs":{},"卖":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"（":{"docs":{},"科":{"docs":{},"普":{"docs":{},"文":{"docs":{},"，":{"docs":{},"基":{"docs":{},"础":{"docs":{},"，":{"docs":{},"背":{"docs":{},"包":{"docs":{},"九":{"docs":{},"讲":{"docs":{},"）":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}},"景":{"docs":{},"知":{"docs":{},"识":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}},"脱":{"docs":{},"胎":{"docs":{},"与":{"docs":{},"方":{"docs":{},"法":{"1":{"docs":{},"，":{"docs":{},"添":{"docs":{},"加":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}},"docs":{}}}}}},"规":{"docs":{},"定":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"获":{"docs":{},"利":{"docs":{},"，":{"docs":{},"+":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{},"买":{"docs":{},"入":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"算":{"docs":{},"负":{"docs":{},"债":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},")":{"docs":{},"，":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"最":{"docs":{},"长":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"和":{"docs":{},"相":{"docs":{},"应":{"docs":{},"它":{"docs":{},"在":{"docs":{},"原":{"docs":{},"始":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"起":{"docs":{},"点":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"后":{"docs":{},"要":{"docs":{},"设":{"docs":{},"置":{"docs":{},"下":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"将":{"docs":{},"位":{"docs":{},"置":{"docs":{},"放":{"docs":{},"置":{"docs":{},"于":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"中":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"跳":{"docs":{},"跃":{"docs":{},"游":{"docs":{},"戏":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.001594048884165781}}}}}},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"索":{"docs":{},"引":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"跳":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"步":{"docs":{},"数":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{"docs/leetcode/classify/dynamic_programing.html":{"ref":"docs/leetcode/classify/dynamic_programing.html","tf":0.0005313496280552603}}}}}}}}}}}}}}}}}}}}},"博":{"docs":{},"弈":{"docs":{},"问":{"docs":{},"题":{"docs":{"docs/leetcode/classify/game_problem.html":{"ref":"docs/leetcode/classify/game_problem.html","tf":10.035714285714286}}}}}},"^":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.020833333333333332},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"交":{"docs":{},"替":{"docs":{},"位":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}}},"判":{"docs":{},"定":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"唯":{"docs":{},"一":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}}}},"延":{"docs":{},"伸":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"：":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"操":{"docs":{},"作":{"docs":{},"常":{"docs":{},"见":{"docs":{},"技":{"docs":{},"巧":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}}}}}}}}}},"汉":{"docs":{},"明":{"docs":{},"距":{"docs":{},"离":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"上":{"docs":{},"一":{"docs":{},"位":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}}}}}}},"）":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"相":{"docs":{},"同":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"为":{"1":{"docs":{"docs/leetcode/classify/bit.html":{"ref":"docs/leetcode/classify/bit.html","tf":0.006944444444444444}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}},"自":{"docs":{},"除":{"docs":{},"数":{"docs":{"docs/leetcode/classify/math.html":{"ref":"docs/leetcode/classify/math.html","tf":0.2}}}}},"天":{"docs":{},"际":{"docs":{},"线":{"docs":{},"问":{"docs":{},"题":{"docs":{"docs/leetcode/classify/sweep_line.html":{"ref":"docs/leetcode/classify/sweep_line.html","tf":0.25}}}}}}},"扫":{"docs":{},"描":{"docs":{},"线":{"docs":{"docs/leetcode/classify/sweep_line.html":{"ref":"docs/leetcode/classify/sweep_line.html","tf":10.25}}}}},"圆":{"docs":{},"圈":{"docs":{},"中":{"docs":{},"最":{"docs":{},"后":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"docs/leetcode/swordoffer/swordoffer.html":{"ref":"docs/leetcode/swordoffer/swordoffer.html","tf":0.00392156862745098}}}}}}}}},"图":{"docs":{},"像":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"矩":{"docs":{},"阵":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"从":{"docs":{},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"打":{"docs":{},"印":{"docs":{},"链":{"docs":{},"表":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}},"上":{"docs":{},"图":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"简":{"docs":{},"单":{"docs":{},"地":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"旋":{"docs":{},"转":{"1":{"8":{"0":{"docs":{},"度":{"docs":{},"，":{"docs":{},"以":{"docs":{},"相":{"docs":{},"反":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"打":{"docs":{},"印":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"观":{"docs":{},"察":{"docs":{},"到":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}},"目":{"docs":{},"标":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"的":{"docs":{},"值":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}},"图":{"docs":{},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"矩":{"docs":{},"阵":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"累":{"docs":{},"加":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"递":{"docs":{},"减":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}},"采":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"不":{"docs":{},"断":{"docs":{},"进":{"docs":{},"入":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"当":{"docs":{},"到":{"docs":{},"达":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"时":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"返":{"docs":{},"回":{"docs":{"docs/swordoffer/structure.html":{"ref":"docs/swordoffer/structure.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"(":{"docs":{},"二":{"docs":{},")":{"docs":{"docs/swordoffer/dynamic_programing.html":{"ref":"docs/swordoffer/dynamic_programing.html","tf":0.005208333333333333}}}}}}}}}}}}}},"y":{"docs":{},")":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}},",":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"主":{"docs":{},"要":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"：":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"转":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"反":{"docs":{},"转":{"docs":{},"转":{"docs":{},"置":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"列":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}},"互":{"docs":{},"换":{"docs":{},"。":{"docs":{},"执":{"docs":{},"行":{"docs":{},"两":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"外":{"docs":{},"循":{"docs":{},"环":{"docs":{},"从":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"考":{"docs":{},"虑":{"docs":{},"以":{"docs":{},"下":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"巡":{"docs":{},"回":{"docs":{},"问":{"docs":{},"题":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}}}}}}}}}}}},"当":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.013636363636363636}},"x":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}},"子":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}},":":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"处":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"与":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.001652892561983471}}}}}}},"度":{"docs":{},"？":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"循":{"docs":{},"环":{"docs":{},"到":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"怎":{"docs":{},"么":{"docs":{},"转":{"docs":{},"呢":{"docs":{},"？":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"化":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}},"想":{"docs":{},"法":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"将":{"docs":{},"源":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"最":{"docs":{},"终":{"docs":{},"图":{"docs":{},"的":{"docs":{},"所":{"docs":{},"需":{"docs":{},"列":{"docs":{},"，":{"docs":{},"将":{"docs":{},"使":{"docs":{},"用":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"来":{"docs":{},"转":{"docs":{},"换":{"docs":{},"图":{"docs":{},"。":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"以":{"docs":{},"螺":{"docs":{},"旋":{"docs":{},"形":{"docs":{},"式":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"逆":{"docs":{},"时":{"docs":{},"针":{"docs":{},"旋":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"源":{"docs":{},"图":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"行":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"二":{"docs":{},"行":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}},"矩":{"docs":{},"阵":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}},"数":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}},"算":{"docs":{},"法":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0024793388429752068}}}},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}},"张":{"docs":{},"图":{"docs":{},"片":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"将":{"docs":{},"它":{"docs":{},"旋":{"docs":{},"转":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"✖":{"docs":{},"️":{"docs":{},"n":{"docs":{},"的":{"docs":{},"棋":{"docs":{},"盘":{"docs":{},"，":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"被":{"docs":{},"放":{"docs":{},"在":{"docs":{},"一":{"docs":{},"块":{"docs":{},"空":{"docs":{},"棋":{"docs":{},"盘":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"块":{"docs":{},"上":{"docs":{},"。":{"docs":{},"按":{"docs":{},"照":{"docs":{},"象":{"docs":{},"棋":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"骑":{"docs":{},"士":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"必":{"docs":{},"须":{"docs":{},"准":{"docs":{},"确":{"docs":{},"地":{"docs":{},"访":{"docs":{},"问":{"docs":{},"每":{"docs":{},"个":{"docs":{},"方":{"docs":{},"块":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{},"打":{"docs":{},"印":{"docs":{},"每":{"docs":{},"个":{"docs":{},"单":{"docs":{},"元":{"docs":{},"格":{"docs":{},"的":{"docs":{},"访":{"docs":{},"问":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"置":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}},"化":{"docs":{},"为":{"docs":{},"全":{"docs":{},"零":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"反":{"docs":{},"转":{"docs":{},"次":{"docs":{},"数":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}},"阶":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"翻":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{},"后":{"docs":{},"，":{"docs":{},"变":{"docs":{},"成":{"docs":{},"：":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}},"docs":{}},"docs":{}}}}}},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"是":{"docs":{},"原":{"docs":{},"地":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"旋":{"docs":{},"转":{"docs":{"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"ref":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","tf":0.0008264462809917355}}}}}}}}}}}}}}}}}},"回":{"docs":{},"溯":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"算":{"docs":{},"法":{"docs":{},"范":{"docs":{},"例":{"docs":{},"，":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"「":{"docs":{},"有":{"docs":{},"效":{"docs":{},"」":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"使":{"docs":{},"用":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"具":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"共":{"docs":{},"同":{"docs":{},"特":{"docs":{},"性":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"每":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"配":{"docs":{},"置":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"每":{"docs":{},"种":{"docs":{},"配":{"docs":{},"置":{"docs":{},"只":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"这":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"是":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"所":{"docs":{},"有":{"docs":{},"配":{"docs":{},"置":{"docs":{},"，":{"docs":{},"并":{"docs":{},"输":{"docs":{},"出":{"docs":{},"符":{"docs":{},"合":{"docs":{},"给":{"docs":{},"定":{"docs":{},"问":{"docs":{},"题":{"docs":{},"约":{"docs":{},"束":{"docs":{},"的":{"docs":{},"配":{"docs":{},"置":{"docs":{},"。":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"渐":{"docs":{},"进":{"docs":{},"式":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"是":{"docs":{},"对":{"docs":{},"原":{"docs":{},"始":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"配":{"docs":{},"置":{"docs":{},"都":{"docs":{},"会":{"docs":{},"生":{"docs":{},"成":{"docs":{},"并":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"。":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"描":{"docs":{},"述":{"docs":{"docs/articles/algorithm/backtracing/图解回溯算法.html":{"ref":"docs/articles/algorithm/backtracing/图解回溯算法.html","tf":0.01282051282051282}}}},"技":{"docs":{},"巧":{"1":{"docs":{},"：":{"docs":{},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"按":{"docs":{},"索":{"docs":{},"引":{"docs":{},"拍":{"docs":{},"平":{"docs":{},"到":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}},"2":{"docs":{},"：":{"docs":{},"将":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"当":{"docs":{},"成":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"转":{"docs":{},"化":{"docs":{},"成":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}},"docs":{}}},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"列":{"docs":{},"数":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}},"行":{"docs":{},"数":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.00909090909090909}}}}}}},"而":{"docs":{},"如":{"docs":{},"何":{"docs":{},"通":{"docs":{},"过":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"=":{"6":{"docs":{},"反":{"docs":{},"向":{"docs":{},"得":{"docs":{},"到":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"呢":{"docs":{},"？":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"该":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"如":{"docs":{},"果":{"docs":{},"按":{"docs":{},"每":{"docs":{},"行":{"docs":{},"依":{"docs":{},"次":{"docs":{},"排":{"docs":{},"开":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"ref":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","tf":0.004545454545454545}}}}}}}}}}}}}}}}}}}}}}}}}}},"length":5278},"corpusTokens":["!=","!=null","!=null)","!f)","!parent.containskey(q))","!seen.add(num));","!stk.isempty())","!vis[i","!visited[leftpos])","\"","\"\"","\"\",","\"\";","\"\";//当前节点为空，返回\"\"","\"\";//当前节点没有左右孩子节点，即叶子节点，返回这个值","\"\";//结果","\"(\"","\"()\"","\"(leftchild)\"","\")","\")\"","\")\";//左孩子有或者没有都加","\")\";//当前节点只有左孩子，没有右孩子，给左孩子加上\"()\",右孩子不加","\")()())()()(()()\";","\"));","\");","\",","\",\"","\"1\";","\"[]\";","\"billion\"};","\"c\",","\"cc\",","\"ccc\",","\"cd\",","\"cm\"","\"cm\",","\"d\",","\"dc\",","\"dcc\",","\"dccc\",","\"eight\",","\"eighteen\",","\"eighty\",","\"eleven\",","\"fifteen\",","\"fifty\",","\"five\",","\"forty\",","\"four\",","\"fourteen\",","\"i\",","\"i\"};//对应的罗马数字","\"ii\",","\"iii\",","\"iv\",","\"ix\"","\"ix\",","\"l\",","\"lx\",","\"lxx\",","\"lxxx\",","\"m\",","\"million\",","\"mm\",","\"mmm\"","\"nine\",","\"nineteen\"};","\"ninety\"};","\"null\";","\"one\",","\"seven\",","\"seventeen\",","\"seventy\",","\"six\",","\"sixteen\",","\"sixty\",","\"ten\",","\"thirteen\",","\"thirty\",","\"thousand\",","\"three\",","\"twelve\",","\"twenty\",","\"two\",","\"v\",","\"vi\",","\"vii\",","\"viii\",","\"x\",","\"xc\"","\"xc\",","\"xl\",","\"xx\",","\"xxx\",","\"zero\";","$a_n$的窗口宽度是$w$,目标是为了获取一个$d[]=int[n","$d[iw+j]=max(a[iw+j+x])$这里的$x$满足：$0","$d[iw+j]=max(right[iw+j],","$d[m]","$left[iw+j]=left_max(a[iw+k])$​","$right[iw+j]=right_max(a[iw+k])$","%","%d","&","&&","'","'('","'(')","'(');","')","'*')","'+')","'0'","'['","'[');","'a';","'a']","'a']++;","'a'];","'f'","'f',","'t',","'{')","'{');","(","(!arr[idx].equals(\"null\"))","(!cache.containskey(key))","(!deque.isempty()","(!deque.isempty())","(!help.isempty())","(!isvalidbst(root.left))","(!isvalidbst(root.right))","(!nodequeue.isempty())","(!parent.containskey(p)","(!pq.isempty()","(!q.isempty())","(!queue.isempty())","(!set.contains(q))","(!stk.isempty()","(!stk.isempty())","(\"\".equals(remain))","(\"null\".equals(v))","((blocks[idx]","((cols[c]","((double)","((i","((m","((mark","((t","());","(),","(1","(;","(a,","(account","(arr","(arr[(n","(arr[curpos]","(array","(atoi)","(c","(cache.containskey(i))","(cache.containskey(s))","(cache.containskey(start))","(cache.size()","(cache[i]","(cache[s1][p1]","(ch[c","(char","(child","(cnt","(cur","(cur.left","(cur.next","(cur.random","(cur.right","(cur.val","(curnode.left","(curnode.right","(curpo","(curr","(data.equals(\"[]\"))","(data.isempty()","(data.isempty())","(data.size()","(deque.size()","(dist[v]","(end","(f","(f[i","(f[i]","(fast.next","(head","(head.next","(head.random","(head.val","(help.isempty()","(help.isempty())","(help.peek()","(i","(i,","(idx","(index","(int","(int)","(int[]","(isodd)","(j","(j,","(k","(key","(l","(l1","(l1.val","(l2","(la","(lb","(le","(left","(leftkthnum","(len","(len1","(length","(list","(list1","(list1.val","(ln.val","(lp.sum","(m","(map.containskey(cur))","(math.max(nums1leftmax,","(math.min(height[cur],","(maxcnt","(memo[curr]","(memo[start][end]","(memory.containskey(s))","(n","(node","(node.end","(node.left","(node.right","(node.start","(num","(nums1[i]","(nums2leftmax","(nums[l]","(nums[m]","(nums[mid]","(nxt","(op","(op.equals(\"+\"))","(op.equals(\"c\"))","(op.equals(\"d\"))","(p","(p1","(p[i]","(phead","(pop","(pq.isempty()","(pq.size()","(prev","(prev.next","(price","(proot","(r","(re","(res)","(resr","(right","(rightpo","(root","(root.left","(root.right","(root.val","(rp.sum","(s","(s.charat(0)","(s.charat(i)","(s.charat(l++)","(s.charat(start)","(s.indexof(divide)","(s.isempty())","(s.length()","(s.startswith(word))","(second","(set.contains(i))","(sign","(slow","(start","(stk.isempty())","(string","(sub));","(sub.isempty()","(sub.size()","(submaxx","(sum","(t","(t.left","(t.right","(target","(this.balance[account1]","(this.balance[account]","(tot","(true)","(use","(vis.contains(node))","(word.length()","(x,","(y,",")",");","){","*","*/","*[","*[[","+","+1==","+=",",",",fast",",int",",rn",",因为只有一次买入卖出的机会，",".","...","/","/*","/**","//","//2147483647","//[0,0,1,1,1,2,2,3,3,4]","//[0...3]之间的长度是4，0也就是3","//[1,2,3,4]","//[1]","//[5,3,6,2,4,null,7]","//count数组","//data的数据没有了从help中拿","//dict.containskey(c)","//dp[i]","//f[0]","//f[1]","//f[i]","//f[i][0]表示第i天手里有股票获得的最大利润","//f[i][0]表示第i天手里没有股票获得的最大利润","//f[i][0]表示第i天手里没有股票，持有的总收益","//f[i][1]表示第i天手里有股票获得的最大利润","//f[i][1]表示第i天手里有股票，持有的总收益","//f[i]表示以arr[i]这个数为结尾的，连续子数组的最大和","//f[i]表示以array[i","//f[i]表示以s[i","//f[j][i]","//f_0是当天手里无股票，","//flag是","//f的标志位要是true的时候，并且slow==fast","//head的next需要断开","//k","//k:叶子节点，","//k:子集或后的值，v:该值出现的次数","//k经剩下1个时，说明找到了","//l","//lefth[i]表示第i个柱子左边最高的柱子的高度","//map","//maxf表示滑窗中，相同字符最大的出现次数，本题只是't'","//memo[i]表示从索引为i的位置，能否跳跃到最后一个下标","//next","//output:[[1,4],[6,9],[11,14]]","//prev","//righth[i]表示第i个柱子右边最高的柱子的高度","//r表示每一行的索引","//step1:率先找到p或者q，先左节点，后右节点，然后出栈的时候，选右节点优先","//step2：set收集的是p节点的所有祖先节点，包括p节点的直系父节点","//step3:找q的父节点，第一个出现在set集合中的即是lca","//step表示可以跳跃的步数","//stk存的是上一个不匹配的位置（下标）","//true：奇数","//一直压右子树","//一直压左子树","//一直添加该节点的左","//上述的两个数组应该是符合单调性的","//两个栈的数据都为空，返回","//串联两段链表","//从","//从右侧往左找，一直递增地找","//从左侧往右找，一直递增地找","//使用set来标识是否访问过，控制\")\"边界","//倒数第二个位置开始","//全局最大值和局部最大值","//全局最大子数组和的起始索引","//出口函数","//出口，索引idx到达最后一个下标的位置或者超过了最后一个下标","//初始化","//初始时，slow和fast是相等的，如果没有标志位会提前退出","//删除cur节点","//前一段链表的第一个节点","//加上当前切分的单词","//卖出（sell）的时候需要扣除手续费，为","//去掉首位","//双端队列(两端都可进出)","//只要左右子树有一个是true即可","//右","//右移一位","//各自上下取整，错开一个位置","//哑结点","//回到起始点","//回溯过程需要将map的数量","//固定a","//基于上一种方法，fee`的话相当于在卖入`buy`的时候算负债，或者在卖出`sell`的时候扣除得到的利润","//堆栈","//复制一个节点","//大根堆，从栈顶到栈底","//头插的次数，偶数个的话","//头节点开始，且","//如果nums1[i]","//如果slow和fast不是同一个节点","//如果只剩下一个节点，因为节点是环状的，所以自己指向自己即可退出","//如果基准的right高度比其左侧的l的高度大，是可以形成雨水的，因为left比right大","//如果已经相等，说明已经相遇","//如果当前的bit位于上一位t是相同的，则返回fals","//如果当前的位置能跳跃到上一个位置lastpos，更新上一个位置lastpo","//如果找到了右边括号，且符合题意的右边括号，找到栈顶的字符看看是否不是成对的","//如果找到，返回","//如果是左子树，拿到左子树的右节点，如果是右子树，拿到右子树的左节点","//如果这一位被对冲掉，返回fals","//如果这时候不是第一次相遇，而fast已经到链表的末尾了，说明没有环","//如果链表是","//始终保持nums1的长度短","//字符s中不至多包含k个c的最大长度","//字符s中可以至多包含k个c的最大长度","//存字符s的下标索引，这些索引例如idx,","//存当前节点的父节点，k:当前节点，v:当前节点的父节点，root节点的父节点为nul","//存的下标索引","//对于当前的curr索引，最多可以跳nums[curr]步，最少我们从1开始起跳，0没有意义，出去了","//将从根节点到当前节点，有多少的路径和等于pathsum存入map","//局部的最大子数组和的起始索引","//左右两个子树的queue","//左右两侧都不能形成一个封闭的区域","//左右两棵子树只要一个符合即可","//左右侧的索引","//左右窗口","//左右窗口，让r自增往右推","//左右索引","//左节点先出栈，入的时候先入右节点，后入左节点","//左边括号纷纷入栈","//开始时","//开始返回结果，结合奇偶性","//异或（","//弹出data的栈顶元素","//当curr跳到末尾或者跳过末尾的时候，递归结束","//当cur的后之后的cur相同跳过之后的","//当前[start1..end1]","//当前位bit","//当前位置的下标","//当前方法是在买入（buy）的时候算负债","//当前的节点是叶子节点，比较剩下的sum值是否相等","//当前索引idx","//当前节点与下个节点的值如果相同，则跳下个节点","//当前节点只要不是null，就一直在循环里绕","//当前节点是叶子节点，开始比较val是否相等","//当前节点的的左节点空，右节点非空，左节点加\"()\"","//快慢指针找整个链表的中点，准备切分","//所以head.next.next","//找到partition的索引","//拿`nums1=[1,2]`和`nums2=[3,4]`举例，当`nums1`用完的时候，`start1`已经跳到`len(nums1)`的位置，开始发生越界，这时候说明`nums1`已经用完了，按`nums2`的数组下标计算目标索引，也就是`nums2[start2+k","//拿到最右边的一位","//拿到每个字符的移动的位数","//按矩阵的的列翻转","//探索左右子树","//收集节点","//是否到开头了","//普通队列(一端进另一端出):","//更新全局的","//最后一个位置","//最大单词长度，下面的dfs做切分的时候，超过这个单词的长度变得没有意义，一个小的优化点","//最左边的柱子的左边没有柱子了，lefth[0]=0","//枚举所有子集","//标识节点","//每次取k的一半","//每次取左右两侧的最小值，做高度，每次步进1个长度","//注意","//注意用start索引做key，s做key的时候不可行","//添加结果","//空间压缩dp","//第一次相遇点","//第一次进来","//第二次相遇","//索引和的最小值，根据数据范围取","//结果列表","//统计最大长度","//翻转第二段链表，并返回第二段链表的第一个节点","//翻转结果","//翻转链表","//考虑每一个环","//而head是4，head的next是5，next.next是空","//获取栈首元素后，元素不会出栈","//获取栈首元素后，元素将会出栈","//行","//规定买入（buy）的时候利润为负","//规定卖出（sell）的时候利润为正，即+prices[i]","//计算上下取整的位置的kth，免去判断奇偶数","//计算：","//记录当前处理到的索引","//记忆化","//记忆化hashmap","//记忆化剪枝","//调用库函数","//路径和","//跳到下一个节点","//转置","//这一步是为了移除这个叶子节点的值，不管这个叶子节点是否满足条件","//这个case表示在1","//这里可能会出现相等高度的柱子，体积是0","//进入下一层","//遇到+号","//遍历list2","//遍历完当前节点后，将当前节点滑动到下一个节点","//遍历获取map","//遍历获取当前节点和当前节点的前一个节点","//随机化一个pivot","//需要临界点判断下","//需要判断链接状态，如果是相同的说明上一步没有重复的，不同的话，说明有重复的","/=","0","0(1)","0)","0);","0,","0.0;","0.如何将一张图翻转90度","0.抽象模型","001100011","01","01.01.","01.07.","01.数据结构","02.算法","09.","0;","0;//交易了一次","0;//交易了两次","0;//当前的滑窗","0;//无股票状态","0;//最长的回文子串的长度","0;//结果集滑窗","0;//计数索引","0;//记录边的序号,边的序号从0开始","0;//链表的数量","0],","0},","0}};","0表示第i天没有股票的状态[无股票]","0说明找到了，返回true","0，说明第","1","1(5)","1)","1));","1)+fib(n","1)+fib(num","1),","1).split(\",\");","1);","1)=4","1,","1,0,1,2,","1,0,1]]","1,2],[","1.alice和bob均不可以在两段拿走a或者b，需要判断是否在字符串中出现了连续的aaa或者bbb这样的字符的时候，拿走一个a或者b，分别统计拿走的次数分别记为a和b，返回a>b即可","1.head的next指针指向递归的结果","1.left和right都为空，说明root的左右子树中都不包含p和q节点，返回null即可","1.为了解决给定的问题，有两个任务。","1.从head节点开始dfs遍历整个链表","1.创建一个大小为","1.创建一个递归函数，该函数接受一个节点和两个值n1和n2。","1.在n边的矩阵中有n/2个正方形或环。一次处理一个正方形，运行一个环，一次遍历矩阵一个环，即从","1.如何原地将矩阵旋转90度","1.定义一个cur节点，将其入栈","1.将源数组按k的大小分，最后一组不够k的话，维持现状","1.搜索值是数组元素，从0开始计数，得搜索值的索引值","1.查找矩阵的转置。","1.翻转每一行","1.该搜索键在范围内，且是数组元素，由0开始计数，得搜索值的索引值","1.骑士巡回问题","10","10);","10,","10.","100","100);","100,","1000","1000);","1000,","1000;","1000~3000","100_005;//顶点数量","100~900","101","101.","101;","101，x","102.","103.","104.","10;","10;//每次拿到num的最后面的数，找到后添加","10;//移除最末位","10},","10~90","11","11,","11.","110，x","111.","11，x","12","12,","12.","121.","122.","123.","124.","12},","12}};","13","13,","13.","1306.","131.","138.","139.","13};","14","14,","140.","141.","142.","143.","144.","145.","146.","14;","15","15,","15.","151.","153.","154.","155.","15},","16","16.08.","160.","162.","16}","16}}","16}};","17","17,","18","18,","18.","188.","19","19,","1:","1;","1;//初始值","1=0+n","1=n","1]","1])","1])$","1])$​","1]);","1],","1],因为一开始保证了nums1比nums2长度小","1];","1];//多放一个位置","1];的判断","1][0]","1][0])","1][0],dp[i","1][0]=0","1][0]表示i","1][0]，也可能是昨天持有股票，但是卖出了(sell)，为dp[i","1][1]);","1][1]+prices[i]","1][1]+prices[i]}","1][1],","1][1],也可能是昨天没有持有股票，但是买入了(buy),","1][2];","1][3];","1][j","1][j]","1][k","1][p.length()","1][t];","1][t]即答案","1]]","1]`,因为一开始保证了`nums1`比`nums2`长度小","1]结尾的字符串能否拆分成worddict","1]范围内时，返回fals","1]这个数为结尾的，连续子数组的最大和","1e9;","1},","1};","1};//关键的罗马数字节点","1~9","1。","1。如果该表达式的值大于零，那么第k","1为0位置往前推一个位置","1天的时候，是无股票的，在i天的时候买入了股票，也就是说要必须在i天之后的某一天卖出股票，所以很显然dp[i","1或“","1的值为","1表示第i天持有股票的状态[有股票]","1，循环计数器为","1：","1；","2","2(11)","2)","2));","2);","2*i。","2,","2.0;","2.1.遍历数组，组装left_max，即从左开始，每个k组从左开始，取最大值","2.2.遍历数组，组装right_max，即从右开始，每个k组从右开始，取最大值","2.head的值和head.next的值是否相同，相同则返回head.next不同则返回head本身","2.left不为空，right为空，说明p和q不在右子树中（因为右子树为空了），这时，返回left，这里面有下面的两种情况：","2.以螺旋形式开始遍历矩阵并将当前环的元素存储在","2.再论如何原地将矩阵旋转90度","2.创建一个和当前节点cur相同的节点mirror，并建立映射","2.反转转置的列。","2.如果当前节点的值小于n1和n2，则lca位于右侧子树中。调用右子树的递归函数。","2.对cur节点的左子树重复步骤1，直到左子树为空","2.执行转置","2.搜索值不是数组元素，且小于数组内元素，索引值为","2.矩阵的转置是当矩阵翻转其对角线时，即元素的行索引变为列索引，反之亦然。","2.考虑当前正方形中的","2.该搜索键不在范围内，且小于范围（数组）内元素，返回–(fromindex","2.遍历整个链表，处理random指针","20","20.","2005;","2024.","2028.","2038.","2039.","2043.","2044.","206.","20},","21","2147483648","2147483648,","2147483649","215.","217.","218.","22","22,","225.","226.","22;","23","23,","23.","232.","236.","239.","24","24,","25","25]开始","25}","26","26.","27","273.","278.","28","29","297.","2:","2;","2;//边的数量","2]","2])","2];","2][0]","3","3(5)","3,","3.","3.right不为空，left为空，说明p和q不在左子树中（因为左子树为空了），这时，返回right，这里面有下面的两种情况：","3.借助左右辅助数组拼装结果数组，math.max(right_max[i],","3.如何原地将矩阵旋转180度","3.如果当前节点的值大于n1和n2，则lca位于左子树中。调用左子树的递归函数。","3.定义一哑结点，然后让原来的cur节点指向的mirror节点断开，恢复到原来的状态","3.对于存储在","3.弹出栈内保存到左子树的节点，开始遍历右子树，重复步骤1","3.所以在从","3.找到矩阵的转置。","3.搜索值不是数组元素，且在数组范围内，从1开始计数，得“","3.要反转转置矩阵的列，请运行两个嵌套循环，外循环从","3.该搜索键在范围内，但不是数组元素，由1开始计数，得“","3.递归调用当前节点cur的next节点和random节点，进行复制，让mirror节点的next和random指针分别指向这个复制的节点","30","307.","309.","31","32","32.","33","33.","34","34.","35","36","36.","37","38","38.","39","39.","394.","395.","3;","3]","4","4);","4,","4.","4.left不为空，并且right不为空，说明p和q分布在root节点的左右子树的两侧，这时root为p和q的最近公共祖先节点，返回","4.如果上述两种情况均为false，则将当前节点作为lca返回","4.对矩阵的每个环重复此过程。","4.将矩阵的每个环逆时针旋转","4.当前组中的元素是","4.搜索值不是数组元素，且大于数组内元素，索引值为","4.该搜索键不在范围内，且大于范围（数组）内元素，返回","4.转置的反转列","4.遍历完整个二叉树，结束","40","40);","40,","40.","400);","400,","41","416.","42","42\"));","42,","42.","424.","43","44","45","45.","450.","46","46.","47","47.","475.","48","48.","49","4]","4},","4✖️4","4返回复制的mirror节点","5","5);","5,","5.","5.在最后一次遍历矩阵中再次螺旋并将","50","50);","50,","500);","500,","509.","51","51.","52","53","53.","54","54.","55","55.","56","56.","57","58","589.","59","590.","599.","5},","6","6,","6.","60","606.","61","62","62.","63","653.","682.","693.","6}}","7","7,","704.","71.","714.","728.","739.","744.","78.","8","8,","8.","81.","82.","83.","86.","867.","8;","8]","8},","9","9);","9,","90","90);","90,","90.","900);","900,","912.","92.","94.","954.","96.","98.","987\"));",":",":如何打印出路径",";",";//滑动","=","=0","=0;i","=1","=10","=11","=1;i","=2","==","==>(1,2)","==null)","==p","=>","=f_i_0`,因为上面的转移方程已经改变了`f_i_0`的值","=head.next;","=new","=pivot",">",">0，说明第",">2",">3",">4",">5，那么此时的cur就是5",">=",">=n",">>",">>=",">[1,2]",">l1.val","?","@param","@return","@test","[0","[0,","[0,1,2,3,4]","[0,numrow","[1,","[1,1,2]","[1,5,11,5]","[1,nums[idx]]这个区间范围内","[128]","[1]","[2,3,5]","[256]","[26]","[7,6,5]","[[0,","[[16,9,17],[15,20,7]]","[]","[c,","[i,k]","[idx,s.length())不能由worddict里的单词形成","[idx,s.length)这个范围内的单词都不能由worddict的单词组成","[k,i]","[start2...end2]的长度","^","_1st","_1st();","_2nd","_2nd();","_2nd_3","_2nd_3();","_3rd","_3rd();","_4th","_4th();","_5th","_5th();","_6th","_6th();","_inf","_inf;","`f_i_1`是昨天持有股票`f_i_1`,或者是昨天无股票状态，今天买入了股票`buy`，买入相当于负债，但是需要提前记录下`tmp","a);","a,","a.length()","a.tochararray();","a:","a[0]","a]","account,","account2","addboundaries(str","addedge(e[0],","addedge(e[1],","addedge(int","addfirst(doublelinkednod","addfirst(node);","an","ancestor","ancestor)","ancestor.val);","ans.append(\"","ans.append(tmp);","ans.length())","ans.tostring().trim();","ans;","ans[index++]","appendtail(int","arabic_num","arabic_nums[i])","arabic_nums[i];","args)","arr","arr)","arr,","arr.length","arr.length,","arr.length;","arr[0],","arr[0];","arr[chas[l]","arr[curpos],","arr[i","arr[n","array)","array.length","array.length;","arraydequ","arraydeque<>();","arraylist","arraylist<>());","arraylist<>(),","arraylist<>();","arraylist<>(levellist));","arraylist<>(map.values());","arraylist<>(sub));","arraylist<>(subpath));","arraylist<>(t));","arraylist>","arrays.binarysearch","arrays.binarysearch(heaters,","arrays.fill(dist,","arrays.fill(head,","arrays.fill(res,","arrays.sort(arr);","arrays.sort(arr,","arrays.sort(candidates);","arrays.sort(heaters);","arrays.sort(houses);","arrays.sort(nums);","arrays.sort(nums);//sort","arrays.stream(nums).anymatch(num","arr，sourc","assert.assertequals(","assert.assertequals(0,","assert.assertequals(2147483647,","assert.assertequals(42,","astr)","astr.tochararray())","a：要搜索的数组","b","b)","b,","b;","b[0]);","backtrac","backtrace(","backtrace(levellist,","bad:不可以跳到末尾位置","balance)","balance.length","balance;","bank","bank(long[]","base","befor","binari","binarysearch(object[]","bit","bit)","bit;","block","blocksmap","blocksmap.put(i,","board)","board.length,","board[0].length;","boolean","boolean[]","boolean[][]","boolean[arr.length];","boolean[n","boolean[n];","boolean[n];//初始化","boolean[n][n];","boolean[n][t","boolean[nums.length]);","boolean[r][c];","boolean[s.length()","boolean[s.length()][s.length()];","boolean[t","break;","break;//前探一个位置，没有位置跳出","bst","bst/solution/shan","buildtree(int[]","buildtree(nums,","c","c)","c,","c;","cach","cache.get(i);","cache.get(key);","cache.get(s);","cache.get(start);","cache.put(key,","cache.put(s,","cache.put(start,","cache.remove(last.key);","cache;","cache;//","cache[i];","cache[s1][p1]","calpoints(string[]","candid","candidates,","canjump(int[]","canjump2nd(int[]","canjump4th(int[]","canpartition(int[]","canreach(int[]","capac","capacity)","capacity;","capacity;//容量","case","case:","center","ch","ch[c","cha","char","char[26];","char[]","characterreplacement(str","chas,","chas.length","chas.length;","child","child:","child;","chu","class","cleanspaces(char[]","cleanspaces(chas,","cn.com/problems/delet","cnt","cnt++;","cnt[i]","codec","col","collections.reverse(res);","colors)","colors.length();","colors.tochararray();","colsmap","colsmap.put(i,","combinationsum(int[]","combinationsum2(int[]","common","containsduplicate(int[]","continue;","continue;//skip","convert(str","cool.","copyrandomlist(nod","count","count[s.charat(l++)","countandsay(int","countmaxorsubsets(int[]","cqueue","cqueue()","cur","cur)","cur);","cur.left","cur.left;","cur.next","cur.next,","cur.next.next;","cur.next.random","cur.next.val)","cur.next;","cur.random));","cur.random.next;","cur.right","cur.right;","cur.val","cur.val);","cur;","curnod","curnode.left.val);","curnode.right","curnode.right.val);","curnum","curpo","curpos,","curr","curr)","curr.left","curr.left.v","curr.next","curr.next;","curr.right","curr.right.val;","curr.val","curr;","curvalue;","cur节点","cut1","cut1,","cut2;","d","dailytemperatures(int[]","data","data)","data.add(x);","data.addfirst(help.pollfirst());","data.isempty()","data.length()","data.peek();","data.poll();","data.pollfirst();","data.pop();","data.push(help.pop());","data.push(x);","data.size()","data.substring(1,","data;","de","decod","decode(int","decodestring(str","deleteduplicates(head.next);","deleteduplicates(listnod","deletehead()","deletenode(listnod","deletenode(root.right,","deletenode(treenod","delnodeincircle(listnod","demo示例","dequ","deque.addfirst(c);","deque.addlast(0);","deque.addlast(v);","deque.isempty();","deque.offer(1);","deque.offer(2);","deque.offer(3);","deque.peek())","deque.peek();","deque.peekfirst())","deque.poll();","deque.pollfirst();","deque.push(\"a\");","deque.push(\"b\");","deque.push(\"c\");","deque.push(c);","dequetest()","dequetest1()","deque接口扩展(继承)了","deque是一个线性collection，支持在两端插入和移除元素。名称","deque有三种使用形式：","deque的主要使用方式","deque的实现：","deserialize(str","dest","dest)","dest);","detectcycle(listnod","dfs(arr,","dfs(candidates,","dfs(child);","dfs(cur.next);","dfs(cur.random);","dfs(head);","dfs(int","dfs(int[]","dfs(list","dfs(listnod","dfs(n);","dfs(new","dfs(node","dfs(node);","dfs(node.next);","dfs(nums,","dfs(queue","dfs(queue);","dfs(root);","dfs(root,","dfs(root,sum,0,new","dfs(root.left);","dfs(root.left,","dfs(root.right);","dfs(root.right,","dfs(s);","dfs(s,","dfs(s.substring(word.length()));//当前的word是一种可能切分，","dfs(string","dfs(sub,","dfs(treenod","dian","dict","dict.containskey(c)","dict.get(c)","dict.put(')',","dict.put(']',","dict.put('}',","dict[i][last]);","dir","display(int[][]","dist","dist2","dist[0]","dist[u]","dist[v]","divid","divide)","doubl","doublelinkednod","doublelinkednode()","doublelinkednode();","doublelinkednode(int","doublelinkednode(key,","down)","dp","dp;","dp[0]","dp[0][1][0]","dp[0][1][1]","dp[0][2][0]","dp[0][2][1]","dp[1]","dp[3][11]往上走到dp[2][11]","dp[3][11]往左走到dp[3][6],这一行用掉5","dp[3][6]一直往上走到dp[1][6]减去这一行的5","dp[i","dp[i][0]","dp[i][0]表示第i天无股票，可能是昨天也没有股票，状态持续到今天，为dp[i","dp[i][0|1]","dp[i][1]表示第i天有股票，可能是昨天就有股票，状态持续到今天，为dp[i","dp[i][j]","dp[i][j]表示在子集数组的区间范围内[0...i]之间选择若干个数，可以组成j","dp[j","dp[j]","dp[n","dp[n][t+1],其中n是子集数组的大小，t是目标和，多放一个，从0开始的","dp[t];","dummi","dummy,","dummy.next","dummy.next;","dummy;","dummyaft","dummyafter;","dummybefor","dummybefore;","duplic","d两个指针","e","e[0]);","e[1]);","edg","edge[i];","edge[idx]","edges)","edges,","element","element.","empty\");","empty()","empty.","empty，当data,help均为空时，返回tru","encod","encode(int[][]","end","end)","end);","end1","end1,","end2","end2,","end;","end});","entrynodeofloop(listnod","er","expandbyseed(str","f","f)","f);","f[0]","f[0];","f[0][0]","f[0][1]","f[0][2]","f[1]","f[i","f[i]","f[i]);","f[j]","f[n","f[n][0];","f_0","f_1","f_1是当天手里有股票","f_i_0","f_i_0;","f_i_1","false;","false;//标志位","false不是回文","false，具体取决于操作）。插入操作的后一种形式是专为使用有容量限制的","false：偶数","fast","fast)","fast.next.next","fast.next.next!=null){","fast.next.next;","fast.next;","fee","fee)","fee,注意在初始化f[0][1]时的处理，","fee;//买入(buy),股票的价值为prices[i]，需要负债手续费","fee，也可以在买入（buy）的时候算利润","fee，有如下代码","fib(int","fib(n","fib(num","fifo（先进先出）行为。将元素添加到双端队列的末尾，从双端队列的开头移除元素。从","final","findgreatestsumofsubarray(int[]","findkthlargest(int[]","findmediansortedarrays(int[]","findmediansortedarrays(nums2,","findmin(int[]","findpath(treenod","findpeakelement(int[]","findradius(int[]","findrestaurant(string[]","findtarget(root.left,k)","findtarget(root.right,k);","findtarget(treenod","first","first.next","first.next;","firstbadversion(int","flag","follow","for(int","for(listnod","for(nod","foursum(int[]","fromindex,","fromindex：指定范围的开始处索引（包含）","get(int","get(key)","getbottomk(list","getbottomk(list,","getbottomkmindepth(treenod","getintersectionnode(listnod","getkthnum(int[]","getkthnum(nums1,","getkthnum(nums2,","getleastnumbers(int[]","getmaxlength(str","getmaxlength(str,","getmin()","gitbook链接：gitbook","good:可以跳到末尾位置","handler","handler.delnodeincircle(head,","handler.display(dest,","handler.display(matrix);","handler.display(matrix,","handler.display(source,","handler.lca(root,","handler.longestvalidparentheses(s);","handler.lowestcommonancestor(root,","handler.myatoi(\"","handler.myatoi(\"2147483649\"));","handler.myatoi(\"42\"));","handler.myatoi(\"word","handler.rotate(m,","handler.rotate(matrix);","handler.rotatematrix(matrix);","handler.rotatematrix(matrix,","hasalternatingbits(int","hascycle(listnod","hashmap","hashmap()","hashmap<>());","hashmap<>();","hashset<>());","hashset<>();","hashset<>(worddict);","haspathsum(root.left,","haspathsum(root.right,","haspathsum(treenod","haspathsum4th(treenod","head","head)","head,","head.next","head.next.next","head.next.next.next.next;","head.next.next;//删除要删除的节点","head.next.pr","head.next.v","head.next.val)","head.next;","head.next;//2.当前节点的后继节点指向head的后继节点","head.val","head.val;","head;","head;//1.当前节点的前驱结点指向head节点","head;//重置cur节点","head[u]","head[u];","head[u];//采用头插法","heada","heada,","headb","headb)","headb;","heapify(int[]","heapify(nums,","heapinsert(nums);","heaters)","heaters.length;","heaters[idx","heaters[j]","height)","height.length","height.length;","height[","height[++l])","height[i","height[i])","height[i]);","height[l];","height[r]","height[r];","height[stk.peek()])","height[stk.pop()];//记录下这个值，做这一轮计算的底","help","help.add(data.poll());","help.add(res);","help.addfirst(value);","help.isempty())","help.isempty();","help.peek()","help.peek())","help.peek();","help.pop();","help.push(value);","help.push(x);","help;","helper","helper(child);","helper(int","helper(int[]","helper(left.left,","helper(left.right,","helper(nod","helper(num","helper(nums,","helper(nums,0);","helper(root);","helper(root,","helper(root.left,","helper(root.right,","helper(s,","helper(str","helper(treenod","here.","hi)","hous","house));","house)){","house);","house:","houses)","houses){","houses,","houses.length,","https://leetcod","hundr","i)","i++;","i,","i;","i=idx/n=6/4","idx","idx)","idx++","idx++;","idx++;//","idx++;//计数","idx,","idx;","idx=6=i*n+j=1*4+2=6","idx是索引，差2个","if(data.isempty()","if(data.isempty()){","if(head","if(idx","if(l!=null)","if(left","if(memo[idx]!=null)","if(memo[num]!=null)","if(n","if(n==0)","if(n==1)","if(num==0)","if(num==1)","if(right!=null)","if(root","if(set.contains(k","if(set.contains(x))","if(slow","if(tmp.next!=null)","ii","iii","illegalargumentexception(\"参数错误，您传递的分割字符，在输入字符串中存在！\");","index","index)","index++;","index,","index;","index[]","index[nums.length];","inf","inf)","inf);","initi","inordertraversal(treenod","input","input:","int","int[0][]);","int[1005];","int[10];","int[128];","int[26];","int[2];","int[]","int[][]","int[][][]","int[][]{","int[]{","int[]{3,","int[]{l,","int[]{start,","int[]{stk.peek()","int[]{};","int[c","int[c][r];","int[e];//按输入顺序存储每条边指向的节点","int[e];//记录邻接表中当前节点的下一个节点","int[k","int[k];","int[m","int[n","int[n];","int[n][2];","int[n][m];","int[n][maxk","int[r","int[r][c];","int[s.length()","int[v];","int[v];//头节点数组","integ","integer.max_valu","integer.max_value)","integer.max_value;","integer.min_value,","integer.min_value;","integer.tobinarystring(n).tochararray();","integer[]","integer[n+1];","integer[n];","inttoroman(int","inverttree(root.left);","inverttree(root.right);","inverttree(treenod","ismatch(char[]","ismatch(ss,","ismatch(str","isodd","ispalindrome(str","issymmetric(treenod","isunique(str","isvalid(str","isvalidbst(treenod","isvalidsudoku(char[][]","iv","i});","i。","i表示第i天","j","j)","j);","j++;","j,","j;","j=idx%n=6%4","j])对调，其中","java","jie","jump(int[]","jz18","jz23","jz25","jz34","jz42连续子数组的最大和","jz6","jz63","jz68","jz77","jz82","jz84","jz85","jz86","k","k)","k))","k));","k),","k);","k,","k:list1的str","k:当前的行/列/块","key)","key);","key,","key;","key：要搜索的值","k为遍历的字符长度，可以为n","k位（最低位为第0","k是key，v是key生成的nod","k，则不要旋转它。","k，将矩阵的每个环逆时针旋转","l","l)","l);","l++;","l,","l/","l1","l1,","l1,listnod","l1;","l2","l2)","l2);","l2.val);","l2;","l:lists){","l;","la","la.next;","la;","last","last;","lastpo","lastpos)","lastremaining(int","lb","lb)","lb.next;","lca(root.left,","lca(treenod","lca_iterate(treenod","lcof","le,","le.length","left","left)","left);","left++;","left,","left.val","left;","left[(i+1)w+j","left[(iw+w+j","left[m+w","left[n","left_max","left_max[0]","left_max[i","lefth","leftkthnum","len","len1","len2","len2)","lengthoflongestsubstring1st(str","lengthoflongestsubstring2nd(str","lengthoflongestsubstring3rd(str","less_than_twenti","letters,","letters.length,","letters[0];","letters[l]","level","level++;","levellist","levellist)","levellist,","levellist.add(num);","levellist.size()","levelorder(treenod","lifo（后进先出）堆栈。应优先使用此接口而不是遗留","linkedblockingdequ","linkedlist","linkedlist()","linkedlist();","linkedlist()或dequ","linkedlist<>();","linkedlist<>();//存的是元素的下标索引","linkedlist<>(arrays.aslist(data.split(\",\")));","list","list)","list,","list.get(0);","list.remove(idx);","list.size();","list1","list1,","list1,listnod","list1.next","list1;","list2","list2)","list2);","list2.next","list2.next);","list2.val)","list2;","list>","listnod","listnode(","listnode(0);","listnodeioutils.transform(\"[0,1,2,3,4]\");","lists)","lists,","lists.length","lists.length;","lists[l];","ln","long","long[]","long[balance.length","longestpalindrome(str","longestsubstring(str","longestvalidparentheses(str","loop","lowest","lowestcommonancestor(root.left,p,q","lowestcommonancestor(root.right,","lowestcommonancestor(treenod","lp","lp.sum","lp.sum)","lp.sum;","lq","lq.addlast(t);","lq.peeklast();","lru","lrucach","lrucache(int","lval","m","m)","m);","m*n","m,","m;","main(string[]","map","map.get(cur).next","map.get(cur).random","map.get(cur);","map.get(cur.next);","map.get(cur.random);","map.get(head);","map.get(head.next);","map.get(head.random);","map.get(maxx);","map.get(pathsum)","map.getordefault(pathsum","map.getordefault(pathsum,","map.getordefault(t,","map.put(\"c\",","map.put(\"cd\",","map.put(\"cm\",","map.put(\"d\",","map.put(\"i\",","map.put(\"iv\",","map.put(\"ix\",","map.put(\"l\",","map.put(\"m\",","map.put(\"v\",","map.put(\"x\",","map.put(\"xc\",","map.put(\"xl\",","map.put(0,","map.put(cur,","map.put(head,","map.put(pathsum,","map.put(t,","map.putifabsent(head.next,","map.putifabsent(head.random,","map>","map>>","mark","mat[3][4]","mat[4][4]","math.abs(heaters[i","math.abs(heaters[i]","math.max(dfs(root.left),","math.max(dfs(root.right),","math.max(end,","math.max(f_i_0,","math.max(f_i_1,","math.max(getmaxlength(str,","math.max(lval,","math.max(maxdepth(root.left),","math.max(maxx,","math.max(nums1leftmax,","math.max(res,","math.max(righth[i","math.min(f[i],","math.min(len1,","math.min(len2,","math.min(nums1[start1],","math.min(nums1rightmin,","math.min(res,","matrix","matrix)","matrix,","matrix.length,","matrix.length,c=","matrix.length;","matrix:","matrix;","matrix[0].length;","matrix[i][j]","matrix[i][j]);","matrix[i][k]","matrix[i][k];","matrix[j][i]","matrix[k][i]","matrix[k][i];","matrix[r][c]","max(f_i_0,","max(f_i_1,","max(right[m],","maxcnt","maxconsecutiveanswers(str","maxdepth(root.right));","maxdepth(treenod","maxf","maxk","maxlen","maxlen)","maxlen);","maxpath","maxpath)","maxpath;","maxpathsum(treenod","maxprofit(int","maxprofit(int[]","maxright","maxright)","maxslidingwindow(int[]","maxsubarray(int[]","maxsum","maxx","maxx)","maxx;","max{dp[i","mean,","mean;","memo","memo;","memo;//返回当前位置索引curr跳到最后位置的最小步数","memo[curr];","memo[idx];","memo[num]","memo[num];","memo[start][end]","memo[start][end];","memory)","memory))","memory.get(s);","memory.put(s,","merge(int[][]","merge(list1,","merge(list1.next,","merge(listnod","mergearray(int[]","mergearray(nums1,","mergeklists(listnode[]","mergeklists(lists,","mergetwosortedlistnode(l1,","mergetwosortedlistnode(listnod","mid","mid)","mid);","mid;","minarray(int[]","mindepth(root.left));","mindepth(root.right));","mindepth(treenod","minn","minstack","minstack()","minwindow(str","mirror","mirror);","mirror.next","mirror.next;","mirror.random","mirror;","missingrolls(int[]","money)","money;","movetohead(doublelinkednod","movetohead(node);","multi","myatoi(str","myqueu","myqueue()","mystack","mystack()","n","n)","n);","n,","n/2","n1","n1,","n2","n2)","n2);","n;","n];","networkbecomesidle(int[][]","new","newhead","newhead);","newhead;","newnod","newnode;","next","next.pr","next;","next;//前驱接节点，后继节点","next[i])","next[idx]","nextgreatestletter(char[]","node","node(","node(cur.val);","node(cur.val,","node(head.next.val));","node(head.random.val));","node(head.val);","node)","node);","node,","node.end)","node.left","node.next","node.next;","node.pr","node.pre;","node.right","node.start","node.start)","node.v","node.valu","node.value;","node;","node;//3.head节点的后继节点的前驱结点指向当前节点","node;//4.head的后继节点指向当前节点","nodequeu","nodequeue.offer(curnode.left);","nodequeue.offer(curnode.right);","nodequeue.offer(root);","nodequeue.pop();","null","null)","null);","null,","null;","num","num)","num){","num,","num;","num];","numarray","numarray(int[]","numbertowords(int","numlist","numqueu","numqueue.offer(curnum","numqueue.offer(root.val);","numqueue.pop();","numrows)","nums)","nums){","nums,","nums.length","nums.length)","nums.length,","nums.length;","nums1","nums1);","nums1,","nums1.length,","nums1rightmin)","nums1右半部分最小值比nums2左半部分的最大值小，说明需要扩大[cut1...end]这个范围","nums2","nums2)","nums2);","nums2,","nums2.length;","nums2[j])","nums2[j]去掉[start2...j]的部分，反之，去掉[start1...i]的部分","nums2[start2","nums2[start2+k","nums2[start2]);","nums2leftmax)","nums2leftmax);","nums2rightmin)","nums2rightmin)))","nums[0],","nums[0];","nums[a","nums[a]","nums[b","nums[b]","nums[child])","nums[child];","nums[deque.peekfirst()];","nums[i","nums[i]","nums[i])","nums[i],","nums[i];","nums[i]]","nums[i]];","nums[idx];","nums[j]","nums[j];","nums[l]","nums[l])","nums[l];","nums[m]","nums[m])","nums[n","nums[q.peek()];//peekfirst()","nums[r])","nums[root]","nums[root];","nums[start];","numtrees(int","nxt","nxt.next;","nxt.val)","nxt;","o(1)，没有使用到额外的空间","o(1)，没有使用到额外的空间，只是一个变量","o1);","o1,","o2","o2)","o2);","object","offer","onto","op","ops)","ops.length","output","output:","p","p)","p,","p,q","p.next","p.next;","p.tochararray();","p1","p1)","p1));","p[i];","pair","pair(0,","pair(int","pair(res,","parent","parent.get(p);","parent.get(q);","parent.put(cur.left,","parent.put(cur.right,","parent.put(root,","partition(int[]","partition(listnod","partition(nums,","partition(s,","partition(s.substring(i","partition(str","path)","path.split(\"/\");","path;","pathsum","pathsum)","pathsum);","patience)","peek()","peek时，与pop的过程一样，只是在返回的时候，data.peek()","permute(int[]","permuteunique(int[]","phead","phead)","phead,","phead.next","phead.next;","phead;","phead;//slow回到起点，slow和fast步调一致，第一个相遇的点就是环形链表入口","pointer)（二叉树的最近公共祖先节点（使用父节点））","pop","pop()","poplast()","poplast();","pop时，只要去data的栈顶元素，即data.pop(),但是data栈没有元素了需要怎样?将help栈的元素不断往data栈推，推完为止，如果data,help栈均无元素，报错","pop的时候，pop的元素是否和help","postorder(nod","postordertraversal(treenod","pp","pp,","pp.length)","pp[p1","pq","pq.offer(l);","pq.offer(nums[i]);","pq.offer(tmp.next);","pq.offer(x);","pq.peek()","pq.peek())","pq.peek();","pq.poll();","pq.size()","pre","pre,","pre.next","pre.next;","pre;","preorder(nod","preordertraversal(treenod","prev","prev.next","prev.next.next;","prev.next;","prev.next;//每一轮的cur是prev的后一个","prev.val","prev;","prices)","prices,","prices.length","prices.length;","prices[0]","prices[0];","prices[0];//交易了一次","prices[0];//交易了两次","prices[0];//有股票状态","prices[i","prices[i]","prices[i])","prices[i]);","prices[i]}","print(treenod","printlistfromtailtohead(listnod","printutils.printmatrix(dp);","priorityqueu","priorityqueue<>((a,","priorityqueue<>((l1,l2)","priorityqueue<>((o1,","priorityqueue<>();","privat","project,","proot)","public","push","push(int","push时，只需要向help栈中推","put(')',","put(']',","put('}',","put(int","put(k,v)","pwwkew中wke是子串","p和q都在left即左子树上，而root节点恰好指向了p或者q","p和q都在left即左子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点","p和q都在right即右子树上，而root节点恰好指向了p或者q","p和q都在right即右子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点","q","q)","q);","q,","q.addlast(t);","q.offer(0);","q.offer(cur.left);","q.offer(cur.right);","q.offer(proot);","q.offer(root);","q.peeklast();","q.poll();","q.polllast().left;","q.polllast().right","q.size();","q;","querytree(node.left,","querytree(node.right,","queue","queue\");","queue)","queue.add(root);","queue.add(start);","queue.addfirst(leftpos);","queue.offer(res);","queue.offer(root);","queue.offer(x);","queue.poll();","queue.size();","queue;","queue（双端队列）”的缩写，通常读为“deck”。大多数","quicksort(int[]","quicksort(nums,","r","r)","r);","r,","r;","r=","r])","random","re","recursive(int","recursive(n);","refer","remain","remain);","remainlist","remainlist)","remov","removeduplicates(int[]","removenode(doublelinkednod","removenode(last);","removenode(node);","reorderlist(listnod","res)","res);","res);//更新cache，避免重复搜索","res.add(\"\");","res.add(\"\");//当前的下标到达s的末尾","res.add(0,","res.add(cur.tostring());","res.add(cur.val);","res.add(new","res.add(node.val);","res.add(root.val);","res.add(s.substring(start,","res.add(word","res.append(romans[i]);","res.insert(0,","res.toarray(new","res.tostring().trim();","res.tostring();","res.val;","res1","res1.val);","res;","res[1]","res[idx++]","res[idx++]++;","resl","reslist","reslist.add(new","reslist.add(sb.tostring());//收集结果","reslist.clear();","reslist;","respath","respath.add(new","respath.clear();","resr","result","result);","result.add(collections.emptylist());","result.add(subresult);","result;","results;","return","return;","reverse(char[]","reverse(chas,","reverse(listnod","reverse(tmp);","reverse(tmp,","reversebetween(listnod","reversecolumns(int[][]","reversecolumns(matrix);","reverselist(head.next);","reverselist(listnod","reversepairs(int[]","reversewords(chas,","reversewords(str","right","right)","right);","right++;","right.left);","right.right)","right.val","right;","right_max","right_max[n","righth","righth[i]","rightkthnum","rightkthnum)","rightpo","rn","rolls)","rolls,","rolls.length;","roman","romantoint(str","root","root)","root){","root,","root.children)","root.children){","root.left","root.left.left.left;","root.left.left.right.right;","root.left;","root.left;//5","root.right","root.right);","root.right;","root.right;//1","root.val","root.val)","root.val))","root.val);","root.val,","root.val;","root.val;//路径和加上当前节点的值","root;","root==","rotate(int","rotate(int[][]","rotatematrix(int[][]","row","row[count","rows[r]","rowsmap","rp","rp.sum","rp.sum)","rp.sum;","rq","rq.addlast(t);","rq.peeklast();","runtimeexception(\"empti","runtimeexception(\"stack","runtimeexception(\"th","rval","rval);","r});","r精髓，强制向左滑动","s","s)","s,","s.charat(end))","s.charat(end);","s.charat(i","s.charat(start)","s.length()","s.length())","s.length(),","s.length();","s.substring(i,","s.substring(start,","s.tochararray())","s.tochararray(),","s.tochararray();","s.trim();","s1","s1,","s=\"[\"","s[j...i]这个区间的子串是否是回文，true是回文","sb","sb)","sb);","sb.append(\"()\");","sb.append(\"]\");","sb.append(\"null\").append(\",\");","sb.append('(').append(node.val);","sb.append(')');","sb.append(cur.val).append(\",\");","sb.append(levellist.get(i)).append(\"","sb.append(thousand[index]).append(\"","sb.deletecharat(sb.length()","sb.length()","sb.substring(1,","sb.tostring();","search","search(int[]","searchrange(int[]","second","second.next","second.next;","second;","seen","serialize(root.left)","serialize(root.right);","serialize(treenod","set","set.add(p);","set.add(root.val);","set.add(x);","shift()","shift();","shift()方法是为top()","shu","sign","simplifypath(str","singl","size","size)","slow","slow.next","slow.next)","slow.next;","slow;","slow和fast相同，但是是初始时的slow","slow和fast错开一个位置","solut","sortarray(int[]","sou","sourc","source,","source.length,","source[0].length;","source的","spiralorder(int[][]","ss","ss,","ss.length;","stack","stack.","stack<>();","stack<>();//存数组的下标索引","star","start","start)","start))","start,","start1","start1,","start2","start2,","start;","static","step=1;step","stk","stk.isempty();","stk.peek()","stk.peek())","stk.poll(),","stk.poll();","stk.pop();","stk.push(","stk.push(c);","stk.push(cur);","stk.push(cur++);//当前元素比栈顶元素小，入栈，指针后移","stk.push(cur.left);","stk.push(cur.right);","stk.push(end);","stk.push(integer.parseint(op));","stk.push(node);","stk.push(node.left);","stk.push(node.right);","stk.push(prev","stk.push(prev);","stk.push(root);","stk.push(stk.peek()","stk.push(t);","str","str,","string","string.","string.valueof(chas);","string[]","string[][]","stringbuild","stringbuilder(\"[\");","stringbuilder());","stringbuilder();","stringbuilder[]","stringbuilder[numrows];","strlist","structur","sub","sub)","sub);","sub,","sub.add(nums[i]);","sub.add(nums[idx]);","sub.add(root.val);","sub.foreach(system.out::print);","sub.remove(sub.size()","subend","subend++;","subend;","sublist","sublist)","submaxx","submaxx;","subpath","subpath);","subpath.add(root.val);","subpath.addall(lp.path);","subpath.addall(rp.path);","subresult","subresult.add(left);","subresult.addall(right);","subsets(int[]","subsets(nums);","subsetswithdup(int[]","substart","substart;","sum","sum)","sum);","sum,","sum;","suo","swap()","swap();","swap(int[]","swap(nums,","system.out.printf(\"%d","system.out.printf(\"%d\\n\",","system.out.println(\"lca","system.out.println();","system.out.println(deque);","system.out.println(deque.pop());","system.out.println(in);","system.out.println(integer.max_value);","system.out.println(integer.min_value);//","system.out.println(json.tojsonstring(reslist));","system.out.println(json.tojsonstring(respath));","system.out.println(str);","t","t)","t);","t,","t.add(root.val);","t.addall(lp.path);","t.addall(rp.path);","t.left","t.left;","t.length;","t.right","t.right;","t.trim().split(\"\\\\s+\");","t.val","t;","ta)","ta;","tail","tail.next","tail.pre;","tail;","tail;//node的收尾节点","target","target)","target,","target;","targetsum)","targetsum,","target，先给t的记上，作为标准，每个字母出现的次数","target，判断source是否都包含target，包含的话true，不包含的话fals","temp","temp[]","temp[]。","testarraysbinarysearch()","testarraysbinarysearchindex()","this.bal","this.balance[account]","this.cach","this.capac","this.dp","this.end","this.head","this.head.next","this.key","this.path","this.start","this.sum","this.t","this.tail","this.tail.pr","this.target","this.target)","this.valu","this.worddict","thousand","threesum(int[]","throw","time","tmp","tmp.left;","tmp.right;","tmp;","toindex,","toindex：指定范围的结束处索引（不包含）","top","top()","top()与pop()方法只是在弹出data的最后一个元素的时候是否要继续放回help队列","tot","total","total)","total,","transpose(int[][]","transpose(matrix);","trap(int[]","tree","tree(二叉搜索树的最近公共祖先节点)","tree.","tree2str(t.left)","tree2str(t.right)","tree2str(treenod","treenod","treenode(","treenode(int","treenode(integer.parseint(arr[0]));","treenode(integer.parseint(arr[idx]));","treenode(integer.parseint(v));","treenode(start,","treenodeioutils.transform(\"[20,8,22,4,12,null,null,null,null,10,14]\");","treenodeioutils.transform(\"[3,5,1,6,2,0,8,null,null,7,4]\");","treenodeioutils.transform(\"[3,5,1,6,null,null,null,7,2,null,null,null,4]\");","true;","true;//设置标志位","t中n1和n2的lca是距离根最远的n1和n2的共同祖先。例如，作为确定树中节点对之间距离的过程的一部分，计算最低共同祖先可能是有用的：从n1到n2的距离可以计算为从根到n1的距离，加上从根到n2的距离，减去从根到其最低共同祖先的距离的两倍。","u","u,","unknown:不知道是否可以跳到末尾位置","up","up)","up1:给定两个排序数组，找第kth大的元素","up2:给定一个无序数组，找第kth大的元素","up:返回所有符合条件的索引","up:返回最大子数组和的起始索引","update(int","updatetree(root,","updatetree(treenod","up：返回最长长度的下标索引","v","v)","v:string的索引，因为题目中没有指出来list1的string是否有重复，忽略了重复的情况","v:叶子节点的最小深度","v:当前的行/列/块","v;//","val)","val);","val;","value)","value);","value;","value;//k,v","vi","vis)","vis);","vis.add(node);","vis[i]","visit","visited)","visited);","visited[curpos]","visited[curpos])","visited[leftpos]","visited表示当前的curpos位置有无被访问过","void","w+1]$","w],","w]=max(right[n","whether","while(!help.isempty())","while(!pq.isempty()){","while(cur!=null){","while(fast.next!=nul","while(i","while(l","winnerofgame(str","withdraw(int","word","word.length();","wordbreak(str","worddict","worddict)","worddict;","worddict;//可以做成hashset","wordset","wordset;","x","x)","x),","x)，现在旋转这4个元素，即(x,","x,","x;","x;//是或「|」","x，我们可以用x","y)","y),","y,","y。","z","zhong","zigzaglevelorder(treenod","{","{\"\",","{\"m\",","{//m表示个数","{//prev的next指针不为空","{//s全部探测完，开始组装levelist","{//与左端点比较后再与target值比较","{//之前submaxx是负数，重新开始","{//从大到小遍历，贪心判断当前的值是否可以再被缩减","{//准备","{//如果cache中有s的映射，返回","{//已经到s的末尾，返回","{//当当前节点是标识节点，开始添加右括号","{//组装word","{//遍历worddict","{0,","{1,","{10,","{1000,","{11,","{13,","{16,","{21,","{5,","{6,","{9,","{{","{{0,","{{1,","|","|=","||","}","}*/","},","};","}};","–","–(toindex","‘a’","‘z’","”（插入点）。","”（插入点）。插入点是索引键将要插入数组的那一点，即第一个大于该键的元素的索引。","│","┌──","└──","★","「^」","【重温经典】二叉树的最近公共祖先","一个十进制的数如何转化为二进制的矩阵：","一个是lq的最小值，","一个是rq的最大值","一个矩阵转化成二进制数再转化成十进制数：","一开始的时候都是unknown状态，最末尾的位置是good状态，因为可以由自己跳到自己的位置","一棵有根的树t。两个节点n1和n2之间的最低共同祖先被定义为t中具有n1和n2作为后代的最低节点（允许一个节点是其自身的后代）。","一直往上走到dp[0][1]","一般场景","一般情况，dp[i][j]对于，第i个数，有这两种情况:","三数之和","上","上述贪心的证明：","上面已经讨论了如何进行原地的矩阵翻转了，下面再给出另外一种思路","上面的两部分解决了如何旋转90度的问题，那么180度怎么处理？","上面的方式其实是将矩阵翻转90度做了两次，其实有更好的方法","下","下标的相减得到宽度","下标索引从i开始到len(s)结束，能否由worddict字典形成这个单词","下面开始lru","下面是12种方法：","下面的是个例子","不同的二叉搜索树","不是异或","不能使用static","不过也可以，在处理fee的时候，上面的做法是卖出（sell）的时候，算扣除的手续费","不过还有另外一种思路：","不选：dp[i][j]=","与pop()方法准备的，做一件事：就是弹出队头到倒数第2个队尾元素的，将其送到队列的尾部，在执行top()","与pop()，弹出queue的队头元素，如果是top()，继续保留这个元素，pop()时扔掉","两个列表的最小索引总和","两个方向区分正负","两数之和","个人主页【阿飞算法】","个元素","个元素。","个元素组，一次旋转","个数（基于快速排序的数组划分，清晰图解）","个环。","个重复字符的最长子串","中时，跟踪当前环的开始和结束位置。","中的单词","中的每个环，旋转该子数组","为dp[i","主要的思路是：将矩阵的转置，然后反转转置矩阵的列。","举例","也可以不判断，硬比较","也可以参考2.再论如何原地将矩阵旋转90度，在做第二步翻转的时候，将行翻转变成列翻转","也可以有如下的解法：","买卖股票的最佳时机","买卖股票的最佳时机含手续费","买卖股票的最好时机(一)","二倍数对数组","二分","二分查找","二叉搜索树的最近公共祖先","二叉树中和为某一值的路径(一)","二叉树中和为某一值的路径(三)","二叉树中和为某一值的路径(二)","二叉树中的最大路径和","二叉树的中序遍历","二叉树的前序遍历","二叉树的后序遍历","二叉树的层序遍历","二叉树的序列化与反序列化","二叉树的最大深度","二叉树的最小深度","二叉树的最近公共祖先","二叉树的锯齿形层序遍历","二维矩阵","二维矩阵的常见转换技巧","二进制表示的第","互换。执行两个循环，外循环从","交替位二进制数","从上图中，可以简单地将矩阵旋转180度，以相反的方式打印给定的矩阵。","从上图我们可以观察到","从尾到头打印链表","代码","代码可以参考上面方法2","但是只有1位置有房子，结果为0","位不为","位为","位置为\"\"","位置都有热水器","位运算","位）是否为","使用分隔字符处理以后得到的字符串","使用栈的方式求解，deque的使用技巧参见：deque的主要使用方式","使用链表的方式模拟删除的操作","例如当","例如当x","例如，一个","例如，考虑以下骑士巡回问题","例子","例子:","供暖器","依次从大到小","修改前序遍历代码中，每次先查看左节点再查看右节点的逻辑，变为先查看右节点再查看左节点","修改前序遍历代码中，节点写入结果链表的代码，将插入队尾修改为插入队首","假设$a_0$,$a_1$,$a_2$","假设有如下的数组：","做一个额外的判断：如果当前的cache的大小大于capacity，需要移除最末尾的节点，链表和$cache$都要做移除操作","先移除这个节点移除，再将这个节点添加到链表的开头","全排列","关于if","关于倒序的遍历的问题：参考这篇：背包问题之","关注微信公众号，进群","关键节点的","其中$0","其中$j","其中curpos表示当前访问的位置","其中data的存数据的，help辅助栈用来存最小值，在push操作时，help如果栈顶元素大于待push的元素，将待push的元素塞进help中，如果不是，则重复塞一次help的栈顶元素，注意help为空的时候特殊处理下","其中f[i][j]表示s中，从i到j是否有回文子串","其中n是矩阵的行列","其中n是矩阵的长度","其中r和c是矩阵的行列","准备一个bool类型的数组visited表示当前的下标有无被访问过","准备一个helper数组，每次记录right指针的绝对位置，","准备一个queue，转这个queu","准备一个函数：dfs(int[]","准备两个hash","准备两个栈，data和help，做push操作时，需要保持help栈顶的元素始终最小，data的数据正常推入，help栈顶维持最小，在执行getmin方法的时候，返回help的栈顶元素","准备两个栈，一个数据栈data,一个辅助栈help","减去这一行的1","出口时判断，是否是good状态，计算memo,返回true的时候记录good状态，返回false时记录bad状态","出口条件","出口条件：","出口条件：当节点是null的时候","出现新的字符，很好，right指针向右扩展，并将当前字符加入set中，更新最长无重复子串长度","出现旧的字符，将左边界left指针向右收缩，移除当前的left指针指向的字符","分别是内循环和外循环的索引。","分别渠道左右两边去找，curpos的位置不越界并且leftpos和rightpos未被访问过","分割回文串","分割字符","分割等和子集","分析","分隔字符","分隔链表","列","创建预处理字符串","初始化","初始化时准备两个指针，left与right指针，指向index=0","删除二叉搜索树中的节点","删除排序链表中的重复元素","删除有序数组中的重复项","删除链表的节点","判定字符是否唯一","到","到dp[1][1]","到列数，内循环从","到外循环的索引。","到行数/2，将","到行数，内循环从","前序遍历和后序遍历之间的关系：","前序遍历顺序为：根","前缀子串可以拆分成","剑指","剑指offer","剑指offer(leetcode)","动态规划","包含的数字","区域和检索","升级版本辅助栈，当push","单词拆分","单调栈","博弈问题","即","即当i=0的时候","原始字符串","去掉一维","去掉也可以跑过","参考1.如何原地将矩阵旋转90度，挪动下调换的坐标即可","参考「232.","叉树的前序遍历","叉树的后序遍历","双指针","双指针merge两个数组，用多余的数组来存储最终的结果","双端队列","双端队列也可用作","反转链表","取出节点，分节点存在与否讨论：","取到这一轮的总的size大小，进行for","另外一种写法","另外一种写法，也很巧妙：","另外一种写法，大同小异:","另外一种写法：","另外一种思路：","只能买卖一次","只要是对的人，就算开始错过了，最终还是会再次相遇在一起的","可以买卖多次","可以买卖多次，但是卖出有一天冷冻期","可以买卖多次，但是每次卖出收取手续费fee","可以在记忆化上做很多手脚，上面的map是存储的索引的结果，可以是false也可以是true，本方法的set指的是那些返回false的结果","可以将图视为可以存储在缓冲区中的二维矩阵。","可以缩减到[2]个长度","右","合并k个升序链表","合并两个排序的链表","合并区间","后","后序遍历开始添加","后序遍历顺序为：左","和","和sub，","四数之和","回溯是一种算法范例，尝试不同的解决方案，直到找到一个「有效」的解决方案。通常使用回溯解决的问题具有以下共同特性。这些问题只能通过尝试每种可能的配置来解决，并且每种配置只尝试一次。对于这些问题，一个简单的解决方案是尝试所有配置，并输出符合给定问题约束的配置。回溯是一种渐进式的工作方式，是对原始解决方案的优化，所有可能的配置都会生成并尝试。","因为data队列的元素始终存在，判断栈是否为空的时候，只需要关注size(data)==0","因此，一个循环中此类组的数量为n","因此，要找到转置，将位置","国际站看的的一个思路，很赞","图解回溯算法","图解结果如下：","图解翻转矩阵问题","图论","圆圈中最后剩下的数字","在一个8✖️8的棋盘上，骑士所走的点如下:","在二叉树中找到两个节点的最近公共祖先","在将元素存储在","在排序数组中查找元素的第一个和最后一个位置","在符合条件下，不断扩right，缩left，直到right达到数组或是字符串的末尾，left缩小到不符合窗口大小","在第一部分已经讨论过，如果利用多余的空间翻转矩阵了，本部分讨论下如何原地空间复杂度的方式翻转矩阵","块的map","基于上一种的最多买卖2次，这里允许2变成一般的次数k，最多买卖k次","基于上面方法的第一段代码，去掉一维，改成如下的形式：","基于这两个思路，我们想一下如何处理：","基础","基础与技巧","基础版辅助栈，准备一个data,","堆栈","处的元素与","复制带随机指针的链表","复杂度分析","复杂度分析：","外观数列","大小可变的数组双端队列，不允许","大小可变的链表双端队列，允许元素为","天际线问题","如上图:","如下图所示，每一个二维矩阵对应的，按第1行到第m行依次排列所得到的一维数组的坐标，可以互相转换","如何求倒数第2个或者倒数第k个最小深度？","如图：可以将m✖️n的矩阵转化为n✖️m矩阵，逻辑如下：","如果1：","如果2：","如果cache中不存在key,返回","如果cache中存在，取出这个节点，将节点movetohead，返回节点的值","如果key在数组中，则返回搜索值的索引；否则返回","如果任何环中的元素小于等于","如果是两个单词，隔开","如果每次旋转的圈数很大，可以mod掉","如果相邻两个颜色均相同则删除当前颜色","如果要搜索的元素key在指定的范围内，则返回搜索值的索引；否则返回","如果这棵二叉树是一棵二叉搜索树(bst)呢？","如果队列为空时，获取操作将会阻塞，知道有元素添加","如此...","如第2行第3列的16这个数，其矩阵的坐标是(1,2),而映射到一维数组的时候，其对应的下标索引idx=6","子串：不可跳跃，如","子序列：可以跳跃，如pwwkew中pkw是子序列","子树的节点","子集","字形变换","字符串","字符串解码","字符串转换整数","存在重复元素","官解","实现","实现对于它们能够包含的元素数没有固定限制，但此接口既支持有容量限制的双端队列，也支持没有固定大小限制的双端队列。","实现设计的；在大多数实现中，插入操作不能失败。","对于bst，当从上到下遍历树时，位于两个数字n1和n2之间的第一个节点是lca，即位于n1和n2（n1","对于十进制整数","对应的height，初始值是min","对应的十进制是99","对称二叉树","寻找两个正序数组的中位数","寻找峰值","寻找旋转排序数组中的最小值","寻找比目标字母大的最小字母","将一个已经在链表中存在的节点移动到链表的开头movetohead(node)","将上述的一维矩阵看成一个二进制的数是：","将上面的数组从左边开始分，每个元素的形式:$i*w+j$,其中$i$是从左边开始数，窗口的$index$，$j$是在这个窗口下的偏移量，其中$0","将当前节点移动到最头部位置","将新加入的节点插入到双端链表的头部位置addfirst(node)","将节点加入到双向链表的开头的位置","将链表统一地送到优先队列，然后开始一个一个弹出队列的元素开始组装","就是5","左","常用的表如下所示：","并发场景","度？","延伸阅读：位运算操作常见技巧","开始","开始都可以","弹出前两次","弹出当前的curpos,如果arr[curpos]==","弹出最末尾的节点并将改节点返回","弹出最末尾的节点，并返回最后的节点poplast","当arr[curpos]==0时，表示找到了，返回tru","当head节点和head.next节点为null的时候，开始返回head节点","当help元素为空的时候，也需要往里推","当help的栈顶元素大于等于新来的元素时，help同步要推一份新的元素进来","当help的栈顶元素比新来的元素小的时候，这个时候保持help不变","当i=0的时候，dp[0][j]","当j=0的时候，dp[i][0]为true，当不选任何子集数组的数的时候，可以形成一直方案","当j>=nums[i]的时候，说明j还可以拆解,可以选或者不选i这个数，只要有一种方案是true即可","当j的时候，说明j不可以拆解，我们肯定选不到i这个数了，也就是dp[i][j]=dp[i","当valid满足条件时，说明window都能涵盖了t的字符，记录长度和res，并将source相应的字符","当valid过不了的时候，说明window中还不含有t，记录下source，并将right++，即将window的右边界往右边推","当前curpos的访问过，返回fals","当前curpos越界了，也就是不在[0,len","当前位置cur","当前处理到s的下标索引","当前处理到单词的下标索引","当前所处的位置","当前链表头节点更新，指向第idx边","得11","得到","得到11","得到矩阵的坐标为(i,j)","循环到","怎么转化","怎么转呢？","思路","思路来源国际站，很赞的一个证明","思路来自@lee215大佬，该解法可以参考424题","思路：","总结就是：","恢复","想法很简单，将源矩阵的每一行转换为最终图的所需列，将使用辅助缓冲区来转换图。","想法是以螺旋形式遍历矩阵，","我们将前序遍历中节点插入结果链表尾部的逻辑，修改为将节点插入结果链表的头部","我们将遍历的顺序由从左到右修改为从右到左，配合如果1","或","或者","或者基于变量的方式有下面的改写方式：","或者是昨天持有股票，今天卖出了sell,卖出相当于盈利为f_i_1+prices(i)","手里有股票","手里没有股票","打印","扩大right指针，当第一次符合窗口大小时，执行逻辑","扩展","扫描线","找出缺失的观测数据","技巧1：二维矩阵按索引拍平到一维数组","技巧2：将矩阵当成二进制转化成十进制","拿nums1=[1,2]和nums2=[3,4]举例，当nums1用完的时候，start1已经跳到len(nums1)的位置，开始发生越界，这时候说明nums1已经用完了，按nums2的数组下标计算目标索引，也就是nums2[start2+k","持有的总收益","指的是当选第0个数的时候，能否等于j，显然在nums[0]=j的时候满足这种条件，其他都为fals","指针处理","按之字形顺序打印二叉树","按从上到下或者从下到上","按递推公式来处理","排序","排序数组","探索左边和右边位置","接口。在将双端队列用作队列时，将得到","接口继承的方法完全等效于","接雨水","描述","提供一个valid的方法，比较sourc","提供了矩阵维度和它的地址。","插入点索引值”","搜索","搜索与图论之拓扑排序","搜索旋转排序数组","数字【0】：","数字【10】：","数字【11】：","数字【11】：4","数字【12】：","数字【13】：","数字【13】：5","数字【14】：","数字【15】：","数字【16】：","数字【1】：","数字【2】：","数字【3】：","数字【3】：0","数字【4】：","数字【5】：1","数字【6】：","数字【7】：2","数字【8】：","数字【9】：3","数学","数据栈，准备一个help","数据结构","数组","数组$left[]$是从左到右的每个窗口最大值","数组$right[]$是从右到左的每个窗口的最大值","数组1","数组1的开始位置","数组1的结束位置","数组2","数组2的开始位置","数组2的结束位置","数组中。","数组中的第k个最大元素","数组中的逆序对","数组可修改","数组的元素复制到矩阵。","整数的英语表示","整数转换英文表示","整数转罗马数字","斐波那契数","方法","方法1","方法1.","方法1.一遍遍历+哈希表","方法1.二分","方法1.动态规划","方法1.模拟","方法1.遍历","方法1:bf","方法1:df","方法1:dfs枚举所有子集统计","方法1:dp","方法1:set","方法1:stack","方法1:两个队列","方法1:二分","方法1:优先队列","方法1:双指针","方法1:回溯","方法1:回溯（stringbuilder）","方法1:回溯（递减）","方法1:基本","方法1:基本位运算","方法1:头插法","方法1:快慢指针","方法1:快慢指针+翻转","方法1:快排","方法1:数组","方法1:暴力递归","方法1:朴素版dp","方法1:栈","方法1:模拟","方法1:滑动窗口","方法1:粗糙版滑动窗口","方法1:记忆化dfs(使用map)","方法1:记忆化递归","方法1:迭代","方法1:迭代法","方法1:递归","方法1:递归+set","方法1（仅打印旋转矩阵）","方法1：df","方法1：单调栈","方法1：双端队列","方法1：朴素版dp","方法1：辅助栈[浪费空间]","方法1：递归","方法2","方法2.打表","方法2.递归","方法2:bf","方法2:dequ","方法2:df","方法2:dp","方法2:dp预处理+df","方法2:lambda","方法2:一个队列","方法2:两次遍历+哈希表","方法2:优化版滑动窗口","方法2:位运算","方法2:压缩空间dp","方法2:双指针","方法2:回溯","方法2:回溯（累加）","方法2:堆排序","方法2:多次翻转","方法2:头插法","方法2:快排","方法2:排序","方法2:数组","方法2:求kth","方法2:滑动窗口+统计","方法2:空间压缩dp","方法2:线段树","方法2:自顶向下记忆化递归(top","方法2:记忆化dfs(使用set)","方法2:记忆化递归","方法2:迭代","方法2:递归","方法2:高阶位运算","方法2：原地翻转(转置翻转列两次)","方法2：双指针","方法2：双端队列","方法2：空间压缩dp","方法2：空间压缩o(1)dp","方法2：记忆化df","方法2：辅助栈[不浪费空间]","方法2：迭代","方法3","方法3:bf","方法3:二分","方法3:再优化版滑动窗口","方法3:双指针","方法3:堆排序","方法3:库函数","方法3:排序","方法3:自底向上填表dp(bottom","方法3:自底向上填表递归(bottom","方法3:记忆化df","方法3:记忆化dfs(使用array)","方法3:记忆化递归","方法3:贪心","方法3:递归","方法3：位置交换","方法3：动态规划","方法3：记忆化dfs(剪枝)","方法3：辅助数组+贪心","方法4:dp","方法4:中心扩展法","方法4:记忆化bf","方法4:连接","方法5:dp","方法5:manacher算法","旋转图像","旋转数组的最小数字","旋转矩阵","无重复字符的最长子串","时间复杂度：o(h)，h为树的高度","时间复杂度：o(log(m+n))其中m和n是两个数组的长度","时间复杂度：o(m+n)其中m和n是两个数组的长度","时间复杂度：o(n*n)","时间复杂度：o(r*c)","时，x","是“doubl","是当前无股票状态时","是当前有股票状态时","是形成11的一个组合","是昨天无股票f_i_0","更新res,更新left(拿到其最大位置)","更新边序号","替换后的最长重复字符","最佳买卖股票时机含冷冻期","最多只能买卖两次","最多有k笔交易的限制","最大子数组和","最小栈","最小的","最小的k个数","最小覆盖子串","最近公共祖先(lca|lowest","最长回文子串","最长有效括号","有了上面的这些铺垫，可以来解决几道题目：","有如下的推导：","有效的括号","有效的数独","本动态规划的文章着重讲动态规划，涉及马拉车算法的内容不详细展开，下面的代码取自weiwei大佬的题解","条件为当前字符[i]==[j]的时候，要么只有两个字符，要么砍头去尾，有回文子串","来判断","构建如下的结果：","标识节点","栈顶位置的最小值，组成一个封闭空间，和m这个底相减（木桶原理）,","栈：先进后出filo","树","根","根据二叉树创建字符串","棒球比赛","模拟","正则表达式匹配","此接口定义在双端队列两端访问元素的方法。提供插入、移除和检查元素的方法。每种方法都存在两种形式：一种形式在操作失败时抛出异常，另一种形式返回一个特殊值（null","此时i=0,j=i+k","每日温度","比如说需要将下面的矩阵逆时针旋转90度","汉明距离","注意head节点和tail节点需要new出来","注意：子串与子序列的区别","注释的代码写法是等价的，详细参考基础与技巧","测试","源图的最后一行","源图的第一行","源图的第二行","源数","源矩阵","滑动窗口","滑动窗口最大值","然后开始构造window，最外层的条件是right,","特判","环形链表","用index的enum来记录某个坐标是否可以到达最末尾的位置，有三类值：","用res去记录目前位置最大的长度，每次滑动窗口更新就去决定是否需要更新r","用set来维护重复字符与否的问题","用一个hashmap来建立字符和其出现位置之间的映射。","用一个mapper记录出现过并且没有被删除的字符","用一个滑动窗口记录当前index开始的最大的不重复的字符序列","用两个栈实现队列","用于ascii码","用于字母","用于扩展ascii码","用栈实现队列","用栈实现队列」","用队列实现栈","由中心往两边扩散，返回满足最大回文的长度","由于值依赖前一天的收益情况（有无股票的状态）,f只需要来回滚动即可，去掉一维","略","的","的二进制表示为","的二进制表示的最低位，它等价于x","的值为0。","的元素有重叠，有就将help的元素pop出去，没有就维持不动，data栈正常pop","的每个循环中运行一个环，循环计数器为","的矩阵将有","的索引","的节点，这个节点是多少个，在此基础上累加","的辅助数组","目标sum的值","目标图的倒数第二列","目标图的最后一列","目标图的第一列","目标矩阵","相交链表","相同的值的路径，全部打印出来","相等时，说明只有一个字符了，返回t","矩阵的列数","矩阵的行数","硬编码的罗马数字","移除一个普通的节点","移除一个节点removenode(node)","空间复杂度:","空间复杂度：o(1)，间复杂度是常数级别。","空间复杂度：o(1没有使用到多余的空间","空间复杂度：o(h)，如果忽略递归堆栈空间，则上述解决方案的空间复杂度是常数级别。","空间复杂度：o(m+n)其中m和n是两个数组的长度","第idx边指向v","第idx边的下一个节点是上一个时刻的头节点","第k个","第一个是找到转置，第二个是在不使用额外空间的情况下反转列。","第一个环由它的第一行、最后一列、最后一行和第一列组成。","第一个错误的版本","第二个环由第二行、倒数第二列、倒数第二行和第二列组成。","第二列和倒数第二列","等价写法","简介","简化路径","简单的遍历，收集每个节点的val，然后对结果翻转，返回","简易银行系统","算法","类。在将双端队列用作堆栈时，元素被推入双端队列的开头并从双端队列开头弹出。堆栈方法完全等效于","类似方法1，采用boolean[]的方式","累加","组合总和","组成高度","经典的种子题","结尾的连续子数组的最大和","结束","结构设计","结果数组$d[]$​的最后一个元素是:$d[n","给出一个n✖️n的棋盘，骑士被放在一块空棋盘的第一块上。按照象棋的规则，骑士的移动必须准确地访问每个方块一次。打印每个单元格的访问顺序。","给定一个","给定一个矩阵：","给定一张图片，如何将它旋转","统计按位或能得到最大值的子集数目","维护一个滑动窗口，窗口内的都是没有重复的字符，去尽可能的扩大窗口的大小，窗口不停的向右滑动。","缓存","网络空闲的时刻","罗马数字转整数","翻转二叉树","翻转字符串里的单词","翻转方向和标记已经访问的点，是本题的关键","翻转的是第一列和最后一列","考试的最大困扰度","而如何通过idx=6反向得到矩阵的坐标呢？","股票只能买卖一次","股票可以多次买卖","背包问题（科普文，基础，背包九讲）","背景知识","脱胎与方法1，添加记忆化","自除数","至少有","节点不存在：新创建节点，将该节点插入到链表的头部，并将其put进cache中","节点存在:返回节点的值，将节点移动到链表头部","螺旋矩阵","表示","表示s从start到end位置，是否有回文子串","表示「长度」为","表：以","要在没有多余空间的情况下解决问题，将数组旋转为正方形，将矩阵划分为正方形或环。","要搜索的数组","规定卖出的时候(sell)获利，+prices[i],买入的时候，暂时算负债(buy)，","计算新的i和j开始二分","记录最长回文子串的长度和相应它在原始字符串中的起点","访问后要设置下visited的属性，并且将位置放置于queue中","该矩阵如果按每行依次排开的话，可以转换成一维矩阵","详细参考基础与技巧","说明[l,r]当前的窗口内有超过了k个字符c，缩减左窗口","赋值给上一位","跳跃游戏","转化为全零矩阵的最少反转次数","转置矩阵","辅助栈","输入","输出","返回当前位置索引curr跳到最后位置的最小步数","这一行用掉11","这一题只需要用到转置的那段代码即可,但是这一题m*n的矩阵，m和n可能不相同，所以用到额外空间，简单模拟即可","这一题是139题的进阶题，需要列出所有的组成方案","这一题是leetcode的no.3题，曾经被面到过，很经典的一道题","这一题等同于48题","这个case，需要最后返回","这个双端链表有下面的几个属性","这个想法是对于每个方形循环，以逆时针方向交换与矩阵中相应单元格相关的元素，即从上到左、从左到下、从下到右和从右到上一次，只使用一个临时变量来实现这一点。","这刚好是后序遍历的顺序","这时为","这时为dp[i][1]","这时为f_i_1","这是解决这个问题的算法：","这里涉及到搜索值的几种情况：","进去的时候，","连续子数组的最大和(二)","迭代实现：上述解决方案使用递归。递归解决方案需要函数调用堆栈形式的额外空间。因此，可以实现一个迭代解决方案，它不会以函数调用堆栈的形式占用空间。","选:dp[i][j]=dp[i","选取","递减","逻辑","遍历root的所有的children","那么结果链表就变为了：右","那么结果链表就变为了：左","采用递归的方式，不断进入下一个节点，当到达最后一个节点指向null时，开始返回","重排链表","链接来自：这里","链表","链表中环的入口结点","队列是先进先出，栈是先进后出，在top()方法中，为了避免，数据拷贝，有一个swap()的动作，data与help的存储顺序是一样的","队列：先进先出fifo","阶矩阵和一个值","需要一个哈希双端链表，doublelinkednod","需要同时更新","面试题","顺时针翻转90度后，变成：","题目要求的是原地旋转，顺时针旋转","验证二叉搜索树","（1）如果当前遍历到的字符从未出现过，那么直接扩大右边界；","（2）如果当前遍历到的字符出现过，则缩小窗口（左边索引向右移动），然后继续观察当前遍历到的字符；","（3）重复（1）（2），直到左边索引无法再移动；","（4）维护一个结果res，每次用出现过的窗口大小来更新结果res，最后返回res获取结果。","）每一位进行比较，相同为0，不同为1","，0","，将left++，缩小window的左边界","：","：两个字符的时候，比较两个字符是否相等"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"简介","keywords":"","body":"\n个人主页【阿飞算法】\n\n\n\nIf you like this project, a star will be cool. ★\n\n\ngitbook链接：gitbook\n\n\n\n关注微信公众号，进群\n\n\n"},"docs/leetcode/classify/basic_skill.html":{"url":"docs/leetcode/classify/basic_skill.html","title":"基础与技巧","keywords":"","body":"基础\n\n\nDeque的主要使用方式\nDeque有三种使用形式：\n//普通队列(一端进另一端出):\nQueue queue = new LinkedList()或Deque deque = new LinkedList()\n//双端队列(两端都可进出)\nDeque deque = new LinkedList()\n//堆栈\nDeque deque = new LinkedList()\n\n\nDeque是一个线性collection，支持在两端插入和移除元素。名称 deque 是“double ended queue（双端队列）”的缩写，通常读为“deck”。大多数 Deque 实现对于它们能够包含的元素数没有固定限制，但此接口既支持有容量限制的双端队列，也支持没有固定大小限制的双端队列。\n\n此接口定义在双端队列两端访问元素的方法。提供插入、移除和检查元素的方法。每种方法都存在两种形式：一种形式在操作失败时抛出异常，另一种形式返回一个特殊值（null 或 false，具体取决于操作）。插入操作的后一种形式是专为使用有容量限制的 Deque 实现设计的；在大多数实现中，插入操作不能失败。\n下面是12种方法：\n\n\n\n\nDeque接口扩展(继承)了 Queue 接口。在将双端队列用作队列时，将得到 FIFO（先进先出）行为。将元素添加到双端队列的末尾，从双端队列的开头移除元素。从 Queue 接口继承的方法完全等效于 Deque 方法\n\n双端队列也可用作 LIFO（后进先出）堆栈。应优先使用此接口而不是遗留 Stack 类。在将双端队列用作堆栈时，元素被推入双端队列的开头并从双端队列开头弹出。堆栈方法完全等效于 Deque 方法\n\n\n\nDeque的实现：\n\n一般场景\nLinkedList 大小可变的链表双端队列，允许元素为 null\nArrayDeque 大小可变的数组双端队列，不允许 null\n\n\n并发场景\nLinkedBlockingDeque 如果队列为空时，获取操作将会阻塞，知道有元素添加\n\n\n\nDemo示例\n    private static void dequeTest() {\n        Deque deque = new LinkedList();\n        deque.push(\"a\");\n        deque.push(\"b\");\n        deque.push(\"c\");\n        System.out.println(deque);\n        //获取栈首元素后，元素不会出栈\n        String str = deque.peek();\n        System.out.println(str);\n        System.out.println(deque);\n        while (deque.size() > 0) {\n            //获取栈首元素后，元素将会出栈\n            System.out.println(deque.pop());\n        }\n        System.out.println(deque);\n    }\n//\n[c, b, a]\nc\n[c, b, a]\nc\nb\na\n[]\n\n    private static void dequeTest1() {\n        Deque deque = new LinkedList<>();\n        deque.offer(1);\n        deque.offer(2);\n        deque.offer(3);\n        System.out.println(deque);\n        Integer in = deque.peek();\n        System.out.println(in);\n        System.out.println(deque);\n        while (deque.size() > 0) {\n            System.out.println(deque.pop());\n        }\n        System.out.println(deque);\n    }  \n\n//\n[1, 2, 3]\n1\n[1, 2, 3]\n1\n2\n3\n[]\n\nArrays.BinarySearch\nbinarySearch(Object[] a, Object key)\n\na: 要搜索的数组\n\nkey：要搜索的值\n\n如果key在数组中，则返回搜索值的索引；否则返回-1或“-”（插入点）。插入点是索引键将要插入数组的那一点，即第一个大于该键的元素的索引。\n\n\n这里涉及到搜索值的几种情况：\n\n1.搜索值是数组元素，从0开始计数，得搜索值的索引值\n2.搜索值不是数组元素，且小于数组内元素，索引值为 – 1\n3.搜索值不是数组元素，且在数组范围内，从1开始计数，得“ - 插入点索引值”\n4.搜索值不是数组元素，且大于数组内元素，索引值为 – (length + 1)\n\n举例\n@Test\npublic void testArraysBinarySearch() {\n    int[] arr = new int[]{3, 5, 7, 9, 11, 13};\n    Arrays.sort(arr);\n    for (int i = 0; i \n输出\n\n数字【0】：-1\n数字【1】：-1\n数字【2】：-1\n数字【3】：0\n数字【4】：-2\n数字【5】：1\n数字【6】：-3\n数字【7】：2\n数字【8】：-4\n数字【9】：3\n数字【10】：-5\n数字【11】：4\n数字【12】：-6\n数字【13】：5\n数字【14】：-7\n数字【15】：-7\n数字【16】：-7\n\nbinarySearch(Object[] a, int fromIndex, int toIndex, Object key)\n\na：要搜索的数组\n\nfromIndex：指定范围的开始处索引（包含）\n\ntoIndex：指定范围的结束处索引（不包含）\n\nkey：要搜索的值\n\n如果要搜索的元素key在指定的范围内，则返回搜索值的索引；否则返回-1或“-”（插入点）。\n\n\n这里涉及到搜索值的几种情况：\n\n1.该搜索键在范围内，且是数组元素，由0开始计数，得搜索值的索引值\n2.该搜索键不在范围内，且小于范围（数组）内元素，返回–(fromIndex + 1)\n3.该搜索键在范围内，但不是数组元素，由1开始计数，得“ - 插入点索引值”\n\n4.该搜索键不在范围内，且大于范围（数组）内元素，返回 –(toIndex + 1)\n\n\n举例\n@Test\npublic void testArraysBinarySearchIndex() {\n    int[] arr = new int[]{3, 5, 7, 9, 11, 13};\n    Arrays.sort(arr);\n    for (int i = 0; i \n输出\n数字【0】：-2\n数字【1】：-2\n数字【2】：-2\n数字【3】：-2\n数字【4】：-2\n数字【5】：1\n数字【6】：-3\n数字【7】：2\n数字【8】：-4\n数字【9】：3\n数字【10】：-5\n数字【11】：-5\n数字【12】：-5\n数字【13】：-5\n数字【14】：-5\n数字【15】：-5\n数字【16】：-5\n\n"},"docs/leetcode/classify/data_structure.html":{"url":"docs/leetcode/classify/data_structure.html","title":"数据结构","keywords":"","body":"数据结构\n链表\n23. 合并K个升序链表\n方法1:优先队列\n\n将链表统一地送到优先队列，然后开始一个一个弹出队列的元素开始组装\n\n    public ListNode mergeKLists(ListNode[] lists) {\n        Queue pq = new PriorityQueue<>((l1,l2)->l1.val-l2.val);\n        for(ListNode l:lists){\n            if(l!=null) pq.offer(l);\n        }\n        ListNode dummy = new ListNode(-1);\n        ListNode curr = dummy;\n        while(!pq.isEmpty()){\n            ListNode tmp = pq.poll();\n            curr.next = tmp;\n            curr = curr.next;\n            if(tmp.next!=null) pq.offer(tmp.next);\n        }\n        return dummy.next;\n    }\n\n方法2:堆排序\n    public ListNode mergeKLists(ListNode[] lists) {\n        if (lists == null || lists.length == 0) return null;\n        int len = lists.length;\n        return mergeKLists(lists, 0, len - 1);\n    }\n\n    private ListNode mergeKLists(ListNode[] lists, int l, int r) {\n        if (l == r) return lists[l];\n        int mid = l + (r - l) / 2;\n        ListNode l1 = mergeKLists(lists, l, mid);\n        ListNode l2 = mergeKLists(lists, mid + 1, r);\n        return mergeTwoSortedListNode(l1, l2);\n    }\n\n    private ListNode mergeTwoSortedListNode(ListNode l1, ListNode l2) {\n        if (l1 == null) return l2;\n        if (l2 == null) return l1;\n        if (l1.val \n83. 删除排序链表中的重复元素\n方法1:迭代\n\n        public ListNode deleteDuplicates(ListNode head) {\n            if (head == null) return null;\n            ListNode cur = head;\n            while (cur.next != null) {\n              //当前节点与下个节点的值如果相同，则跳下个节点\n                if (cur.val == cur.next.val) {\n                    cur.next = cur.next.next;\n                } else {\n                    cur = cur.next;\n                }\n            }\n            return head;\n        }\n\n方法2:递归\n出口条件\n\n当head节点和head.next节点为null的时候，开始返回head节点\n\n逻辑\n\n1.head的next指针指向递归的结果\n2.head的值和head.next的值是否相同，相同则返回head.next不同则返回head本身\n\npublic ListNode deleteDuplicates(ListNode head) {\n    if (head == null || head.next == null) return head;\n    head.next = deleteDuplicates(head.next);\n    return head.val == head.next.val ? head.next : head;\n}\n\n方法3:双指针\n\npublic ListNode deleteDuplicates(ListNode head) {\n    if (head == null || head.next == null) return head;\n    ListNode cur = head, nxt = head.next;\n    while (nxt != null) {\n        if (cur.val != nxt.val) {\n            cur = cur.next;\n        } else {\n            cur.next = nxt.next;\n        }\n        nxt = nxt.next;\n    }\n    return head;\n}\n\n82. 删除排序链表中的重复元素 II\n方法1:迭代\n\npublic ListNode deleteDuplicates(ListNode head) {\n    //哑结点\n    ListNode dummy = new ListNode(-1);\n    dummy.next = head;\n    //prev 和 cur节点\n    ListNode prev = dummy, cur;\n    while (prev.next != null) {//prev的next指针不为空\n        cur = prev.next;//每一轮的cur是prev的后一个\n        //当cur的后之后的cur相同跳过之后的\n        while (cur.next != null && cur.val == cur.next.val) {\n            cur = cur.next;\n        }\n        //需要判断链接状态，如果是相同的说明上一步没有重复的，不同的话，说明有重复的\n        if (prev.next != cur) {\n            prev.next = cur.next;\n        } else {\n            prev = prev.next;\n        }\n    }\n    return dummy.next;\n}\n\n方法2:递归\npublic ListNode deleteDuplicates(ListNode head) {\n    if (head == null || head.next == null) return head;\n    if (head.val == head.next.val) {\n        while (head.next != null && head.val == head.next.val) {\n            head = head.next;\n        }\n        return deleteDuplicates(head.next);\n    } else {\n        head.next = deleteDuplicates(head.next);\n        return head;\n    }\n}\n\n86. 分隔链表\n方法1:双指针\n\npublic ListNode partition(ListNode head, int x) {\n    if (head == null) return head;\n    ListNode dummyBefore = new ListNode(0);\n    ListNode before = dummyBefore;\n    ListNode dummyAfter = new ListNode(0);\n    ListNode after = dummyAfter;\n    while (head != null) {\n        if (head.val \n160. 相交链表\n\n\n只要是对的人，就算开始错过了，最终还是会再次相遇在一起的\n\npublic ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n    ListNode lA = headA, lB = headB;\n    while (lA != lB) {\n        lA = (lA == null) ? headB : lA.next;\n        lB = (lB == null) ? headA : lB.next;\n    }\n    return lA;\n}\n\n138. 复制带随机指针的链表\n方法1.一遍遍历+哈希表\npublic Node copyRandomList(Node head) {\n    if (head == null) return null;\n    HashMap map = new HashMap<>();\n    Node newHead = new Node(head.val);\n    map.put(head, newHead);\n    while (head != null) {\n        Node mirror = map.get(head);\n        if (head.next != null) {\n            map.putIfAbsent(head.next, new Node(head.next.val));\n            mirror.next = map.get(head.next);\n        }\n        if (head.random != null) {\n            map.putIfAbsent(head.random, new Node(head.random.val));\n            mirror.random = map.get(head.random);\n        }\n        head = head.next;\n    }\n    return newHead;\n}\n\n方法2:两次遍历+哈希表\n   public Node copyRandomList(Node head) {\n            HashMap map = new HashMap<>();\n            Node cur = head;\n            while (cur != null) {\n                map.put(cur, new Node(cur.val, cur.next, cur.random));\n                cur = cur.next;\n            }\n            cur = head;\n            while (cur != null) {\n                map.get(cur).next = map.get(cur.next);\n                map.get(cur).random = map.get(cur.random);\n                cur = cur.next;\n            }\n            return map.get(head);\n        }\n\n方法3:记忆化递归\n\n1.从head节点开始dfs遍历整个链表\n2.创建一个和当前节点cur相同的节点mirror，并建立映射\n3.递归调用当前节点cur的next节点和random节点，进行复制，让mirror节点的next和random指针分别指向这个复制的节点\n4返回复制的mirror节点\n\n        Map map = new HashMap<>();\n\n        public Node copyRandomList(Node head) {\n            if (head == null) return null;\n            return dfs(head);\n        }\n\n\n        private Node dfs(Node cur) {\n            if (cur == null) return null;\n            if (map.containsKey(cur)) return map.get(cur);\n            //复制一个节点\n            Node mirror = new Node(cur.val);\n            //记忆化\n            map.put(cur, mirror);\n            //next 和 random 指针处理\n            mirror.next = dfs(cur.next);\n            mirror.random = dfs(cur.random);\n            return mirror;\n        }\n\n方法4:连接-恢复\n\n\n\n2.遍历整个链表，处理random指针\n3.定义一哑结点，然后让原来的cur节点指向的mirror节点断开，恢复到原来的状态\n\npublic Node copyRandomList(Node head) {\n    Node cur = head;\n    while (cur != null) {\n        Node mirror = new Node(cur.val);\n        mirror.next = cur.next;\n        cur.next = mirror;\n        cur = cur.next.next;\n    }\n    cur = head;\n    while (cur != null) {\n        if (cur.random != null) {\n            cur.next.random = cur.random.next;\n        }\n        cur = cur.next.next;\n    }\n    Node dummy = new Node(-1);\n    Node p = dummy;\n    cur = head;\n    while (cur != null) {\n        Node mirror = cur.next;\n        p.next = mirror;\n        p = p.next;\n        cur.next = mirror.next;\n        cur = cur.next;\n    }\n    return dummy.next;\n\n}\n\n141. 环形链表\n方法1:快慢指针\n    public boolean hasCycle(ListNode head) {\n        if(head == null || head.next ==null) return false;\n        ListNode slow = head ,fast =head.next;\n        while(fast.next!=null && fast.next.next!=null){\n              //如果已经相等，说明已经相遇\n            if(slow == fast) return true;\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        return false;\n    }\n\n142. 环形链表 II\n方法1:双指针\npublic ListNode detectCycle(ListNode head) {\n    if (head == null || head.next == null) return null;\n    ListNode slow = head, fast = head.next;\n    //第一次相遇点\n    while (fast.next != null && fast.next.next != null) {\n        if (slow == fast) break;\n        slow = slow.next;\n        fast = fast.next.next;\n    }\n    if (slow != fast) return null;\n    //回到起始点\n    ListNode cur = head;\n    //第二次相遇\n    while (cur != slow.next) {\n        cur = cur.next;\n        slow = slow.next;\n    }\n    return cur;\n}\n\n143. 重排链表\n方法1:快慢指针+翻转\n\n\npublic void reorderList(ListNode head) {\n    if (head == null || head.next == null) return;\n    ListNode dummy = new ListNode(-1);\n    dummy.next = head;\n    ListNode slow = head, fast = head;\n    //快慢指针找整个链表的中点，准备切分\n    while (fast.next != null && fast.next.next != null) {\n        slow = slow.next;\n        fast = fast.next.next;\n    }\n    ListNode tmp = slow.next;\n    slow.next = null;\n    //翻转第二段链表，并返回第二段链表的第一个节点\n    ListNode second = reverse(tmp);\n    //前一段链表的第一个节点\n    ListNode first = dummy.next;\n    //串联两段链表\n    while (second != null) {\n        ListNode l2 = second.next;\n        second.next = first.next;\n        first.next = second;\n        first = second.next;\n        second = l2;\n    }\n}\n\n\n//翻转链表\nprivate ListNode reverse(ListNode head) {\n    ListNode cur = head, pre = null, next;\n    while (cur != null) {\n        next = cur.next;\n        cur.next = pre;\n        pre = cur;\n        cur = next;\n    }\n    return pre;\n}\n\n方法2:头插法\n\npublic void reorderList(ListNode head) {\n    ListNode cur = head;\n    int cnt = 0;//链表的数量\n    while (cur != null) {\n        cnt++;\n        cur = cur.next;\n    }\n    //头插的次数，偶数个的话-1\n    int times = (cnt % 2 == 1) ? cnt / 2 : cnt / 2 - 1;\n    cur = head;//重置cur节点\n    for (int i = 0; i \n206. 反转链表\n方法1:递归\npublic ListNode reverseList(ListNode head) {\n    if (head == null || head.next == null) return head;\n    ListNode newNode = reverseList(head.next);\n    //如果链表是 1->2->3->4->5，那么此时的cur就是5\n    //而head是4，head的next是5，next.next是空\n    //所以head.next.next 就是5->4\n    head.next.next = head;\n    //head的next需要断开\n    head.next = null;\n    return newNode;\n}\n\n方法2:迭代\n    public ListNode reverseList(ListNode head) {\n        ListNode prev = null, cur = head;\n        while(cur!=null){\n            ListNode nxt = cur.next;\n            cur.next = prev;\n            prev = cur;\n            cur = nxt;\n        }\n        return prev;\n    }\n\n92. 反转链表 II\n方法1:头插法\n\npublic ListNode reverseBetween(ListNode head, int m, int n) {\n    if (head == null) return null;\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    ListNode prev = dummy;\n    for (int i = 0; i \n方法2:迭代\npublic ListNode reverseBetween(ListNode head, int m, int n) {\n    ListNode dummy = new ListNode(0);\n    dummy.next = head;\n    ListNode pre = dummy;\n    ListNode cur = pre.next;\n    for (int i = 1; i \n树\n96. 不同的二叉搜索树\n方法1:DFS\npublic int numTrees(int n) {\n    return dfs(n);\n}\nprivate int dfs(int n) {\n    if (n == 0 || n == 1) return 1;\n    int cnt = 0;\n    for (int i = 0; i \n方法2:DP\npublic int numTrees(int n) {\n    int[] dp = new int[n + 1];\n    dp[0] = 1;\n    dp[1] = 1;\n    for (int i = 2; i \n98. 验证二叉搜索树\n\n        TreeNode prev = null;\n\n        public boolean isValidBST(TreeNode root) {\n            if (root == null) return true;\n            if (!isValidBST(root.left)) {\n                return false;\n            }\n            if (prev != null && prev.val >= root.val) return false;\n            prev = root;\n            if (!isValidBST(root.right)) {\n                return false;\n            }\n            return true;\n        }\n\n101. 对称二叉树\npublic boolean isSymmetric(TreeNode root) {\n    if (root == null) return false;\n    return helper(root.left, root.right);\n}\n\n\npublic boolean helper(TreeNode left, TreeNode right) {\n    if (left == null && right == null) return true;\n    if (left == null || right == null) return false;\n    return left.val == right.val && helper(left.left, right.right) && helper(left.right, right.left);\n}\n\n102. 二叉树的层序遍历\n方法1:BFS\npublic List> levelOrder(TreeNode root) {\n    List> res = new ArrayList<>();\n    if (root == null) return res;\n    Queue q = new LinkedList<>();\n    q.offer(root);\n    while (!q.isEmpty()) {\n        int size = q.size();\n        List sub = new ArrayList<>();\n        for (int i = 0; i (sub));\n    }\n    return res;\n}\n\n104. 二叉树的最大深度\n方法1:DFS\npublic int maxDepth(TreeNode root) {\n    return root == null ? 0 : 1 + Math.max(maxDepth(root.left), maxDepth(root.right));\n}\n\n方法2:BFS\npublic int maxDepth(TreeNode root) {\n    if (root == null) return 0;\n    Queue queue = new LinkedList<>();\n    queue.offer(root);\n    int level = 0;\n    while (!queue.isEmpty()) {\n        int size = queue.size();\n        for (int i = 0; i \n111. 二叉树的最小深度\n        public int minDepth(TreeNode root) {\n            if (root == null) return 0;\n            if (root.left == null && root.right == null) return 1;\n            int res = Integer.MAX_VALUE;\n            if (root.left != null) res = Math.min(res, minDepth(root.left));\n            if (root.right != null) res = Math.min(res, minDepth(root.right));\n            return res + 1;\n        }\n\nfollow up\n\n如何求倒数第2个或者倒数第k个最小深度？\n\n        //k:叶子节点， v:叶子节点的最小深度\n        Map map = new HashMap<>();\n\n        public int getBottomKMinDepth(TreeNode root, int k) {\n            //遍历获取map\n            helper(root, 0);\n            List list = new ArrayList<>(map.values());\n            int res = getBottomK(list, k);\n            return res;\n        }\n\n        private int getBottomK(List list, int k) {\n            //大根堆，从栈顶到栈底 依次从大到小\n            PriorityQueue pq = new PriorityQueue<>((o1, o2) -> o2 - o1);\n            for (int x : list) {\n                if (!pq.isEmpty() && pq.size() >= k && pq.peek() > x) pq.poll();\n                if (pq.isEmpty() || pq.size() \n144. 二叉树的前序遍历\n方法1:迭代\n\n1.定义一个cur节点，将其入栈\n2.对cur节点的左子树重复步骤1，直到左子树为空\n3.弹出栈内保存到左子树的节点，开始遍历右子树，重复步骤1\n4.遍历完整个二叉树，结束\n\nList res = new ArrayList<>();\n\npublic List preorderTraversal(TreeNode root) {\n    Stack stk = new Stack<>();\n    TreeNode cur = root;\n    while (cur != null || !stk.isEmpty()) {\n        if (cur != null) {\n            res.add(cur.val);\n            stk.push(cur);\n            cur = cur.left;\n        } else {\n            TreeNode tmp = stk.pop();\n            cur = tmp.right;\n        }\n    }\n    return res;\n}\n\n94. 二叉树的中序遍历\npublic List inorderTraversal(TreeNode root) {\n    List res = new ArrayList<>();\n    Stack stk = new Stack<>();\n    TreeNode cur = root;\n    while (cur != null || !stk.isEmpty()) {\n        if (cur != null) {\n\n            stk.push(cur);\n            cur = cur.left;\n        } else {\n            cur = stk.pop();\n            res.add(cur.val);\n            cur = cur.right;\n        }\n    }\n    return res;\n}\n\n98. 验证二叉搜索树\n方法1:DFS\n TreeNode prev = null;\npublic boolean isValidBST(TreeNode root) {\n    if (root == null) return true;\n    if (!isValidBST(root.left)) return false;\n    if (prev != null && prev.val >= root.val) return false;\n    prev = root;\n    if (!isValidBST(root.right)) return false;\n    return true;\n}\n\n方法2:BFS\npublic boolean isValidBST(TreeNode root) {\n    Deque stk = new ArrayDeque<>();\n    TreeNode prev = null;\n    while (root != null || !stk.isEmpty()) {\n        while (root != null) {\n            stk.push(root);\n            root = root.left;\n        }\n        root = stk.pop();\n        if (prev != null && prev.val >= root.val) return false;\n        prev = root;\n        root = root.right;\n    }\n    return true;\n}\n\n103. 二叉树的锯齿形层序遍历\npublic List> zigzagLevelOrder(TreeNode root) {\n    List> result = new ArrayList<>();\n    if (root == null) return result;\n    Queue queue = new LinkedList<>();\n    queue.add(root);\n    int level = 0;\n    while (!queue.isEmpty()) {\n        List levelList = new ArrayList<>();\n        int size = queue.size();\n        for (int i = 0; i \n124. 二叉树中的最大路径和\nint res = Integer.MIN_VALUE;\n\npublic int maxPathSum(TreeNode root) {\n    dfs(root);\n    return res;\n}\n\npublic int dfs(TreeNode root) {\n    if (root == null) return 0;\n    int lval = Math.max(dfs(root.left), 0);\n    int rval = Math.max(dfs(root.right), 0);\n    res = Math.max(res, root.val + lval + rval);\n    return root.val + Math.max(lval, rval);\n}\n\nFollow up :如何打印出路径\n\n相同的值的路径，全部打印出来\n\n│       ┌── 7\n│   ┌── 20\n│   │   └── 15\n└── -100\n    │   ┌── 17\n    └── 9\n        └── 16\n[[16,9,17],[15,20,7]]\n\n  int maxPath = Integer.MIN_VALUE;\n        List> resPath = new ArrayList<>();\n\n        public int maxPathSum(TreeNode root) {\n            dfs(root);\n            System.out.println(JSON.toJSONString(resPath));\n            return maxPath;\n        }\n\n        private Pair dfs(TreeNode root) {\n            if (root == null) return new Pair(0, new ArrayList<>());\n            Pair lp = dfs(root.left);\n            Pair rp = dfs(root.right);\n            int res = root.val;\n            List subPath = new ArrayList<>();\n            if (lp.sum > 0 && lp.sum > rp.sum) {\n                res += lp.sum;\n                subPath.addAll(lp.path);\n                subPath.add(root.val);\n            } else if (rp.sum > 0 && rp.sum > lp.sum) {\n                res += rp.sum;\n                subPath.addAll(rp.path);\n                subPath.add(root.val);\n            } else {\n                subPath.add(root.val);\n            }\n            if (res >= maxPath) {\n                if (res > maxPath) resPath.clear();\n                maxPath = res;\n                resPath.add(new ArrayList<>(subPath));\n            }\n            if (lp.sum + rp.sum + root.val >= maxPath) {\n                List t = new ArrayList<>();\n                t.addAll(lp.path);\n                t.add(root.val);\n                t.addAll(rp.path);\n                if (lp.sum + rp.sum + root.val > maxPath) resPath.clear();\n                maxPath = lp.sum + rp.sum + root.val;\n                resPath.add(new ArrayList<>(t));\n            }\n            return new Pair(res, subPath);\n        }\n\n\n        static class Pair {\n            int sum = 0;\n            List path;\n\n            public Pair(int sum, List path) {\n                this.sum = sum;\n                this.path = path;\n            }\n        }\n\n145. 二叉树的后序遍历\n方法1:迭代法\n\n前序遍历和后序遍历之间的关系：\n\n前序遍历顺序为：根 -> 左 -> 右\n\n后序遍历顺序为：左 -> 右 -> 根\n\n\n\n如果1： 我们将前序遍历中节点插入结果链表尾部的逻辑，修改为将节点插入结果链表的头部\n\n那么结果链表就变为了：右 -> 左 -> 根\n\n\n如果2： 我们将遍历的顺序由从左到右修改为从右到左，配合如果1\n\n那么结果链表就变为了：左 -> 右 -> 根\n\n\n这刚好是后序遍历的顺序\n\n基于这两个思路，我们想一下如何处理：\n\n修改前序遍历代码中，节点写入结果链表的代码，将插入队尾修改为插入队首\n\n修改前序遍历代码中，每次先查看左节点再查看右节点的逻辑，变为先查看右节点再查看左节点\n\n\n\n\n链接来自：这里\npublic List postorderTraversal(TreeNode root) {\n    List res = new ArrayList<>();\n    Stack stk = new Stack<>();\n    TreeNode cur = root;\n    while (cur != null || !stk.isEmpty()) {\n        if (cur != null) {\n            res.add(0, cur.val);\n            stk.push(cur);\n            cur = cur.right;\n        } else {\n            TreeNode tmp = stk.pop();\n            cur = tmp.left;\n        }\n    }\n    return res;\n}\n\n226. 翻转二叉树\n方法1:DFS\n    public TreeNode invertTree(TreeNode root) {\n        if(root ==null) return null;\n        TreeNode l = invertTree(root.left);\n        TreeNode r = invertTree(root.right);\n        root.left = r;\n        root.right = l;\n        return root;\n    }\n\n236. 二叉树的最近公共祖先\n最近公共祖先(LCA|Lowest Common Ancestor)\n\n一棵有根的树T。两个节点n1和n2之间的最低共同祖先被定义为T中具有n1和n2作为后代的最低节点（允许一个节点是其自身的后代）。\nT中n1和n2的LCA是距离根最远的n1和n2的共同祖先。例如，作为确定树中节点对之间距离的过程的一部分，计算最低共同祖先可能是有用的：从n1到n2的距离可以计算为从根到n1的距离，加上从根到n2的距离，减去从根到其最低共同祖先的距离的两倍。\n\n\n方法1：DFS\n思路：\n1.left和right都为空，说明root的左右子树中都不包含p和q节点，返回null即可\n2.left不为空，right为空，说明p和q不在右子树中（因为右子树为空了），这时，返回left，这里面有下面的两种情况：\n\np和q都在left即左子树上，而root节点恰好指向了p或者q\np和q都在left即左子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点\n\n3.right不为空，left为空，说明p和q不在左子树中（因为左子树为空了），这时，返回right，这里面有下面的两种情况：\n\np和q都在right即右子树上，而root节点恰好指向了p或者q\np和q都在right即右子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点\n\n4.left不为空，并且right不为空，说明p和q分布在root节点的左右子树的两侧，这时root为p和q的最近公共祖先节点，返回\n\n\n\n   public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root == null || root ==p || root== q) return root;\n        TreeNode left = lowestCommonAncestor(root.left,p,q );\n        TreeNode right = lowestCommonAncestor(root.right, p,q );\n        if(left !=null && right !=null) return root;\n        if(left !=null) return left;\n        if(right!=null) return right;\n        return null;\n    }\n\n测试\n        public static void main(String[] args) {\n            _3rd handler = new _3rd();\n            TreeNode root = TreeNodeIOUtils.transform(\"[3,5,1,6,2,0,8,null,null,7,4]\");\n            TreeNode p = root.left;//5\n            TreeNode q = root.right;//1\n//            TreeNode ancestor = handler.lowestCommonAncestor(root, p, q);\n//            System.out.printf(\"%d\\n\", ancestor.val);\n            root = TreeNodeIOUtils.transform(\"[3,5,1,6,null,null,null,7,2,null,null,null,4]\");\n            p = root.left.left.left;\n            q = root.left.left.right.right;\n            TreeNode ancestor = handler.lowestCommonAncestor(root, p, q);\n            System.out.printf(\"%d\\n\", ancestor.val);\n        }\n\n方法2：迭代\n\n public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n            //存当前节点的父节点，k:当前节点，v:当前节点的父节点，root节点的父节点为null\n            Map parent = new HashMap<>();\n            parent.put(root, null);\n            Deque stk = new ArrayDeque<>();\n            stk.push(root);\n            //step1:率先找到p或者q，先左节点，后右节点，然后出栈的时候，选右节点优先\n            while (!parent.containsKey(p) || !parent.containsKey(q)) {\n                TreeNode cur = stk.pop();\n                if (cur.left != null) {\n                    parent.put(cur.left, cur);\n                    stk.push(cur.left);\n                }\n                if (cur.right != null) {\n                    parent.put(cur.right, cur);\n                    stk.push(cur.right);\n                }\n            }\n            //step2：set收集的是p节点的所有祖先节点，包括p节点的直系父节点\n            Set set = new HashSet<>();\n            while (p != null) {\n                set.add(p);\n                p = parent.get(p);\n            }\n            //step3:找q的父节点，第一个出现在set集合中的即是LCA\n            while (!set.contains(q)) {\n                q = parent.get(q);\n            }\n            return q;\n        }\n\n如果这棵二叉树是一棵二叉搜索树(BST)呢？\n对于BST，当从上到下遍历树时，位于两个数字n1和n2之间的第一个节点是LCA，即位于n1和n2（n1\n方法1：DFS\n思路：\n\n1.创建一个递归函数，该函数接受一个节点和两个值n1和n2。\n2.如果当前节点的值小于n1和n2，则LCA位于右侧子树中。调用右子树的递归函数。\n3.如果当前节点的值大于n1和n2，则LCA位于左子树中。调用左子树的递归函数。\n4.如果上述两种情况均为false，则将当前节点作为LCA返回\n\n   static class _2nd_3 {\n        public static void main(String[] args) {\n            _2nd_3 handler = new _2nd_3();\n            TreeNode root = TreeNodeIOUtils.transform(\"[20,8,22,4,12,null,null,null,null,10,14]\");\n            int n1 = 10, n2 = 14;\n            TreeNode res1 = handler.lca(root, n1, n2);\n            System.out.println(\"LCA of \" + n1 + \" and \" + n2 + \" is \" + res1.val);\n\n            n1 = 14;\n            n2 = 8;\n            res1 = handler.lca(root, n1, n2);\n            System.out.println(\"LCA of \" + n1 + \" and \" + n2 + \" is \" + res1.val);\n\n            n1 = 10;\n            n2 = 22;\n            res1 = handler.lca(root, n1, n2);\n            System.out.println(\"LCA of \" + n1 + \" and \" + n2 + \" is \" + res1.val);\n        }\n\n\n        public TreeNode lca(TreeNode root, int n1, int n2) {\n            if (root == null) return null;\n            if (root.val > n1 && root.val > n2) return lca(root.left, n1, n2);\n            if (root.val \n复杂度分析：\n\n时间复杂度：O(h)，h为树的高度\n空间复杂度：O(h)，如果忽略递归堆栈空间，则上述解决方案的空间复杂度是常数级别。\n\n迭代实现：上述解决方案使用递归。递归解决方案需要函数调用堆栈形式的额外空间。因此，可以实现一个迭代解决方案，它不会以函数调用堆栈的形式占用空间。\n       public TreeNode lca_iterate(TreeNode root, int n1, int n2) {\n            while (root != null) {\n                if (root.val > n1 && root.val > n2) root = root.left;\n                else if (root.val \n复杂度分析：\n\n时间复杂度：O(h)，h为树的高度\n空间复杂度：O(1)，间复杂度是常数级别。\n\nReference\n\nLowest Common Ancestor in a Binary Search Tree(二叉搜索树的最近公共祖先节点)\nLowest Common Ancestor in a Binary Tree | Set 2 (Using Parent Pointer)（二叉树的最近公共祖先节点（使用父节点））\n【重温经典】二叉树的最近公共祖先\n\n450. 删除二叉搜索树中的节点\n/**\n * https://leetcode-cn.com/problems/delete-node-in-a-bst/solution/shan-chu-er-cha-sou-suo-shu-zhong-de-jie-dian-by-l/\n */\n\npublic TreeNode deleteNode(TreeNode root, int key) {\n    if (root == null) return null;\n    if (key > root.val) root.right = deleteNode(root.right, key);\n    if (key \n297. 二叉树的序列化与反序列化\n方法1:BFS\n        public class Codec {\n\n            // Encodes a tree to a single string.\n            public String serialize(TreeNode root) {\n                if (root == null) return \"[]\";\n                StringBuilder sb = new StringBuilder(\"[\");\n                Queue q = new LinkedList<>();\n                q.offer(root);\n                while (!q.isEmpty()) {\n                    TreeNode cur = q.poll();\n                    if (cur != null) {\n                        sb.append(cur.val).append(\",\");\n                        q.offer(cur.left);\n                        q.offer(cur.right);\n                    } else {\n                        sb.append(\"null\").append(\",\");\n                    }\n                }\n                sb.deleteCharAt(sb.length() - 1);\n                sb.append(\"]\");\n                return sb.toString();\n            }\n\n            // Decodes your encoded data to tree.\n            public TreeNode deserialize(String data) {\n                if (data.equals(\"[]\")) return null;\n                String[] arr = data.substring(1, data.length() - 1).split(\",\");\n                TreeNode root = new TreeNode(Integer.parseInt(arr[0]));\n                Queue q = new LinkedList<>();\n                q.offer(root);\n                int idx = 1;\n                while (!q.isEmpty()) {\n                    TreeNode cur = q.poll();\n                    if (!arr[idx].equals(\"null\")) {\n                        cur.left = new TreeNode(Integer.parseInt(arr[idx]));\n                        q.offer(cur.left);\n                    }\n                    idx++;\n                    if (!arr[idx].equals(\"null\")) {\n                        cur.right = new TreeNode(Integer.parseInt(arr[idx]));\n                        q.offer(cur.right);\n                    }\n                    idx++;\n                }\n                return root;\n            }\n\n方法2:DFS\npublic class Codec {\n\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        if (root == null) return \"null\";\n        return root.val + \",\" + serialize(root.left) + \",\" + serialize(root.right);\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        Queue queue = new LinkedList<>(Arrays.asList(data.split(\",\")));\n        return dfs(queue);\n    }\n\n    private TreeNode dfs(Queue queue) {\n        String v = queue.poll();\n        if (\"null\".equals(v)) return null;\n        TreeNode node = new TreeNode(Integer.parseInt(v));\n        node.left = dfs(queue);\n        node.right = dfs(queue);\n        return node;\n    }\n}\n\n589. N 叉树的前序遍历\n    List res = new ArrayList<>();\n    public List preorder(Node root) {\n\n        helper(root);\n        return res;\n    }\n\n    private void helper(Node root){\n        if(root == null) return ;\n        res.add(root.val);\n\n        for(Node child: root.children){\n            helper(child);\n        }\n    }\n\n590. N 叉树的后序遍历\n        List res = new ArrayList<>();\n\n        public List postorder(Node root) {\n            dfs(root);\n            return res;\n        }\n\n        private void dfs(Node root) {\n            if (root == null) {\n                return;\n            }\n            //  遍历root的所有的children\n            for (Node child : root.children) {\n                dfs(child);\n            }\n            // 后序遍历开始添加\n            res.add(root.val);\n        }\n\n606. 根据二叉树创建字符串\n方法1:迭代-标识节点\npublic String tree2str(TreeNode t) {\n    //标识节点\n    TreeNode end = new TreeNode(-1);\n    StringBuilder sb = new StringBuilder();\n    Deque stk = new ArrayDeque<>();\n    stk.push(t);\n    while (!stk.isEmpty()) {\n        TreeNode node = stk.pop();\n        if (node == end) {//当当前节点是标识节点，开始添加右括号\n            sb.append(')');\n            continue;\n        }\n        sb.append('(').append(node.val);\n        stk.push(end);\n        //当前节点的的左节点空，右节点非空，左节点加\"()\"\n        if (node.left == null && node.right != null) sb.append(\"()\");\n        //左节点先出栈，入的时候先入右节点，后入左节点\n        if (node.right != null) stk.push(node.right);\n        if (node.left != null) stk.push(node.left);\n    }\n    //去掉首位\n    return sb.substring(1, sb.length() - 1);\n}\n\n方法2:迭代-Set\n        public String tree2str(TreeNode t) {\n            StringBuilder sb = new StringBuilder();\n            Deque stk = new ArrayDeque<>();\n            stk.push(t);\n            //使用set来标识是否访问过，控制\")\"边界\n            Set vis = new HashSet<>();\n            while (!stk.isEmpty()) {\n                TreeNode node = stk.pop();\n                if (vis.contains(node)) {\n                    sb.append(')');\n                    continue;\n                }\n                sb.append('(').append(node.val);\n                stk.push(node);\n                //当前节点的的左节点空，右节点非空，左节点加\"()\"\n                if (node.left == null && node.right != null) sb.append(\"()\");\n                //左节点先出栈，入的时候先入右节点，后入左节点\n                if (node.right != null) stk.push(node.right);\n                if (node.left != null) stk.push(node.left);\n                vis.add(node);\n            }\n            //去掉首位\n            return sb.substring(1, sb.length() - 1);\n        }\n\n方法3:递归\n        public String tree2str(TreeNode t) {\n            if (t == null) return \"\";//当前节点为空，返回\"\"\n            if (t.left == null && t.right == null) return t.val + \"\";//当前节点没有左右孩子节点，即叶子节点，返回这个值\n            if (t.right == null) return t.val + \"(\" + tree2str(t.left) + \")\";//当前节点只有左孩子，没有右孩子，给左孩子加上\"()\",右孩子不加\n            return t.val + \"(\" + tree2str(t.left) + \")\" + \"(\" + tree2str(t.right) + \")\";//左孩子有或者没有都加 \"()\" || \"(leftChild)\"\n        }\n\n653. 两数之和 IV - 输入 BST\n方法1:递归+Set\n     Set set = new HashSet<>();\n\n    public boolean findTarget(TreeNode root, int k) {\n        if(root == null) return false;\n        if(set.contains(k - root.val)) return true;\n        set.add(root.val);\n        return findTarget(root.left,k) || findTarget(root.right,k);\n    }\n\n方法2:双指针\n//[5,3,6,2,4,null,7]\n//k =11\npublic boolean findTarget(TreeNode root, int k) {\n    //左右两个子树的queue\n    Deque lq = new ArrayDeque<>();\n    Deque rq = new ArrayDeque<>();\n    TreeNode t = root;\n    //一直压左子树 [2,3,5]\n    while (t != null) {\n        lq.addLast(t);\n        t = t.left;\n    }\n    t = root;\n    //一直压右子树 [7,6,5]\n    while (t != null) {\n        rq.addLast(t);\n        t = t.right;\n    }\n    //第一次进来 ln =2 ,rn = 7 一个是lq的最小值， 一个是rq的最大值\n    TreeNode ln = lq.peekLast();\n    TreeNode rn = rq.peekLast();\n    while (ln.val  q, boolean f) {\n    //如果是左子树，拿到左子树的右节点，如果是右子树，拿到右子树的左节点\n    TreeNode t = f ? q.pollLast().right : q.pollLast().left;\n    //一直添加该节点的左 / 右 子树的节点\n    while (t != null) {\n        q.addLast(t);\n        t = f ? t.left : t.right;\n    }\n    return q.peekLast();\n}\n\n"},"docs/leetcode/classify/heap_stack.html":{"url":"docs/leetcode/classify/heap_stack.html","title":"堆栈","keywords":"","body":"\n\n20. 有效的括号\n方法1:Stack\npublic boolean isValid(String s) {\n    Map dict = new HashMap<>();\n    dict.put(']', '[');\n    dict.put(')', '(');\n    dict.put('}', '{');\n    Stack stk = new Stack<>();\n    for (char c : s.toCharArray()) {\n        if (c == '[' || c == '(' || c == '{') stk.push(c);\n        else if (!stk.isEmpty() && dict.containsKey(c) && dict.get(c) == stk.peek()) stk.pop();\n        else return false;\n    }\n    return stk.isEmpty();\n}\n\n方法2:Deque\n\n详细参考基础与技巧\n\n        public boolean isValid(String s) {\n            Map dict = new HashMap() {{\n                put(']', '[');\n                put(')', '(');\n                put('}', '{');\n            }};\n            Deque deque = new ArrayDeque<>();\n            for (char c : s.toCharArray()) {\n                //左边括号纷纷入栈\n                if (c == '[' || c == '(' || c == '{') deque.addFirst(c);\n                //如果找到了右边括号，且符合题意的右边括号，找到栈顶的字符看看是否不是成对的\n                //dict.containsKey(c) 去掉也可以跑过\n                else if (!deque.isEmpty() && dict.containsKey(c) && dict.get(c) == deque.peekFirst()) {\n                    deque.pollFirst();\n                } else return false;\n            }\n            //注意 s=\"[\" 这个case，需要最后返回\n            return deque.isEmpty();\n        }\n\n\n等价写法\n\npublic boolean isValid(String s) {\n    Map dict = new HashMap() {{\n        put(']', '[');\n        put(')', '(');\n        put('}', '{');\n    }};\n    Deque deque = new ArrayDeque<>();\n    for (char c : s.toCharArray()) {\n        //左边括号纷纷入栈\n        if (c == '[' || c == '(' || c == '{') deque.push(c);\n            //如果找到了右边括号，且符合题意的右边括号，找到栈顶的字符看看是否不是成对的\n            //dict.containsKey(c) 去掉也可以跑过\n        else if (!deque.isEmpty() && dict.containsKey(c) && dict.get(c) == deque.peek()) {\n            deque.poll();\n        } else return false;\n    }\n    //注意 s=\"[\" 这个case，需要最后返回\n    return deque.isEmpty();\n}\n\n32. 最长有效括号\n方法1:栈\npublic int longestValidParentheses(String s) {\n    //stk存的是上一个不匹配的位置（下标）\n    Deque stk = new ArrayDeque<>();\n    int res = 0;\n    //[0...3]之间的长度是4，0也就是3-(-1)=4 -1为0位置往前推一个位置\n    stk.push(-1);\n    for (int i = 0; i \nFollow Up：返回最长长度的下标索引\nstatic class _3rd {\n    public static void main(String[] args) {\n        _3rd handler = new _3rd();\n        String s = \")()())()()(()()\";\n        handler.longestValidParentheses(s);\n        //output:[[1,4],[6,9],[11,14]]\n        System.out.println(JSON.toJSONString(resList));\n    }\n\n\n    static List resList = new ArrayList<>();\n\n\n    public int longestValidParentheses(String s) {\n        //stk存的是上一个不匹配的位置（下标）\n        Deque stk = new ArrayDeque<>();\n        int res = 0;\n        //[0...3]之间的长度是4，0也就是3-(-1)=4 -1为0位置往前推一个位置\n        stk.push(-1);\n        for (int i = 0; i = res) {\n                        if (t > res) resList.clear();\n                        res = t;\n                        resList.add(new int[]{stk.peek() + 1, i});\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}\n\n方法2:DP\npublic int longestValidParentheses(String s) {\n    int N = s.length();\n    int[] f = new int[N];\n    int res = 0;\n    for (int i = 1; i = 0) f[i] = f[i - 2] + 2;\n            } else if (f[i - 1] > 0) {\n                if ((i - f[i - 1] - 1) >= 0 && s.charAt(i - f[i - 1] - 1) == '(') {\n                    f[i] = f[i - 1] + 2;\n                    if ((i - f[i - 1] - 2) >= 0) {\n                        f[i] = f[i] + f[i - f[i - 1] - 2];\n                    }\n                }\n            }\n        }\n        res = Math.max(res, f[i]);\n    }\n    return res;\n}\n\n方法3:贪心\npublic int longestValidParentheses(String s) {\n    int n = s.length();\n    int left = 0, right = 0;\n    int res = 0;\n    for (int i = 0; i  left) left = right = 0;\n    }\n    left = right = 0;\n    for (int i = n - 1; i >= 0; --i) {\n        if (s.charAt(i) == '(') left++;\n        else right++;\n        if (left == right) res = Math.max(res, left * 2);\n        else if (left > right) left = right = 0;\n    }\n    return res;\n}\n\n\n最长有效括号-官解\n\n71. 简化路径\npublic String simplifyPath(String path) {\n    // 双端队列\n    Deque queue = new LinkedList<>();\n    // 分割字符\n    String[] res = path.split(\"/\");\n    for (int i = 0; i \n682. 棒球比赛\n方法1:栈\n\n使用栈的方式求解，Deque的使用技巧参见：Deque的主要使用方式\n\n\npublic int calPoints(String[] ops) {\n    if (ops == null || ops.length == 0) return -1;\n    Deque stk = new ArrayDeque<>();\n    for (String op : ops) {\n        if (op.equals(\"D\")) stk.push(stk.peek() * 2);\n        else if (op.equals(\"C\")) stk.poll();\n            //遇到+号 弹出前两次\n        else if (op.equals(\"+\")) {\n            int cur = stk.poll(), prev = stk.poll();\n            stk.push(prev);\n            stk.push(cur);\n            stk.push(prev + cur);\n        } else {\n            stk.push(Integer.parseInt(op));\n        }\n    }\n    int res = 0;\n    while (!stk.isEmpty()) res += stk.poll();\n    return res;\n}\n\n方法2:数组\npublic int calPoints(String[] ops) {\n    if (ops == null || ops.length == 0) return -1;\n    int[] arr = new int[1005];\n    int idx = 0;\n    for (int i = 0; i \n"},"docs/leetcode/classify/array.html":{"url":"docs/leetcode/classify/array.html","title":"数组","keywords":"","body":"数组\n>\n54. 螺旋矩阵\n\n翻转方向和标记已经访问的点，是本题的关键\n\nint R, C;\n//右 下 左 上\nint[][] dirs = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\n\npublic List spiralOrder(int[][] matrix) {\n    R = matrix.length;\n    C = matrix[0].length;\n    int r = 0, c = 0, d = 0;\n    List res = new ArrayList<>();\n    for (int i = 0; i \n56. 合并区间\n         public int[][] merge(int[][] arr) {\n            List res = new ArrayList<>();\n            if (arr == null || arr.length == 0) return res.toArray(new int[0][]);\n            Arrays.sort(arr, (a, b) -> a[0] - b[0]);\n            int n = arr.length, i = 0;\n            while (i = arr[i + 1][0]) {\n                    end = Math.max(end, arr[i + 1][1]);\n                    i++;\n                }\n                res.add(new int[]{start, end});\n                i++;\n            }\n            return res.toArray(new int[0][]);\n        }\n\n215. 数组中的第K个最大元素\n方法1:优先队列\npublic int findKthLargest(int[] nums, int k) {\n    PriorityQueue pq = new PriorityQueue<>();\n    for (int i = 0; i  pq.peek()) pq.offer(nums[i]);\n        if (pq.size() > k) pq.poll();\n    }\n    return pq.peek();\n}\n\n方法2:快排\n        public int findKthLargest(int[] nums, int k) {\n            int n = nums.length;\n            int target = n - k, l = 0, r = n - 1;\n            while (true) {\n                //找到partition的索引\n                int idx = partition(nums, l, r);\n                //如果找到，返回\n                if (idx == target) return nums[idx];\n                else if (idx > target) r = idx - 1;\n                else l = idx + 1;\n            }\n        }\n\n\n        public int partition(int[] nums, int l, int r) {\n            //随机化一个pivot\n            if (l =pivot\n            swap(nums, j, l);\n            return j;\n        }\n\n        public void swap(int[] nums, int i, int j) {\n            int t = nums[i];\n            nums[i] = nums[j];\n            nums[j] = t;\n        }\n\n方法3:堆排序\npublic int findKthLargest(int[] nums, int k) {\n    int n = nums.length;\n    heapInsert(nums);\n    for (int i = 0; i  -1; root--) {\n        heapify(nums, root, n - 1);\n    }\n}\n\npublic void heapify(int[] nums, int root, int hi) {\n    if (root > hi)\n        return;\n    int t = nums[root];\n    int child = 2 * root + 1;\n    while (child  nums[child])\n            break;\n        nums[root] = nums[child];\n        root = child;\n        child = 2 * root + 1;\n    }\n    nums[root] = t;\n}\n\n217. 存在重复元素\n方法1:Set\n    public boolean containsDuplicate(int[] nums) {\n        Set set = new HashSet<>();\n        for(int x : nums){\n            if(set.contains(x)) return true;\n            set.add(x);\n        }\n        return false;\n    }\n\n方法2:lambda\npublic boolean containsDuplicate(int[] nums) {\n    Set seen = new HashSet<>();\n    return Arrays.stream(nums).anyMatch(num -> !seen.add(num));\n}\n\n方法3:排序\npublic boolean containsDuplicate(int[] nums) {\n    Set seen = new HashSet<>();\n    return Arrays.stream(nums).anyMatch(num -> !seen.add(num));\n}\n\n599. 两个列表的最小索引总和\npublic String[] findRestaurant(String[] list1, String[] list2) {\n    //map k:list1的string v:string的索引，因为题目中没有指出来list1的string是否有重复，忽略了重复的情况\n    Map map = new HashMap<>();\n    for (int i = 0; i  list = new ArrayList<>();\n    //索引和的最小值，根据数据范围取\n    int minn = 2005;\n    //遍历list2\n    for (int i = 0; i \n954. 二倍数对数组\n"},"docs/leetcode/classify/sorting.html":{"url":"docs/leetcode/classify/sorting.html","title":"排序","keywords":"","body":"排序\n\n\n912. 排序数组\n方法1:快排\n  public int[] sortArray(int[] nums) {\n            return quickSort(nums, 0, nums.length - 1);\n\n        }\n\n\n        private int[] quickSort(int[] nums, int left, int right) {\n            if (left \n"},"docs/leetcode/classify/simulation.html":{"url":"docs/leetcode/classify/simulation.html","title":"模拟","keywords":"","body":"模拟\n\n\n36. 有效的数独\n方法1\npublic boolean isValidSudoku(char[][] board) {\n    int R = board.length, C = board[0].length;\n    int[] rows = new int[R + 1], cols = new int[C + 1], blocks = new int[10];\n    for (int r = 0; r > t) & 1) == 1 || ((cols[c] >> t) & 1) == 1 || ((blocks[idx] >> t) & 1) == 1)\n                return false;\n            rows[r] |= (1 \n另外一种写法\n      public boolean isValidSudoku(char[][] board) {\n            int R = board.length, C = board[0].length;\n            boolean[][] rows = new boolean[R][C];\n            boolean[][] cols = new boolean[R][C];\n            boolean[][] blocks = new boolean[R][C];\n            for (int r = 0; r \n方法2\n       public boolean isValidSudoku(char[][] board) {\n            int R = board.length, C = board[0].length;\n            //行 列 块的map k:当前的行/列/块 的索引 [0-8] v:当前的行/列/块 包含的数字\n            Map> rowsMap = new HashMap<>();\n            Map> colsMap = new HashMap<>();\n            Map> blocksMap = new HashMap<>();\n            for (int i = 0; i ());\n                colsMap.put(i, new HashSet<>());\n                blocksMap.put(i, new HashSet<>());\n            }\n            for (int r = 0; r \n2028. 找出缺失的观测数据\n        public int[] missingRolls(int[] rolls, int mean, int n) {\n            int m = rolls.length;\n            int tot = (n + m) * mean;\n            for (int x : rolls) tot -= x;\n            if (tot  6 * n) return new int[]{};\n            int[] res = new int[n];\n            Arrays.fill(res, tot / n);\n            if (tot / n * n  0) res[idx++]++;\n            }\n            return res;\n        }\n\n"},"docs/leetcode/classify/string.html":{"url":"docs/leetcode/classify/string.html","title":"字符串","keywords":"","body":"\n\n6. Z 字形变换\npublic String convert(String s, int numRows) {\n    //r表示每一行的索引 [0,numRows-1]\n    //flag是 1 或者 -1 按从上到下或者从下到上 两个方向区分正负\n    int r = 0, flag = 1;\n    //结果列表\n    StringBuilder[] sb = new StringBuilder[numRows];\n    for (int k = 0; k \n8. 字符串转换整数 (atoi)\n        public static void main(String[] args) {\n            _2nd handler = new _2nd();\n            System.out.println(Integer.MAX_VALUE); //2147483647\n            System.out.println(Integer.MIN_VALUE);//-2147483648\n            Assert.assertEquals(0, handler.myAtoi(\"words and 987\"));\n            Assert.assertEquals(42, handler.myAtoi(\"42\"));\n            Assert.assertEquals(-42, handler.myAtoi(\"    -42\"));\n            Assert.assertEquals(2147483647, handler.myAtoi(\"2147483649\"));\n            Assert.assertEquals(-2147483648, handler.myAtoi(\"   -2147483649  \"));\n\n        }\n\n\n        public int myAtoi(String s) {\n            s = s.trim();\n            if (s == null || s.length() == 0) return 0;\n            int sign = 1;\n            int start = 0;\n            if (s.charAt(0) == '+') {\n                start = 1;\n                sign = 1;\n            } else if (s.charAt(0) == '-') {\n                start = 1;\n                sign = -1;\n            }\n            long res = 0;\n            for (int i = start; i  Integer.MAX_VALUE) return Integer.MAX_VALUE;\n                if (sign == -1 && res > Integer.MAX_VALUE) return Integer.MIN_VALUE;\n            }\n            return sign * (int) res;\n        }\n\n38. 外观数列\n方法1.模拟\npublic String countAndSay(int n) {\n    String str = \"1\";\n    for (int i = 2; i \n另外一种写法：\n        public String countAndSay(int n) {\n            String res = \"1\";\n            for (int i = 2; i \n方法2.打表\n\n略\n\n394. 字符串解码\npublic String decodeString(String s) {\n\n    LinkedList numList = new LinkedList<>();\n    LinkedList strList = new LinkedList<>();\n    int multi = 0;\n    StringBuilder res = new StringBuilder();\n    char[] chas = s.toCharArray();\n    for (int i = 0; i = '0' && c \n"},"docs/leetcode/classify/binary_search.html":{"url":"docs/leetcode/classify/binary_search.html","title":"二分","keywords":"","body":"4. 寻找两个正序数组的中位数\n方法1:双指针\n\n双指针merge两个数组，用多余的数组来存储最终的结果\n\npublic double findMedianSortedArrays(int[] nums1, int[] nums2) {\n    int[] arr = mergeArray(nums1, nums2);\n    int n = arr.length;\n    if (n % 2 == 0) {\n        return (arr[(n - 1) / 2] + arr[n / 2]) / 2.0;\n    } else {\n        return arr[n / 2];\n    }\n}\n\nprivate int[] mergeArray(int[] nums1, int[] nums2) {\n    int m = nums1.length, n = nums2.length;\n    int[] arr = new int[m + n];\n    int i = 0, j = 0, k = 0;\n    while (i \n复杂度分析\n\n时间复杂度：O(m+n)其中m和n是两个数组的长度\n空间复杂度：O(m+n)其中m和n是两个数组的长度\n\n方法2:求Kth\n\n\n\n\n关于if (len1 == 0) return nums2[start2+k-1];的判断\n\n拿nums1=[1,2]和nums2=[3,4]举例，当nums1用完的时候，start1已经跳到len(nums1)的位置，开始发生越界，这时候说明nums1已经用完了，按nums2的数组下标计算目标索引，也就是nums2[start2+k-1],因为一开始保证了nums1比nums2长度小\n\n        public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n            int m = nums1.length, n = nums2.length;\n            //各自上下取整，错开一个位置\n            int left = (m + n + 1) / 2;\n            int right = (m + n + 2) / 2;\n            //计算上下取整的位置的Kth，免去判断奇偶数\n            int leftKthNum = getKthNum(nums1, 0, m - 1, nums2, 0, n - 1, left);\n            int rightKthNum = getKthNum(nums1, 0, m - 1, nums2, 0, n - 1, right);\n            return (leftKthNum + rightKthNum) / 2.0;\n        }\n\n        /**\n         * @param nums1  数组1\n         * @param start1 数组1的开始位置\n         * @param end1   数组1的结束位置\n         * @param nums2  数组2\n         * @param start2 数组2的开始位置\n         * @param end2   数组2的结束位置\n         * @param k      第k个\n         * @return\n         */\n        public int getKthNum(int[] nums1, int start1, int end1, int[] nums2, int start2, int end2, int k) {\n            //当前[start1..end1] 和 [start2...end2]的长度\n            int len1 = end1 - start1 + 1, len2 = end2 - start2 + 1;\n            //始终保持nums1的长度短\n            if (len1 > len2) return getKthNum(nums2, start2, end2, nums1, start1, end1, k);\n            //拿`nums1=[1,2]`和`nums2=[3,4]`举例，当`nums1`用完的时候，`start1`已经跳到`len(nums1)`的位置，开始发生越界，这时候说明`nums1`已经用完了，按`nums2`的数组下标计算目标索引，也就是`nums2[start2+k-1]`,因为一开始保证了`nums1`比`nums2`长度小\n            if (len1 == 0) return nums2[start2 + k - 1];\n            //k经剩下1个时，说明找到了\n            if (k == 1) return Math.min(nums1[start1], nums2[start2]);\n            //每次取k的一半 计算新的i和j开始二分\n            int i = start1 + Math.min(len1, k / 2) - 1;\n            int j = start2 + Math.min(len2, k / 2) - 1;\n            //如果nums1[i] > nums2[j]去掉[start2...j]的部分，反之，去掉[start1...i]的部分\n            if (nums1[i] > nums2[j]) {\n                return getKthNum(nums1, start1, end1, nums2, j + 1, end2, k - (j - start2 + 1));\n            } else {\n                return getKthNum(nums1, i + 1, end1, nums2, start2, end2, k - (i - start1 + 1));\n            }\n        }\n\n复杂度分析\n\n时间复杂度：O(log(m+n))其中m和n是两个数组的长度\n空间复杂度：O(1没有使用到多余的空间\n\n方法3:二分\n\n.\n            public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n            int m = nums1.length, n = nums2.length;\n            if (m > n) return findMedianSortedArrays(nums2, nums1);\n            //true：奇数 false：偶数\n            boolean isOdd = ((m + n) & 1) == 1;\n            int start = 0, end = m;\n            int cut1, cut2;\n            while (start  nums2RightMin) end = cut1 - 1;\n                 // nums1右半部分最小值比nums2左半部分的最大值小，说明需要扩大[cut1...end]这个范围\n                else if (nums2LeftMax > nums1RightMin) start = cut1 + 1;\n                //开始返回结果，结合奇偶性\n                else {\n                    if (isOdd) return Math.max(nums1LeftMax, nums2LeftMax);\n                    else\n                        return ((double) (Math.max(nums1LeftMax, nums2LeftMax) + Math.min(nums1RightMin, nums2RightMin))) / 2;\n                }\n\n            }\n            return 0.0;\n        }\n\n复杂度分析\n\n时间复杂度：O(log(m+n))其中m和n是两个数组的长度\n空间复杂度：O(1没有使用到多余的空间\n\nFollow Up1:给定两个排序数组，找第Kth大的元素\n\n代码可以参考上面方法2\n\nFollow Up2:给定一个无序数组，找第Kth大的元素\n215. 数组中的第K个最大元素\n方法1:优先队列\npublic int findKthLargest(int[] nums, int k) {\n    PriorityQueue pq = new PriorityQueue<>();\n    for (int i = 0; i  pq.peek()) pq.offer(nums[i]);\n        if (pq.size() > k) pq.poll();\n    }\n    return pq.peek();\n}\n\n方法2:快排\n        public int findKthLargest(int[] nums, int k) {\n            int n = nums.length;\n            int target = n - k, l = 0, r = n - 1;\n            while (true) {\n                //找到partition的索引\n                int idx = partition(nums, l, r);\n                //如果找到，返回\n                if (idx == target) return nums[idx];\n                else if (idx > target) r = idx - 1;\n                else l = idx + 1;\n            }\n        }\n\n\n        public int partition(int[] nums, int l, int r) {\n            //随机化一个pivot\n            if (l =pivot\n            swap(nums, j, l);\n            return j;\n        }\n\n        public void swap(int[] nums, int i, int j) {\n            int t = nums[i];\n            nums[i] = nums[j];\n            nums[j] = t;\n        }\n\n方法3:堆排序\npublic int findKthLargest(int[] nums, int k) {\n    int n = nums.length;\n    heapInsert(nums);\n    for (int i = 0; i  -1; root--) {\n        heapify(nums, root, n - 1);\n    }\n}\n\npublic void heapify(int[] nums, int root, int hi) {\n    if (root > hi)\n        return;\n    int t = nums[root];\n    int child = 2 * root + 1;\n    while (child  nums[child])\n            break;\n        nums[root] = nums[child];\n        root = child;\n        child = 2 * root + 1;\n    }\n    nums[root] = t;\n}\n\n33. 搜索旋转排序数组\npublic int search(int[] nums, int target) {\n    int n = nums.length, l = 0, r = n - 1;\n    while (l = nums[l]) {//与左端点比较后再与target值比较\n            if (target >= nums[l] && target  nums[m] && target \n34. 在排序数组中查找元素的第一个和最后一个位置\npublic int[] searchRange(int[] nums, int target) {\n    int[] res = new int[]{-1, -1};\n    if (nums == null || nums.length == 0) return res;\n    int n = nums.length;\n    int l = 0, r = n - 1;\n    while (l  target) {\n            r = mid - 1;\n        } else {\n            l = mid;\n        }\n    }\n    if (nums[l] == target) res[1] = l;\n    return res;\n}\n\n81. 搜索旋转排序数组 II\npublic boolean search(int[] nums, int target) {\n    int l = 0, r = nums.length - 1;\n    while (l  nums[l]) {\n            if (nums[m] >= target && target >= nums[l]) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        } else if (nums[m] = target && target >= nums[m]) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        } else if (nums[m] == nums[l]) {\n            l++;\n        }\n    }\n\n    return false;\n}\n\n153. 寻找旋转排序数组中的最小值\npublic int findMin(int[] nums) {\n    int l = 0, r = nums.length - 1;\n    while (l  nums[r]) {\n            l = m + 1;\n        } else if (nums[m] \n154. 寻找旋转排序数组中的最小值 II\npublic int findMin(int[] nums) {\n    int l = 0, r = nums.length - 1;\n    while (l  nums[r]) l = mid + 1;\n        else if (nums[mid] \n162. 寻找峰值\n    public int findPeakElement(int[] nums) {\n        int n = nums.length , l = 0, r= n-1;\n        while(l\n278. 第一个错误的版本\n    public int firstBadVersion(int n) {\n        int l = 1 , r = n;\n        while(l\n475. 供暖器\n方法1\n//这个case表示在1 2 3 4 位置都有热水器 但是只有1位置有房子，结果为0\n//[1]\n//[1,2,3,4]\npublic int findRadius(int[] houses, int[] heaters) {\n    Arrays.sort(houses);\n    Arrays.sort(heaters);\n    int l = 0, r = (int) 1e9;\n    while (l  heaters[j] + target) {\n            j++;\n        }\n        if (j \n方法2\npublic int findRadius(int[] houses, int[] heaters) {\n    Arrays.sort(heaters);\n    int m = houses.length, n = heaters.length;\n    int res = Integer.MIN_VALUE;\n    for (int house : houses) {\n        int idx = Arrays.binarySearch(heaters, house);\n        if (idx = 0 ? house - heaters[idx - 1] : Integer.MAX_VALUE;\n            int dist2 = idx \n方法3\n    public int findRadius(int[] houses, int[] heaters) {\n      Arrays.sort(houses);\n      Arrays.sort(heaters);\n\n      int i = 0, res = 0;\n      for(int house: houses){\n        while(i + 1 = Math.abs(heaters[i + 1] - house)){\n          i++;    \n        }\n        res = Math.max(res, Math.abs(heaters[i] - house));\n      }\n      return res;\n    }\n\n704. 二分查找\npublic int search(int[] nums, int target) {\n    int n = nums.length, l = 0, r = n - 1;\n    while (l  target) r = mid - 1;\n        else l = mid + 1;\n    }\n    return nums[l] == target ? l : -1;\n}\n\n744. 寻找比目标字母大的最小字母\n//需要临界点判断下\npublic char nextGreatestLetter(char[] le, char ta) {\n    if (le == null || le.length == 0) return ta;\n    int l = 0, r = le.length - 1;\n    while (l \npublic char nextGreatestLetter(char[] le, char ta) {\n    if (le == null || le.length == 0) return ta;\n    int l = 0, r = le.length - 1;\n    while (l \n   public char nextGreatestLetter(char[] letters, char target) {\n        int n = letters.length, l =0 , r = n-1;\n        while(l target ? letters[l] : letters[0];\n    }\n\n"},"docs/leetcode/classify/structure_design.html":{"url":"docs/leetcode/classify/structure_design.html","title":"结构设计","keywords":"","body":"结构设计\n232. 用栈实现队列\n\n栈：先进后出FILO\n队列：先进先出FIFO\n准备两个栈，一个数据栈data,一个辅助栈help\npush时，只需要向help栈中推\npop时，只要去data的栈顶元素，即data.pop(),但是data栈没有元素了需要怎样?将help栈的元素不断往data栈推，推完为止，如果data,help栈均无元素，报错\npeek时，与pop的过程一样，只是在返回的时候，data.peek()\nempty，当data,help均为空时，返回true\n\n\n\n class MyQueue {\n        Stack data;\n        Stack help;\n\n        public MyQueue() {\n            data = new Stack<>();\n            help = new Stack<>();\n        }\n\n        public void push(int x) {\n            help.push(x);\n        }\n\n        public int pop() {\n            if (data.isEmpty() && help.isEmpty()) throw new RuntimeException(\"empty queue\");\n            if (data.isEmpty()) {\n                while (!help.isEmpty()) data.push(help.pop());\n            }\n            return data.pop();\n        }\n\n        public int peek() {\n            if (data.isEmpty() && help.isEmpty()) throw new RuntimeException(\"empty queue\");\n            if (data.isEmpty()) {\n                while (!help.isEmpty()) data.push(help.pop());\n            }\n            return data.peek();\n        }\n\n        public boolean empty() {\n            return data.isEmpty() && help.isEmpty();\n        }\n    }\n\n剑指 Offer 09. 用两个栈实现队列\n方法1:Stack\n\n参考「232. 用栈实现队列」\n\nclass CQueue {\n\n    Stack data;\n    Stack help;\n\n    public CQueue() {\n        data = new Stack<>();\n        help =new Stack<>();\n    }\n\n    public void appendTail(int value) {\n        help.push(value);\n    }\n\n    public int deleteHead() {\n          //两个栈的数据都为空，返回-1\n        if(data.isEmpty() && help.isEmpty()) return -1;\n          //data的数据没有了从help中拿\n        if(data.isEmpty()){\n            while(!help.isEmpty()) data.push(help.pop());\n        }\n          //弹出data的栈顶元素\n        return data.pop();\n    }\n}\n\n方法2:Deque\n\n注释的代码写法是等价的，详细参考基础与技巧\n\n        class CQueue {\n\n            Deque data;\n            Deque help;\n\n            public CQueue() {\n                data = new ArrayDeque<>();\n                help = new ArrayDeque<>();\n            }\n\n            public void appendTail(int value) {\n                help.addFirst(value);\n//                help.push(value);\n            }\n\n            public int deleteHead() {\n                if (data.isEmpty() && help.isEmpty()) return -1;\n                if (data.isEmpty()) {\n                    while (!help.isEmpty()) {\n//                        data.addFirst(help.pollFirst());\n                        data.push(help.pop());\n                    }\n                }\n//                return data.pollFirst();\n                return data.pop();\n            }\n        }\n\n225. 用队列实现栈\n方法1:两个队列\n\n队列是先进先出，栈是先进后出，在top()方法中，为了避免，数据拷贝，有一个swap()的动作，data与help的存储顺序是一样的\n因为data队列的元素始终存在，判断栈是否为空的时候，只需要关注size(data)==0\ntop()与pop()方法只是在弹出data的最后一个元素的时候是否要继续放回help队列\n\n class MyStack {\n        private Queue data;\n        private Queue help;\n\n        /**\n         * Initialize your data structure here.\n         */\n        public MyStack() {\n            data = new LinkedList<>();\n            help = new LinkedList<>();\n        }\n\n        /**\n         * Push element x onto stack.\n         */\n        public void push(int x) {\n            data.add(x);\n        }\n\n        /**\n         * Removes the element on top of the stack and returns that element.\n         */\n        public int pop() {\n            if (data.isEmpty()) throw new RuntimeException(\"stack empty\");\n            while (data.size() != 1) help.add(data.poll());\n            int res = data.poll();\n            swap();\n            return res;\n        }\n\n        /**\n         * Get the top element.\n         */\n        public int top() {\n            if (data.isEmpty()) throw new RuntimeException(\"stack empty\");\n            while (data.size() != 1) help.add(data.poll());\n            int res = data.poll();\n            help.add(res);\n            swap();\n            return res;\n        }\n\n\n        private void swap() {\n            Queue tmp = help;\n            help = data;\n            data = tmp;\n        }\n\n        /**\n         * Returns whether the stack is empty.\n         */\n        public boolean empty() {\n            return data.size() == 0;\n        }\n    }\n\n方法2:一个队列\n\nshift()方法是为top() 与pop()方法准备的，做一件事：就是弹出队头到倒数第2个队尾元素的，将其送到队列的尾部，在执行top() 与pop()，弹出queue的队头元素，如果是top()，继续保留这个元素，pop()时扔掉\n\nclass MyStack {\n\n    private Queue queue;\n\n    /**\n     * Initialize your data structure here.\n     */\n    public MyStack() {\n        queue = new LinkedList<>();\n    }\n\n    /**\n     * Push element x onto stack.\n     */\n    public void push(int x) {\n        queue.offer(x);\n    }\n\n    /**\n     * Removes the element on top of the stack and returns that element.\n     */\n    public int pop() {\n        shift();\n        int res = queue.poll();\n        return res;\n    }\n\n    /**\n     * Get the top element.\n     */\n    public int top() {\n        shift();\n        int res = queue.poll();\n        queue.offer(res);\n        return res;\n    }\n\n\n    public void shift() {\n        int size = queue.size();\n        for (int i = 0; i \n155. 最小栈\n方法1：辅助栈[浪费空间]\n\n基础版辅助栈，准备一个data, 数据栈，准备一个help 辅助栈\n\n其中data的存数据的，help辅助栈用来存最小值，在push操作时，help如果栈顶元素大于待push的元素，将待push的元素塞进help中，如果不是，则重复塞一次help的栈顶元素，注意help为空的时候特殊处理下\n\n\n\n\n准备两个栈，data和help，做push操作时，需要保持help栈顶的元素始终最小，data的数据正常推入，help栈顶维持最小，在执行getMin方法的时候，返回help的栈顶元素\n\nclass MinStack {\n        private Stack data;\n        private Stack help;\n\n        /**\n         * initialize your data structure here.\n         */\n        public MinStack() {\n            data = new Stack<>();\n            help = new Stack<>();\n        }\n\n        public void push(int x) {\n            data.push(x);\n            if (help.isEmpty()) help.push(x);\n            else if (help.peek() \n方法2：辅助栈[不浪费空间]\n\n升级版本辅助栈，当push 进去的时候，\n当help的栈顶元素比新来的元素小的时候，这个时候保持help不变\n当help的栈顶元素大于等于新来的元素时，help同步要推一份新的元素进来\n当help元素为空的时候，也需要往里推\n\n\npop的时候，pop的元素是否和help 的元素有重叠，有就将help的元素pop出去，没有就维持不动，data栈正常pop\n\nclass MinStack {\n    Stack data;\n    Stack help;\n\n    /**\n     * initialize your data structure here.\n     */\n    public MinStack() {\n        data = new Stack<>();\n        help = new Stack<>();\n    }\n\n    public void push(int x) {\n        if (help.isEmpty() || help.peek() >= x) {\n            help.push(x);\n        }\n        data.push(x);\n\n    }\n\n    public void pop() {\n        if (data.isEmpty()) throw new RuntimeException(\"The stack is empty\");\n        int pop = data.pop();\n        if (pop == help.peek()) {\n            help.pop();\n        }\n    }\n\n    public int top() {\n        if (data.isEmpty()) throw new RuntimeException(\"The stack is empty\");\n        return data.peek();\n    }\n\n    public int getMin() {\n        if (help.isEmpty()) throw new RuntimeException(\"The stack is empty\");\n        return help.peek();\n    }\n}\n\n307. 区域和检索 - 数组可修改\n方法1:二分\nclass NumArray {\n\n    class TreeNode {\n        int val;\n        int start;\n        int end;\n        TreeNode left;\n        TreeNode right;\n\n        public TreeNode(int start, int end) {\n            this.start = start;\n            this.end = end;\n        }\n    }\n\n    TreeNode root = null;\n\n\n    private TreeNode buildTree(int[] nums, int start, int end) {\n        if (start > end) return null;\n        TreeNode curr = new TreeNode(start, end);\n        if (start == end) curr.val = nums[start];\n        else {\n            int mid = start + (end - start) / 2;\n            curr.left = buildTree(nums, start, mid);\n            curr.right = buildTree(nums, mid + 1, end);\n            curr.val = curr.left.val + curr.right.val;\n        }\n        return curr;\n    }\n\n\n    public NumArray(int[] nums) {\n        root = buildTree(nums, 0, nums.length - 1);\n    }\n\n    public void update(int i, int val) {\n        updateTree(root, i, val);\n    }\n\n    public void updateTree(TreeNode node, int i, int val) {\n        if (node.start == node.end) {\n            node.val = val;\n        } else {\n            int mid = node.start + (node.end - node.start) / 2;\n            if (i = mid + 1) {\n                return queryTree(node.right, i, j);\n            } else {\n                return queryTree(node.left, i, mid) + queryTree(node.right, mid + 1, j);\n            }\n        }\n    }\n}\n\n方法2:线段树\n146. LRU 缓存\n需要一个哈希双端链表，DoubleLinkedNode\n\n 这个双端链表有下面的几个属性\n\n        class DoubleLinkedNode {\n            int key, value;//k,v\n            DoubleLinkedNode pre, next;//前驱接节点，后继节点\n\n            public DoubleLinkedNode(int key, int value) {\n                this.key = key;\n                this.value = value;\n            }\n\n            public DoubleLinkedNode() {\n            }\n        }\n\n\n将新加入的节点插入到双端链表的头部位置addFirst(node)\n\n\n        /**\n         * 将节点加入到双向链表的开头的位置\n         */\n        public void addFirst(DoubleLinkedNode node) {\n            node.pre = head;//1.当前节点的前驱结点指向head节点\n            node.next = head.next;//2.当前节点的后继节点指向head的后继节点\n\n            head.next.pre = node;//3.head节点的后继节点的前驱结点指向当前节点\n            head.next = node;//4.head的后继节点指向当前节点\n        }\n\n\n移除一个节点removeNode(node)\n\n\n        /**\n         * 移除一个普通的节点\n         *\n         * @param node\n         */\n        public void removeNode(DoubleLinkedNode node) {\n            DoubleLinkedNode next = node.next;\n            DoubleLinkedNode pre = node.pre;\n            pre.next = next;\n            next.pre = pre;\n        }\n\n\n弹出最末尾的节点，并返回最后的节点popLast\n\n        /**\n         * 弹出最末尾的节点并将改节点返回\n         *\n         * @return\n         */\n        public DoubleLinkedNode popLast() {\n            DoubleLinkedNode last = tail.pre;\n            removeNode(last);\n            return last;\n        }\n\n\n将一个已经在链表中存在的节点移动到链表的开头moveToHead(node)\n\n\n先移除这个节点移除，再将这个节点添加到链表的开头\n\n        /**\n         * 将当前节点移动到最头部位置\n         *\n         * @param node\n         */\n        public void moveToHead(DoubleLinkedNode node) {\n            removeNode(node);\n            addFirst(node);\n        }\n\n\n下面开始LRU\n\n思路\n\n初始化\n\n\n注意head节点和tail节点需要new出来\n\n\nget(key)\n\n\n如果cache中不存在key,返回-1\n如果cache中存在，取出这个节点，将节点moveToHead，返回节点的值\n\n\nput(k,v)\n\n\n取出节点，分节点存在与否讨论：\n节点不存在：新创建节点，将该节点插入到链表的头部，并将其put进cache中\n做一个额外的判断：如果当前的cache的大小大于capacity，需要移除最末尾的节点，链表和$cache$都要做移除操作\n\n\n节点存在:返回节点的值，将节点移动到链表头部\n\n\n\n    class LRUCache {\n        DoubleLinkedNode head, tail;//Node的收尾节点\n        int capacity;//容量\n        Map cache;// k是key，v是key生成的node\n\n        /**\n         * 初始化\n         *\n         * @param capacity\n         */\n        public LRUCache(int capacity) {\n            this.capacity = capacity;\n            this.cache = new HashMap<>();\n            this.head = new DoubleLinkedNode();\n            this.tail = new DoubleLinkedNode();\n            this.head.next = tail;\n            this.tail.pre = head;\n\n        }\n\n        public int get(int key) {\n            if (!cache.containsKey(key)) return -1;\n            DoubleLinkedNode node = cache.get(key);\n            moveToHead(node);\n            return node.value;\n        }\n\n        public void put(int key, int value) {\n            DoubleLinkedNode node = cache.get(key);\n            if (node == null) {\n                node = new DoubleLinkedNode(key, value);\n                addFirst(node);\n                cache.put(key, node);\n                if (cache.size() > capacity) {\n                    DoubleLinkedNode last = popLast();\n                    cache.remove(last.key);\n                }\n            } else {\n                node.value = value;\n                moveToHead(node);\n            }\n        }\n    }\n\n2043. 简易银行系统\n方法1:模拟\nclass Bank {\n\n    long[] balance;\n    int capacity;\n\n    public Bank(long[] balance) {\n        this.balance = new long[balance.length + 1];\n        this.capacity = balance.length + 1;\n        for (int i = 0; i  capacity || account2 > capacity) return false;\n        if (this.balance[account1]  capacity) return false;\n        this.balance[account] += money;\n        return true;\n    }\n\n    public boolean withdraw(int account, long money) {\n        if (account > capacity) return false;\n        if (this.balance[account] \n"},"docs/leetcode/classify/two_pointers.html":{"url":"docs/leetcode/classify/two_pointers.html","title":"双指针","keywords":"","body":"双指针\n>\n0.抽象模型\n\n初始化时准备两个指针，left与right指针，指向index=0\n扩大right指针，当第一次符合窗口大小时，执行逻辑\n在符合条件下，不断扩right，缩left，直到right达到数组或是字符串的末尾，left缩小到不符合窗口大小\n\n\n3. 无重复字符的最长子串\n\n\n这一题是leetcode的NO.3题，曾经被面到过，很经典的一道题\n\n\n注意：子串与子序列的区别\n子串：不可跳跃，如 pwwkew中wke是子串\n子序列：可以跳跃，如pwwkew中pkw是子序列\n\n\n\n方法1:粗糙版滑动窗口\n\n用Set来维护重复字符与否的问题\n出现新的字符，很好，right指针向右扩展，并将当前字符加入Set中，更新最长无重复子串长度\n出现旧的字符，将左边界left指针向右收缩，移除当前的left指针指向的字符\n\n\n\n    public int lengthOfLongestSubstring1st(String s) {\n        int res = 0, left = 0, right = 0;\n        int n = s.length();\n        Set set = new HashSet<>();\n        while (right \n方法2:优化版滑动窗口\n\n用一个hashmap来建立字符和其出现位置之间的映射。\n维护一个滑动窗口，窗口内的都是没有重复的字符，去尽可能的扩大窗口的大小，窗口不停的向右滑动。\n（1）如果当前遍历到的字符从未出现过，那么直接扩大右边界；\n（2）如果当前遍历到的字符出现过，则缩小窗口（左边索引向右移动），然后继续观察当前遍历到的字符；\n（3）重复（1）（2），直到左边索引无法再移动；\n（4）维护一个结果res，每次用出现过的窗口大小来更新结果res，最后返回res获取结果。\n用一个mapper记录出现过并且没有被删除的字符\n用一个滑动窗口记录当前index开始的最大的不重复的字符序列\n用res去记录目前位置最大的长度，每次滑动窗口更新就去决定是否需要更新res\n\n\n\n  public int lengthOfLongestSubstring2nd(String s) {\n        int res = 0, left = 0, right = 0;\n        int n = s.length();\n        Map map = new HashMap<>();\n        while (right \n方法3:再优化版滑动窗口\n\n常用的表如下所示：\n\nint [26] 用于字母 ‘a’ - ‘z’ 或 ‘A’ - ‘Z’\nint [128] 用于ASCII码\nint [256] 用于扩展ASCII码\n\n\n准备一个helper数组，每次记录right指针的绝对位置，\n更新res,更新left(拿到其最大位置)\n\n    public int lengthOfLongestSubstring3rd(String s) {\n        int res = 0, left = 0, right = 0;\n        int n = s.length();\n        int[] helper = new int[128];\n        while (right \n最小覆盖子串\n\n\n准备两个hash   arr，source   target，先给t的记上，作为标准，每个字母出现的次数\n提供一个valid的方法，比较source  target，判断source是否都包含target，包含的话true，不包含的话false\n\n然后开始构造window，最外层的条件是right,\n\n当valid过不了的时候，说明window中还不含有t，记录下source，并将right++，即将window的右边界往右边推\n当valid满足条件时，说明window都能涵盖了t的字符，记录长度和res，并将source相应的字符--，将left++，缩小window的左边界\n\n\n\n\n\npublic String minWindow(String s, String t) {\n        if (s == null || t == null || s.length() \n15. 三数之和\n/*\n *[-1,0,1,2,-1,-4]\n *[[-1,-1,2],[-1,0,1]]\n * @param nums\n * @return\n */\npublic List> threeSum(int[] nums) {\n    List> results = new ArrayList<>();\n    if (nums == null || nums.length  0) break;\n        if (i > 0 && nums[i] == nums[i - 1]) continue;\n        int l = i + 1, r = n - 1;\n        while (l  0) r--;\n        }\n    }\n    return results;\n}\n\n18. 四数之和\npublic List> fourSum(int[] nums, int target) {\n    List> results = new ArrayList<>();\n    if (nums == null || nums.length  0 && nums[a] == nums[a - 1]) continue;\n        for (int b = a + 1; b  a + 1 && nums[b] == nums[b - 1]) continue;\n            //固定a b 后  选取 c d两个指针\n            int c = b + 1, d = n - 1;\n            while (c  target) d--;//滑动\n            }\n        }\n    }\n    return results;\n}\n\n26. 删除有序数组中的重复项\n方法1\n//            [1,1,2]  ->[1,2]\n//[0,0,1,1,1,2,2,3,3,4] -> [0,1,2,3,4]\n//[1] -> [1]\n\npublic int removeDuplicates(int[] nums) {\n    if (nums == null || nums.length == 1) return nums.length;\n    int i = 0, j = 1;\n    for (; i \n方法2\npublic int removeDuplicates(int[] nums) {\n    if (nums == null || nums.length == 0) return 0;\n    int i = 0, j = 1;\n    while (j \n151. 翻转字符串里的单词\n方法1:基本\npublic String reverseWords(String s) {\n    if (s == null || s.length() == 0) return null;\n    char[] chas = s.toCharArray();\n    reverse(chas, 0, chas.length - 1);\n    String t = String.valueOf(chas);\n    String[] arr = t.trim().split(\"\\\\s+\");\n    StringBuilder ans = new StringBuilder();\n    for (String a : arr) {\n        char[] tmp = a.toCharArray();\n        reverse(tmp, 0, a.length() - 1);\n        ans.append(tmp);\n        ans.append(\" \");\n    }\n    return ans.toString().trim();\n}\n\n\nprivate void reverse(char[] chas, int l, int r) {\n    while (l \n方法2:多次翻转\npublic String reverseWords(String s) {\n    char[] chas = s.toCharArray();\n    int n = chas.length;\n    reverse(chas, 0, chas.length - 1);\n    reverseWords(chas, n);\n    return cleanSpaces(chas, n);\n}\n\n\npublic String cleanSpaces(char[] chas, int n) {\n    int l = 0, r = 0;\n    while (r \n"},"docs/leetcode/classify/sliding_window.html":{"url":"docs/leetcode/classify/sliding_window.html","title":"滑动窗口","keywords":"","body":"\n\n3. 无重复字符的最长子串\n\n这一题是leetcode的NO.3题，曾经被面到过，很经典的一道题\n\n\n注意：子串与子序列的区别\n子串：不可跳跃，如 pwwkew中wke是子串\n子序列：可以跳跃，如pwwkew中pkw是子序列\n\n\n\n方法1:粗糙版滑动窗口\n\n用Set来维护重复字符与否的问题\n出现新的字符，很好，right指针向右扩展，并将当前字符加入Set中，更新最长无重复子串长度\n出现旧的字符，将左边界left指针向右收缩，移除当前的left指针指向的字符\n\n\n\n    public int lengthOfLongestSubstring1st(String s) {\n        int res = 0, left = 0, right = 0;\n        int n = s.length();\n        Set set = new HashSet<>();\n        while (right \n方法2:优化版滑动窗口\n\n用一个hashmap来建立字符和其出现位置之间的映射。\n维护一个滑动窗口，窗口内的都是没有重复的字符，去尽可能的扩大窗口的大小，窗口不停的向右滑动。\n（1）如果当前遍历到的字符从未出现过，那么直接扩大右边界；\n（2）如果当前遍历到的字符出现过，则缩小窗口（左边索引向右移动），然后继续观察当前遍历到的字符；\n（3）重复（1）（2），直到左边索引无法再移动；\n（4）维护一个结果res，每次用出现过的窗口大小来更新结果res，最后返回res获取结果。\n用一个mapper记录出现过并且没有被删除的字符\n用一个滑动窗口记录当前index开始的最大的不重复的字符序列\n用res去记录目前位置最大的长度，每次滑动窗口更新就去决定是否需要更新res\n\n\n\n  public int lengthOfLongestSubstring2nd(String s) {\n        int res = 0, left = 0, right = 0;\n        int n = s.length();\n        Map map = new HashMap<>();\n        while (right \n方法3:再优化版滑动窗口\n\n常用的表如下所示：\n\nint [26] 用于字母 ‘a’ - ‘z’ 或 ‘A’ - ‘Z’\nint [128] 用于ASCII码\nint [256] 用于扩展ASCII码\n\n\n准备一个helper数组，每次记录right指针的绝对位置，\n更新res,更新left(拿到其最大位置)\n\n    public int lengthOfLongestSubstring3rd(String s) {\n        int res = 0, left = 0, right = 0;\n        int n = s.length();\n        int[] helper = new int[128];\n        while (right \n239. 滑动窗口最大值\n方法1：双端队列\n\npublic int[] maxSlidingWindow(int[] nums, int k) {\n    if (nums == null || nums.length == 0) return new int[]{};\n    int n = nums.length;\n    Deque deque = new LinkedList<>();\n    int[] ans = new int[n - k + 1];\n    int index = 0;\n    for (int i = 0; i = k - 1) {\n            ans[index++] = nums[deque.peekFirst()];\n        }\n    }\n    return ans;\n}\n\n方法2：双端队列\npublic int[] maxSlidingWindow(int[] nums, int k) {\n            if (nums == null || nums.length == 0) return new int[]{};\n            int n = nums.length;\n            int[] res = new int[n - k + 1];\n            int idx = 0;\n            Deque q = new LinkedList<>();//存的是元素的下标索引\n            for (int i = 0; i = k - 1) {\n                    res[idx++] = nums[q.peek()];//peekFirst()\n                }\n            }\n            return res;\n        }\n\n方法3：辅助数组+贪心\n\n国际站看的的一个思路，很赞\n\n\n如上图:\n1.将源数组按k的大小分，最后一组不够k的话，维持现状\n2 1 3 4 | 6 3 8 9 | 10 12 56\n\n2.1.遍历数组，组装left_max，即从左开始，每个k组从左开始，取最大值\n2 2 3 4 | 6 6 8 9 | 10 12 56\n\n2.2.遍历数组，组装right_max，即从右开始，每个k组从右开始，取最大值\n2 | 6 6 6 6 | 10 10 10 10 | 56 56\n\n3.借助左右辅助数组拼装结果数组，Math.max(right_max[i], left_max[i + k - 1])\n4, 6, 6, 8, 9, 10, 12, 56\n\n实现\n public int[] maxSlidingWindow(int[] nums, int k) {\n            if (nums == null || nums.length == 0) return new int[]{};\n            int n = nums.length;\n            int[] left_max = new int[n];\n            int[] right_max = new int[n];\n            left_max[0] = nums[0];\n            right_max[n - 1] = nums[n - 1];\n            for (int i = 1; i \n上述贪心的证明：\n\n思路来源国际站，很赞的一个证明\n\n假设$a_0$,$a_1$,$a_2$ ... $a_n$的窗口宽度是$w$,目标是为了获取一个$d[]=int[n-w+1]$\n将上面的数组从左边开始分，每个元素的形式:$i*w+j$,其中$i$是从左边开始数，窗口的$index$，$j$是在这个窗口下的偏移量，其中$0\n构建如下的结果：\n$d[iw+j]=max(a[iw+j+x])$这里的$x$满足：$0\n假设有如下的数组：\n$left[iw+j]=left_max(a[iw+k])$​  其中$0\n$right[iw+j]=right_max(a[iw+k])$ 其中$j\n数组$left[]$是从左到右的每个窗口最大值\n数组$right[]$是从右到左的每个窗口的最大值\n\n有如下的推导：\n$d[iw+j]=max(right[iw+j], left[(i+1)w+j-1])$\n$d[iw+j]=max(right[iw+j], left[(iw+w+j-1])$\n=>\n$d[m] = max(right[m], left[m+w-1])$\n结果数组$d[]$​的最后一个元素是:$d[n-w]=max(right[n-w], left[n-1])$​\n395. 至少有 K 个重复字符的最长子串\n方法1:递归\npublic int longestSubstring(String s, int k) {\n    int n = s.length();\n    return dfs(s, 0, n - 1, k);\n}\n\npublic int dfs(String s, int l, int r, int k) {\n    int[] cnt = new int[26];\n    for (int i = l; i  0 && cnt[i]  r) {\n            break;\n        }\n        int start = i;\n        while (i \n424. 替换后的最长重复字符\npublic int characterReplacement(String s, int k) {\n    int[] arr = new int[26];\n    char[] chas = s.toCharArray();\n    int l = 0, r = 0, ans = 0, maxCnt = 0;\n    while (r  (maxCnt + k)) {\n            arr[chas[l] - 'A']--;\n            l++;\n        }\n        ans = r - l;\n    }\n    return ans;\n}\n\n2024. 考试的最大困扰度\n方法1:滑动窗口\n\n\npublic int maxConsecutiveAnswers(String str, int k) {\n    return Math.max(getMaxLength(str, 'T', k), getMaxLength(str, 'F', k));\n}\n\n//字符s中不至多包含k个c的最大长度\nprivate int getMaxLength(String s, char c, int k) {\n    int n = s.length();\n    int cnt = 0;\n    int res = 0;\n    //左右窗口，让r自增往右推\n    for (int l = 0, r = 0; r  k 说明[l,r]当前的窗口内有超过了k个字符c，缩减左窗口\n        while (cnt > k) {\n            if (s.charAt(l++) == c) cnt--;\n        }\n        //统计最大长度\n        res = Math.max(res, r - l + 1);\n    }\n    return res;\n}\n\n另外一种思路：\npublic int maxConsecutiveAnswers(String str, int k) {\n    return Math.max(getMaxLength(str, 'T', k), getMaxLength(str, 'F', k));\n}\n\n//字符s中可以至多包含k个c的最大长度\nprivate int getMaxLength(String s, char c, int k) {\n    //左右窗口\n    int n = s.length(), l = 0, r = 0;\n    int res = 0;\n    while (r \n方法2:滑动窗口+统计\n思路来自@lee215大佬，该解法可以参考424题\n      public int maxConsecutiveAnswers(String s, int k) {\n            //maxf表示滑窗中，相同字符最大的出现次数，本题只是'T' 和 'F'\n            int maxf = 0, l = 0, n = s.length();\n            //count数组 可以缩减到[2]个长度\n            int[] count = new int[26];\n            for (int r = 0; r  maxf + k) {\n                    --count[s.charAt(l++) - 'A'];\n                }\n            }\n            return n - l;\n        }\n\nFollow up:返回所有符合条件的索引\n        static List resList = new ArrayList<>();\n        int maxx = 0;\n\n\n        public List maxConsecutiveAnswers(String str, int k) {\n            getMaxLength(str, 'T', k);\n            getMaxLength(str, 'F', k);\n            return resList;\n        }\n\n        //字符s中可以至多包含k个c的最大长度\n        private void getMaxLength(String s, char c, int k) {\n            //左右窗口\n            int n = s.length(), l = 0, r = 0;\n//            int res = 0;\n            while (r = maxx) {\n                    if (r - l > maxx) resList.clear();\n                    resList.add(new int[]{l, r});\n                    maxx = r - l;\n                }\n            }\n        }\n\n"},"docs/leetcode/classify/monotonic_stack.html":{"url":"docs/leetcode/classify/monotonic_stack.html","title":"单调栈","keywords":"","body":"单调栈\n\n\n42. 接雨水\n\n方法1：单调栈\n\n\n\n\n\n\n        public int trap(int[] height) {\n            int res = 0;\n            Stack stk = new Stack<>();//存数组的下标索引\n            int cur = 0; //当前位置的下标\n            while (cur  height[stk.peek()]) {\n                    int m = height[stk.pop()];//记录下这个值，做这一轮计算的底\n                    if (stk.isEmpty()) break;//前探一个位置，没有位置跳出\n                    //计算： 当前位置cur 和 栈顶位置的最小值，组成一个封闭空间，和m这个底相减（木桶原理）, 组成高度\n                    //  下标的相减得到宽度\n                    res += (Math.min(height[cur], height[stk.peek()]) - m) * (cur - stk.peek() - 1);\n                }\n                stk.push(cur++);//当前元素比栈顶元素小，入栈，指针后移\n            }\n            return res;\n        }\n\n另外一种写法，大同小异:\n        public int trap(int[] height) {\n            Stack stk = new Stack<>();\n            int res = 0, cur = 0;\n            while (cur \n方法2：双指针\n\n\npublic int trap(int[] height) {\n    //左右索引\n    int l = 0, r = height.length - 1;\n    //左右两侧都不能形成一个封闭的区域\n    //从左侧往右找，一直递增地找\n    //从右侧往左找，一直递增地找\n    while (l  l && height[r] = height[++l]) {\n                res += left - height[l];\n            }\n        } else {\n            //如果基准的right高度比其左侧的l的高度大，是可以形成雨水的，因为left比right大\n            //--r精髓，强制向左滑动\n            //这里可能会出现相等高度的柱子，体积是0\n            while (r > l && right >= height[--r]) {\n                res += right - height[r];\n            }\n        }\n    }\n    return res;\n}\n\n另外一种写法，也很巧妙：\npublic int trap(int[] height) {\n    int res = 0;\n    //左右侧的索引\n    int l = 0, r = height.length - 1;\n    //l r 对应的height，初始值是MIN\n    int left = Integer.MIN_VALUE, right = Integer.MIN_VALUE;\n    while (l \n方法3：动态规划\n       public int trap(int[] height) {\n            int n = height.length;\n            //leftH[i]表示第i个柱子左边最高的柱子的高度\n            int[] leftH = new int[n];\n            //rightH[i]表示第i个柱子右边最高的柱子的高度\n            //上述的两个数组应该是符合单调性的\n            int[] rightH = new int[n];\n            //最左边的柱子的左边没有柱子了，leftH[0]=0\n            for (int i = 0; i = 0; --i) {\n                rightH[i] = Math.max(rightH[i + 1], height[i + 1]);\n            }\n            int res = 0;\n            //每次取左右两侧的最小值，做高度，每次步进1个长度\n            for (int i = 1; i  height[i]) {\n                    res += (m - height[i]);\n                }\n            }\n            return res;\n        }\n\n739. 每日温度\n方法1:Stack\npublic int[] dailyTemperatures(int[] T) {\n    int n = T.length;\n    int[] res = new int[n];\n    //存的下标索引\n    Stack stk = new Stack<>();\n    for (int i = 0; i \n方法2:Deque\n\n详细参考基础与技巧\n\n        public int[] dailyTemperatures(int[] T) {\n            int n = T.length;\n            int[] res = new int[n];\n            //存的下标索引\n            Deque stk = new ArrayDeque<>();\n            for (int i = 0; i \n"},"docs/leetcode/classify/search.html":{"url":"docs/leetcode/classify/search.html","title":"搜索","keywords":"","body":"搜索\n10. 正则表达式匹配\nint[][] cache;\n\n\npublic boolean isMatch(String s, String p) {\n    cache = new int[s.length() + 1][p.length() + 1];\n    char[] ss = s.toCharArray(), pp = p.toCharArray();\n    return isMatch(ss, 0, pp, 0);\n\n}\n\nprivate boolean isMatch(char[] ss, int s1, char[] pp, int p1) {\n    if (p1 >= pp.length) return s1 >= ss.length;\n    if (cache[s1][p1] != 0) return cache[s1][p1] > 0;\n    boolean f = s1 = 2 && pp[p1 + 1] == '*') {\n        res = isMatch(ss, s1, pp, p1 + 2) || (f && isMatch(ss, s1 + 1, pp, p1));\n        if (res) cache[s1][p1] = 1;\n        else cache[s1][p1] = -1;\n        return res;\n    }\n    res = f && isMatch(ss, s1 + 1, pp, p1 + 1);\n    if (res) cache[s1][p1] = 1;\n    else cache[s1][p1] = -1;\n    return res;\n}\n\n39. 组合总和\n方法1:回溯\nList> res = new ArrayList<>();\n\n\npublic List> combinationSum(int[] candidates, int target) {\n    Arrays.sort(candidates);\n    dfs(candidates, target, 0, new ArrayList<>());\n    return res;\n}\n\n\nprivate void dfs(int[] nums, int target, int idx, List sub) {\n    if (target (sub));\n        return;\n    }\n\n    for (int i = idx; i \n方法2:回溯（累加）\n\n     List> res = new ArrayList<>();\n        int target;\n\n        public List> combinationSum(int[] candidates, int target) {\n            Arrays.sort(candidates);\n            this.target = target;\n            dfs(candidates, 0, 0, new ArrayList<>());\n            return res;\n        }\n\n\n        private void dfs(int[] nums, int sum, int idx, List sub) {\n            if (sum > this.target) return;\n            if (sum == this.target) {\n                res.add(new ArrayList<>(sub));\n                return;\n            }\n\n            for (int i = idx; i \n40. 组合总和 II\n方法1:回溯（递减）\nList> res = new ArrayList<>();\n\npublic List> combinationSum2(int[] nums, int t) {\n    Arrays.sort(nums);//sort\n    dfs(nums, 0, t, new ArrayList<>());\n    return res;\n}\n\nprivate void dfs(int[] nums, int idx, int t, List sub) {\n    if (t (sub));\n        return;\n    }\n\n    for (int i = idx; i  idx && nums[i - 1] == nums[i]) continue;//skip duplicate candidate\n        sub.add(nums[i]);\n        dfs(nums, i + 1, t - nums[i], sub);\n        sub.remove(sub.size() - 1);\n    }\n}\n\n方法2:回溯（累加）\nList> res = new ArrayList<>();\nint t;\n\npublic List> combinationSum2(int[] nums, int t) {\n    Arrays.sort(nums);//sort\n    this.t = t;\n    dfs(nums, 0, 0, new ArrayList<>());\n    return res;\n}\n\nprivate void dfs(int[] nums, int idx, int sum, List sub) {\n    if (sum > t) return;\n    if (sum == t) {\n        res.add(new ArrayList<>(sub));\n        return;\n    }\n\n    for (int i = idx; i  idx && nums[i - 1] == nums[i]) continue;//skip duplicate candidate\n        sub.add(nums[i]);\n        dfs(nums, i + 1, sum + nums[i], sub);\n        sub.remove(sub.size() - 1);\n    }\n}\n\n46. 全排列\n方法1：dfs\n   List> resList = new ArrayList<>();\n  public List> permute(int[] nums) {\n\n        if (nums == null || nums.length == 0) return resList;\n        List levelList = new ArrayList<>();\n        int n = nums.length;\n        for (int num : nums) levelList.add(num);\n        backtrace(levelList, n, 0);\n        return resList;\n    }\n\n    private void backtrace( List levelList, int n, int index) {\n        if (index == n) {\n            resList.add(new ArrayList<>(levelList));\n            return;\n        }\n        for (int i = index; i \n47. 全排列 II\n方法1:DFS\n\nList> res = new ArrayList<>();\n\npublic List> permuteUnique(int[] nums) {\n    if (nums == null || nums.length == 0) return res;\n    Arrays.sort(nums);\n    dfs(new ArrayList<>(), nums, new boolean[nums.length]);\n    return res;\n}\n\nprivate void dfs(List sub, int[] nums, boolean[] vis) {\n    if (sub.size() == nums.length) {\n        sub.forEach(System.out::print);\n        System.out.println();\n        res.add(new ArrayList<>(sub));\n        return;\n    }\n    for (int i = 0; i  0 && nums[i - 1] == nums[i] && !vis[i - 1]) continue;\n        vis[i] = true;\n        sub.add(nums[i]);\n        dfs(sub, nums, vis);\n        sub.remove(sub.size() - 1);\n        vis[i] = false;\n\n    }\n}\n\n78. 子集\n方法1:回溯\nList> res = new ArrayList<>();\n\n        public List> subsets(int[] nums) {\n            res.add(new ArrayList<>());\n            dfs(nums, new ArrayList<>(), 0);\n            return res;\n\n        }\n\n\n        private void dfs(int[] nums, List sub, int idx) {\n            for (int i = idx; i (sub));\n                dfs(nums, sub, i + 1);\n                sub.remove(sub.size() - 1);\n            }\n        }\n\n90. 子集 II\n方法1:回溯\n\n        List> res = new ArrayList<>();\n\n\n        public List> subsetsWithDup(int[] nums) {\n            if (nums == null || nums.length == 0) return res;\n            Arrays.sort(nums);\n            res.add(new ArrayList<>());\n            dfs(new ArrayList<>(), nums, 0);\n            return res;\n        }\n\n\n        private void dfs(List sub, int[] nums, int idx) {\n            for (int i = idx; i  idx && nums[i - 1] == nums[i]) continue;\n                sub.add(nums[i]);\n                res.add(new ArrayList<>(sub));\n                sub.forEach(System.out::print);\n                System.out.println();\n                dfs(sub, nums, i + 1);\n                sub.remove(sub.size() - 1);\n            }\n        }\n\n139. 单词拆分\n\n方法1:记忆化DFS(使用map)\nMap cache = new HashMap<>();\nList wordDict;\n\npublic boolean wordBreak(String s, List wordDict) {\n    this.wordDict = wordDict;\n    return dfs(s, 0);\n}\n\n/**\n * 下标索引从i开始到len(s)结束，能否由wordDict字典形成这个单词\n *\n * @param s\n * @param i\n * @return\n */\nprivate boolean dfs(String s, int i) {\n    if (cache.containsKey(i)) return cache.get(i);\n    if (i == s.length()) return true;\n    for (int j = i + 1; j \n方法2:记忆化DFS(使用set)\n\n可以在记忆化上做很多手脚，上面的map是存储的索引的结果，可以是false也可以是true，本方法的set指的是那些返回false的结果\n\n        List wordDict;\n        //存字符s的下标索引，这些索引例如idx, [idx,s.length)这个范围内的单词都不能由wordDict的单词组成\n        Set set = new HashSet<>();\n\n        public boolean wordBreak(String s, List wordDict) {\n            this.wordDict = wordDict;\n            return dfs(s, 0);\n        }\n\n        private boolean dfs(String s, int i) {\n            if (set.contains(i)) return false;\n            if (i == s.length()) return true;\n            for (int j = i + 1; j \n方法3:记忆化DFS(使用array)\n\n类似方法1，采用Boolean[]的方式\n\n        Boolean[] cache;\n        List wordDict;\n\n        public boolean wordBreak(String s, List wordDict) {\n            cache = new Boolean[s.length() + 1];//多放一个位置\n            this.wordDict = wordDict;\n            return dfs(s, 0);\n        }\n\n        /**\n         * 下标索引从i开始到len(s)结束，能否由wordDict字典形成这个单词\n         *\n         * @param s\n         * @param i\n         * @return\n         */\n        private boolean dfs(String s, int i) {\n            if (i == s.length()) return true;\n            if (cache[i] != null) return cache[i];\n            for (int j = i + 1; j \n方法4:记忆化BFS\npublic boolean wordBreak(String s, List wordDict) {\n    //记录当前处理到的索引\n    Queue q = new LinkedList<>();\n    //当前索引idx [idx,s.length())不能由wordDict里的单词形成\n    Set vis = new HashSet<>();\n    q.offer(0);\n    while (!q.isEmpty()) {\n        int i = q.poll();\n        for (int j = i + 1; j \n方法5:DP\n        public boolean wordBreak(String s, List wordDict) {\n            int n = s.length();\n            //f[i]表示以s[i-1]结尾的字符串能否拆分成wordDict\n            boolean[] f = new boolean[n + 1];\n            f[0] = true;\n            for (int i = 1; i \n140. 单词拆分 II\n分析\n\n这一题是139题的进阶题，需要列出所有的组成方案\n\n方法1:回溯（StringBuilder）\n        List res = new ArrayList<>();\n        Set wordSet;\n\n        public List wordBreak(String s, List wordDict) {\n            wordSet = new HashSet<>(wordDict);\n            dfs(s, 0, new StringBuilder());\n            return res;\n        }\n\n        private void dfs(String s, int idx, StringBuilder cur) {\n            int n = s.length();\n            //出口函数\n            if (idx == n) {\n                res.add(cur.toString());\n                return;\n            }\n            for (int i = idx; i \n方法2：记忆化DFS\n        Map> cache = new HashMap<>();\n        List wordDict;\n\n        public List wordBreak(String s, List wordDict) {\n            this.wordDict = wordDict;\n            return dfs(s);\n        }\n\n\n        private List dfs(String s) {\n            if (cache.containsKey(s)) {//如果cache中有s的映射，返回\n                return cache.get(s);\n            }\n            List res = new ArrayList<>();\n            if (s.length() == 0) {//已经到s的末尾，返回\n                res.add(\"\");\n                return res;\n            }\n            for (String word : wordDict) {//遍历wordDict\n                if (s.startsWith(word)) {\n                    List subList = dfs(s.substring(word.length()));//当前的word是一种可能切分，\n                    for (String sub : subList) {//组装word 和sub， 如果是两个单词，隔开\n                        res.add(word + (sub.isEmpty() ? \"\" : \" \") + sub);\n                    }\n                }\n            }\n            cache.put(s, res);//更新cache，避免重复搜索\n            return res;\n        }\n\n方法3：记忆化DFS(剪枝)\n        //记忆化hashmap\n        Map> cache = new HashMap<>();\n        List wordDict;//可以做成HashSet\n        int maxLen = 0;\n\n        public List wordBreak(String s, List wordDict) {\n            this.wordDict = wordDict;\n            for (String word : wordDict) {\n                //最大单词长度，下面的dfs做切分的时候，超过这个单词的长度变得没有意义，一个小的优化点\n                if (word.length() > maxLen) maxLen = word.length();\n            }\n            return dfs(s, 0);\n        }\n\n        /**\n         * @param s\n         * @param start 当前处理到单词的下标索引\n         * @return\n         */\n        private List dfs(String s, int start) {\n            //注意用start索引做key，s做key的时候不可行\n            if (cache.containsKey(start)) return cache.get(start);\n            List res = new ArrayList<>();\n            if (start == s.length()) res.add(\"\");//当前的下标到达s的末尾\n            for (int i = start; i  remainList = dfs(s, i + 1);\n                    for (String remain : remainList) {\n                        //加上当前切分的单词\n                        if (\"\".equals(remain)) res.add(s.substring(start, i + 1));\n                        else res.add(s.substring(start, i + 1) + \" \" + remain);\n                    }\n                }\n            }\n            cache.put(start, res);\n            return res;\n        }\n\n方法4:DP\n        List resList = new ArrayList<>();\n        boolean[] dp;\n        List wordDict;\n\n        public List wordBreak(String s, List wordDict) {\n            int n = s.length();\n            this.wordDict = wordDict;\n            //dp[i] 表示「长度」为 i 的 s 前缀子串可以拆分成 wordDict 中的单词\n            this.dp = new boolean[n + 1];\n            dp[0] = true;\n            for (int i = 1; i ());\n                return resList;\n            }\n            return resList;\n        }\n\n        /**\n         * @param s\n         * @param index     当前处理到s的下标索引\n         * @param levelList\n         */\n        private void dfs(String s, int index, List levelList) {\n            if (index == 0) {//s全部探测完，开始组装leveList\n                StringBuilder sb = new StringBuilder();\n                for (int i = levelList.size() - 1; i >= 0; i--) {\n                    sb.append(levelList.get(i)).append(\" \");\n                }\n                sb.deleteCharAt(sb.length() - 1);\n                resList.add(sb.toString());//收集结果\n                return;\n            }\n            for (int i = 0; i \n131. 分割回文串\n方法1:DFS\nList> res = new ArrayList<>();\n\npublic List> partition(String s) {\n    dfs(s, 0, new ArrayList<>());\n    return res;\n}\n\n\nprivate void dfs(String s, int idx, List sub) {\n    if (idx == s.length()) {\n        res.add(new ArrayList<>(sub));\n        return;\n    }\n    for (int i = idx; i \n方法2:DP预处理+DFS\n        List> res = new ArrayList<>();\n\n        public List> partition(String s) {\n            if (s == null || s.length() == 0) return res;\n            int n = s.length();\n            boolean[][] f = new boolean[n][n];\n            for (int j = 0; j (), f);\n            return res;\n        }\n\n        private void dfs(String s, int idx, List sub, boolean[][] f) {\n            if (idx >= s.length()) {\n                res.add(new ArrayList<>(sub));\n                return;\n            }\n            for (int i = idx; i \n方法3:记忆化DFS\npublic List> partition(String s) {\n    return partition(s, new HashMap<>());\n}\n\nprivate List> partition(String s, Map>> memory) {\n    if (memory.containsKey(s)) return memory.get(s);\n\n    List> result = new ArrayList<>();\n\n    if (s.isEmpty()) result.add(Collections.emptyList());\n\n    for (int i = 0; i  right : partition(s.substring(i + 1), memory)) {\n                List subResult = new ArrayList<>();\n                subResult.add(left);\n                subResult.addAll(right);\n                result.add(subResult);\n            }\n        }\n    }\n\n    memory.put(s, result);\n\n    return memory.get(s);\n}\n\nprivate boolean isPalindrome(String s, int start, int end) {\n    while (start \n12. 整数转罗马数字\n方法1\npublic String intToRoman(int num) {\n    int[] arabic_nums = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};//关键的罗马数字节点\n    String[] romans = {\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"};//对应的罗马数字\n    int i = 0;\n    StringBuilder res = new StringBuilder();\n    while (i = arabic_nums[i]) {//从大到小遍历，贪心判断当前的值是否可以再被缩减\n            num -= arabic_nums[i];\n            res.append(romans[i]);\n        }\n        i++;\n    }\n    return res.toString();\n}\n\n方法2\npublic String intToRoman(int num) {\n    String[][] dict = {//准备 关键节点的 硬编码的罗马数字 ，0 位置为\"\"\n            // 1~9\n            {\n                    \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n            },\n            // 10~90\n            {\n                    \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"\n            },\n            // 100~900\n            {\n                    \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"\n            },\n            // 1000~3000\n            {\n                    \"\", \"M\", \"MM\", \"MMM\"\n            }\n    };\n    StringBuilder res = new StringBuilder();\n    int i = 0;\n    while (num > 0) {\n        int last = num % 10;//每次拿到num的最后面的数，找到后添加\n        res.insert(0, dict[i][last]);\n        num /= 10;//移除最末位\n        i++;\n    }\n    return res.toString();\n}\n\n13. 罗马数字转整数\npublic int romanToInt(String s) {\n    Map map = new HashMap<>();\n    map.put(\"I\", 1);\n    map.put(\"IV\", 4);\n    map.put(\"V\", 5);\n    map.put(\"IX\", 9);\n    map.put(\"X\", 10);\n    map.put(\"XL\", 40);\n    map.put(\"L\", 50);\n    map.put(\"XC\", 90);\n    map.put(\"C\", 100);\n    map.put(\"CD\", 400);\n    map.put(\"D\", 500);\n    map.put(\"CM\", 900);\n    map.put(\"M\", 1000);\n\n    int res = 0;\n    for (int i = 0; i \n273. 整数转换英文表示\nprivate final String[] THOUSAND = {\"\", \"Thousand\", \"Million\", \"Billion\"};\nprivate final String[] LESS_THAN_TWENTY = {\"\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"};\nprivate final String[] HUNDRED = {\"\", \"\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"};\n\npublic String numberToWords(int num) {\n    if (num == 0) return \"Zero\";\n    StringBuilder res = new StringBuilder();\n    int index = 0;\n    while (num > 0) {\n        if (num % 1000 != 0) {\n            StringBuilder sb = new StringBuilder();\n            helper(num % 1000, sb);\n            res.insert(0, sb.append(THOUSAND[index]).append(\" \"));\n        }\n        index++;\n        num /= 1000;\n    }\n    return res.toString().trim();\n}\n\n\nprivate void helper(int num, StringBuilder sb) {\n    if (num == 0) return;\n    if (num \n面试题 16.08. 整数的英语表示\nprivate final String[] THOUSAND = {\"\", \"Thousand\", \"Million\", \"Billion\"};\nprivate final String[] LESS_THAN_TWENTY = {\"\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"};\nprivate final String[] HUNDRED = {\"\", \"\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"};\n\npublic String numberToWords(int num) {\n    if (num == 0) return \"Zero\";\n    StringBuilder res = new StringBuilder();\n    int index = 0;\n    while (num > 0) {\n        if (num % 1000 != 0) {\n            StringBuilder sb = new StringBuilder();\n            helper(num % 1000, sb);\n            res.insert(0, sb.append(THOUSAND[index]).append(\" \"));\n        }\n        index++;\n        num /= 1000;\n    }\n    return res.toString().trim();\n}\n\n\nprivate void helper(int num, StringBuilder sb) {\n    if (num == 0) return;\n    if (num \n2044. 统计按位或能得到最大值的子集数目\n方法1:DFS枚举所有子集统计\n//k:子集或后的值，v:该值出现的次数\nMap map = new HashMap<>();\n\npublic int countMaxOrSubsets(int[] nums) {\n    int maxx = -1;\n    subsets(nums);\n    for (List sub : res) {\n        int t = 0;\n        for (int x : sub) t |= x;//是或「|」 不是异或 「^」\n        maxx = Math.max(maxx, t);\n        map.put(t, map.getOrDefault(t, 0) + 1);\n    }\n    return map.get(maxx);\n}\n\n\nList> res = new ArrayList<>();\n//枚举所有子集\npublic List> subsets(int[] nums) {\n    if (nums == null || nums.length == 0) return res;\n    dfs(new ArrayList<>(), nums, 0);\n    return res;\n}\n\nprivate void dfs(List sub, int[] nums, int idx) {\n    if (idx == nums.length) {\n        res.add(new ArrayList<>(sub));\n        return;\n    }\n    sub.add(nums[idx]);\n    dfs(sub, nums, idx + 1);\n    sub.remove(sub.size() - 1);\n    dfs(sub, nums, idx + 1);\n}\n\n"},"docs/leetcode/classify/graph.html":{"url":"docs/leetcode/classify/graph.html","title":"图论","keywords":"","body":"图论\n搜索与图论之拓扑排序\n2039. 网络空闲的时刻\n\nstatic int V = 100_005;//顶点数量\nstatic int E = V * 2;//边的数量\nstatic int[] head = new int[V];//头节点数组\nstatic int[] edge = new int[E];//按输入顺序存储每条边指向的节点\nstatic int[] next = new int[E];//记录邻接表中当前节点的下一个节点\nint idx = 0;//记录边的序号,边的序号从0开始 不能使用static\nstatic int INF = Integer.MAX_VALUE / 2;\nstatic int[] dist = new int[V];\n\npublic void addEdge(int u, int v) {\n    edge[idx] = v;// 第idx边指向v\n    next[idx] = head[u];//采用头插法 第idx边的下一个节点是上一个时刻的头节点\n    head[u] = idx; // 当前链表头节点更新，指向第idx边\n    idx++;// idx++ 更新边序号\n}\n\npublic int networkBecomesIdle(int[][] edges, int[] patience) {\n    Arrays.fill(head, -1);\n    Arrays.fill(dist, INF);\n    for (int[] e : edges) {\n        addEdge(e[0], e[1]);\n        addEdge(e[1], e[0]);\n    }\n    Deque deque = new ArrayDeque<>();\n    deque.addLast(0);\n    dist[0] = 0;\n    while (!deque.isEmpty()) {\n        int u = deque.pollFirst();\n        for (int i = head[u]; i != -1; i = next[i]) {\n            int v = edge[i];\n            if (dist[v] != INF) continue;\n            dist[v] = dist[u] + 1;\n            deque.addLast(v);\n        }\n    }\n    int res = 0;\n    for (int i = 1; i  res) res = cur;\n    }\n    return res + 1;\n}\n\n"},"docs/leetcode/classify/dynamic_programing.html":{"url":"docs/leetcode/classify/dynamic_programing.html","title":"动态规划","keywords":"","body":"动态规划\n\n\n5. 最长回文子串\n方法1:暴力递归\n\nhelper(String s, int start, int end)\n\n表示s从start到end位置，是否有回文子串\n\n\nbase case:\n\nstart == end : 相等时，说明只有一个字符了，返回T\nstart +1== end  ：两个字符的时候，比较两个字符是否相等\n\n\n\n\n        public String longestPalindrome(String s) {\n            String ans = \"\";\n            for (int i = 0; i  ans.length()) {\n                        ans = s.substring(i, j + 1);\n                    }\n                }\n            }\n            return ans;\n        }\n\n\n        private boolean helper(String s, int start, int end) {\n            if (start == end) return true;\n            if (start + 1 == end) return s.charAt(start) == s.charAt(end);\n            boolean ans = false;\n            if (s.charAt(start) == s.charAt(end)) {\n                ans = helper(s, start + 1, end - 1);\n            }\n            return ans;\n        }\n\n方法2:自顶向下记忆化递归(Top-down)\n\n脱胎与方法1，添加记忆化\n\n  Boolean[][] memo;\n\npublic String longestPalindrome(String s) {\n    memo = new Boolean[s.length()][s.length()];\n    String ans = \"\";\n    for (int i = 0; i  ans.length()) {\n                ans = s.substring(i, j + 1);\n            }\n        }\n    }\n    return ans;\n}\n\n\nprivate boolean helper(String s, int start, int end) {\n    if (start == end) return true;\n    if (start + 1 == end) return s.charAt(start) == s.charAt(end);\n    if (memo[start][end] != null) return memo[start][end];\n    boolean ans = false;\n    if (s.charAt(start) == s.charAt(end)) {\n        ans = helper(s, start + 1, end - 1);\n    }\n    return memo[start][end] = ans;\n}\n\n方法3:自底向上填表递归(Bottom-up)\n\n其中f[i][j]表示s中，从i到j是否有回文子串\nk为遍历的字符长度，可以为n\n\n此时i=0,j=i+k-1=0+n-1=n-1\n\n\n条件为当前字符[i]==[j]的时候，要么只有两个字符，要么砍头去尾，有回文子串\n\n\n        public String longestPalindrome(String s) {\n            if (s == null || s.length() == 0) return \"\";\n            int n = s.length();\n            boolean[][] f = new boolean[n][n];\n            for (int i = 0; i \n另外一种写法\n\nk为遍历的字符长度，可以为n 即当i=0的时候\n\n        public String longestPalindrome(String s) {\n            if (s == null || s.length() = 0; i--) {\n                for (int k = 1; k  maxLen) {\n                        maxLen = j - i + 1;\n                        start = i;\n                    }\n                }\n            }\n            return s.substring(start, start + maxLen);\n        }\n\n另外一种写法\npublic String longestPalindrome(String s) {\n    int n = s.length();\n    //f[j][i] 表示 s[j...i]这个区间的子串是否是回文，true是回文 false不是回文\n    boolean[][] f = new boolean[n][n];\n    int maxx = 0;//最长的回文子串的长度\n    String res = \"\";//结果\n    for (int i = 0; i \n方法4:中心扩展法\npublic String longestPalindrome(String s) {\n    if (s == null || s.length() == 0) {\n        return \"\";\n    }\n    int n = s.length();\n    int start = 0, end = 0;\n    for (int i = 0; i  (end - start)) {\n            start = i - (len - 1) / 2;\n            end = i + len / 2;\n        }\n    }\n    return s.substring(start, end + 1);\n}\n\n\n/**\n         * 由中心往两边扩散，返回满足最大回文的长度\n         *\n         * @param s\n         * @param start\n         * @param end\n         * @return\n         */\nprivate int expandBySeed(String s, int start, int end) {\n    int n = s.length();\n    while (start >= 0 && end \n方法5:Manacher算法\n\n本动态规划的文章着重讲动态规划，涉及马拉车算法的内容不详细展开，下面的代码取自weiwei大佬的题解\n\npublic class Solution {\n\n    public String longestPalindrome(String s) {\n        // 特判\n        int len = s.length();\n        if (len = 0 && right = 0 && right  maxRight) {\n                // maxRight 和 center 需要同时更新\n                maxRight = i + p[i];\n                center = i;\n            }\n            if (p[i] > maxLen) {\n                // 记录最长回文子串的长度和相应它在原始字符串中的起点\n                maxLen = p[i];\n                start = (i - maxLen) / 2;\n            }\n        }\n        return s.substring(start, start + maxLen);\n    }\n\n\n    /**\n     * 创建预处理字符串\n     *\n     * @param s      原始字符串\n     * @param divide 分隔字符\n     * @return 使用分隔字符处理以后得到的字符串\n     */\n    private String addBoundaries(String s, char divide) {\n        int len = s.length();\n        if (len == 0) {\n            return \"\";\n        }\n        if (s.indexOf(divide) != -1) {\n            throw new IllegalArgumentException(\"参数错误，您传递的分割字符，在输入字符串中存在！\");\n        }\n        StringBuilder stringBuilder = new StringBuilder();\n        for (int i = 0; i \n121. 买卖股票的最佳时机\n分析\n\n只能买卖一次\n\n方法1:朴素版DP\n\n股票只能买卖一次\n\ndp[i][0|1]\n\ni表示第i天\n0表示第i天没有股票的状态[无股票]\n1表示第i天持有股票的状态[有股票]\n\n\n规定卖出的时候(sell)获利，+prices[i],买入的时候，暂时算负债(buy)，-prices[i]\ndp[i][0]表示第i天无股票，可能是昨天也没有股票，状态持续到今天，为dp[i-1][0]，也可能是昨天持有股票，但是卖出了(sell)，为dp[i-1][1]+prices[i]\n这时为  dp[i][0] = max{dp[i-1][0],dp[i-1][1]+prices[i]}\n\n\ndp[i][1]表示第i天有股票，可能是昨天就有股票，状态持续到今天，为dp[i-1][1],也可能是昨天没有持有股票，但是买入了(buy), 为dp[i-1][0]-prices[i] ,因为只有一次买入卖出的机会，\ndp[i-1][0]表示i-1天的时候，是无股票的，在i天的时候买入了股票，也就是说要必须在i天之后的某一天卖出股票，所以很显然dp[i-1][0]=0\n这时为dp[i][1] = max{dp[i-1][1],-prices[i]}\n\n\n\n        public int maxProfit(int[] prices) {\n            int n = prices.length;\n            //f[i][0]表示第i天手里没有股票获得的最大利润\n            //f[i][1]表示第i天手里有股票获得的最大利润\n            int[][] f = new int[n][2];\n            f[0][0] = 0;\n            f[0][1] = -prices[0];\n            for (int i = 1; i \n方法2:空间压缩DP\n\n由于值依赖前一天的收益情况（有无股票的状态）,f只需要来回滚动即可，去掉一维\n\n        public int maxProfit(int[] prices) {\n            int n = prices.length;\n            int[] f = new int[2];\n            f[0] = 0;//无股票状态\n            f[1] = -prices[0];//有股票状态\n            for (int i = 1; i \n122. 买卖股票的最佳时机 II\n分析\n\n可以买卖多次\n\n方法1:朴素版DP\n\n\n股票可以多次买卖\n\n        public int maxProfit(int[] prices) {\n            int n = prices.length;\n            //f[i][0]表示第i天手里没有股票获得的最大利润\n            //f[i][0]表示第i天手里有股票获得的最大利润\n            int[][] f = new int[n][2];\n            f[0][0] = 0;\n            f[0][1] = -prices[0];\n            for (int i = 1; i \n方法2:空间压缩DP\n\n去掉一维\n\nint tmp = f_i_0;\nf_i_0 = Math.max(f_i_0, f_i_1 + prices[i]);\nf_i_1 = Math.max(f_i_1, tmp - prices[i]);\n\n\nf_i_0 是昨天无股票f_i_0 或者是昨天持有股票，今天卖出了sell,卖出相当于盈利为f_i_1+prices(i)\n\n这时为 f_i_0 = max(f_i_0, f_i_1 + prices[i])    - `f_i_1`是昨天持有股票`f_i_1`,或者是昨天无股票状态，今天买入了股票`buy`，买入相当于负债，但是需要提前记录下`tmp =f_i_0`,因为上面的转移方程已经改变了`f_i_0`的值\n\n这时为f_i_1 = max(f_i_1, tmp - prices[i])\n\n\n\n    public int maxProfit(int[] prices) {\n        if (prices == null || prices.length == 0) return 0;\n        int n = prices.length;\n        int f_i_0 = 0, f_i_1 = Integer.MIN_VALUE;\n        for (int i = 0; i \n\n另外一种写法\n\n          public int maxProfit(int[] prices) {\n                int n = prices.length;\n                int[] f = new int[2];\n                f[0] = 0;\n                f[1] = -prices[0];\n                for (int i = 1; i \n123. 买卖股票的最佳时机 III\n分析\n\n最多只能买卖两次\n\n方法1:朴素版DP\n    public int maxProfit(int[] prices) {\n        int n = prices.length;\n        int maxK = 2;\n        int[][][] dp = new int[n][maxK + 1][2];\n        dp[0][1][0] = 0;//交易了一次 手里没有股票\n        dp[0][1][1] = -prices[0];//交易了一次 手里有股票\n        dp[0][2][0] = 0;//交易了两次 手里没有股票\n        dp[0][2][1] = -prices[0];//交易了两次 手里有股票\n        for (int i = 1; i \n188. 买卖股票的最佳时机 IV\n分析\n\n基于上一种的最多买卖2次，这里允许2变成一般的次数k，最多买卖k次\n\n方法1:朴素版DP\n\n最多有K笔交易的限制\n\n\n        public int maxProfit(int k, int[] prices) {\n            int n = prices.length;\n            int[][][] f = new int[n + 1][k + 1][2];\n            for (int j = 0; j \n方法2:压缩空间DP\npublic int maxProfit(int k, int[] prices) {\n    int n = prices.length;\n    int[][] f = new int[k + 1][2];\n    for (int j = 0; j \n309. 最佳买卖股票时机含冷冻期\n分析\n\n可以买卖多次，但是卖出有一天冷冻期\n\n方法1:朴素版DP\n\npublic int maxProfit(int[] prices) {\n    int n = prices.length;\n    int[][] f = new int[n + 1][3];\n    int _INF = Integer.MIN_VALUE;\n    f[0][0] = _INF;\n    f[0][1] = _INF;\n    f[0][2] = 0;\n    for (int i = 1; i \n\n        public int maxProfit(int[] prices) {\n            int n = prices.length;\n            int[][] f = new int[n + 1][2];\n            f[0][0] = 0;\n            f[0][1] = Integer.MIN_VALUE;\n            for (int i = 1; i  1 ? f[i - 2][0] : 0) - prices[i - 1]);\n            }\n            return f[n][0];\n        }\n\n714. 买卖股票的最佳时机含手续费\n分析\n\n可以买卖多次，但是每次卖出收取手续费fee\n\n方法1:朴素版DP\n    public int maxProfit(int[] prices, int fee) {\n        if (prices == null || prices.length == 0) return 0;\n        int n = prices.length;\n        //f[i][0]表示第i天手里没有股票，持有的总收益\n        //f[i][1]表示第i天手里有股票，持有的总收益\n        //规定买入（buy）的时候利润为负 即-prices[i]\n        //规定卖出（sell）的时候利润为正，即+prices[i]\n        //卖出（sell）的时候需要扣除手续费，为-fee\n        int[][] f = new int[n][2];\n        f[0][0] = 0;\n        f[0][1] = -prices[0];\n        for(int i =1;i\n\n不过也可以，在处理fee的时候，上面的做法是卖出（sell）的时候，算扣除的手续费-fee，也可以在买入（buy）的时候算利润-fee，有如下代码\n\n       //基于上一种方法，fee`的话相当于在卖入`buy`的时候算负债，或者在卖出`sell`的时候扣除得到的利润\n        //当前方法是在买入（buy）的时候算负债-fee,注意在初始化f[0][1]时的处理，\n        public int maxProfit(int[] prices, int fee) {\n            if (prices == null || prices.length == 0) return 0;\n            int n = prices.length;\n            //f[i][0]表示第i天手里没有股票，持有的总收益\n            //f[i][1]表示第i天手里有股票，持有的总收益\n            //规定买入（buy）的时候利润为负 即-prices[i]\n            //规定卖出（sell）的时候利润为正，即+prices[i]\n            //卖出（sell）的时候需要扣除手续费，为-fee\n            int[][] f = new int[n][2];\n            f[0][0] = 0;\n            f[0][1] = -prices[0] - fee;//买入(buy),股票的价值为prices[i]，需要负债手续费-fee\n            for (int i = 1; i \n方法2:空间压缩DP\n\n基于上面方法的第一段代码，去掉一维，改成如下的形式：\n\n        public int maxProfit(int[] prices, int fee) {\n            if (prices == null || prices.length == 0) return 0;\n            int n = prices.length;\n            //f[0] 是当前无股票状态时 持有的总收益\n            //f[1] 是当前有股票状态时 持有的总收益\n            int[] f = new int[2];\n            f[0] = 0;\n            f[1] = -prices[0];\n            for (int i = 1; i \n\n或者基于变量的方式有下面的改写方式：\n\n        public int maxProfit(int[] prices, int fee) {\n            if (prices == null || prices.length == 0) return 0;\n            int n = prices.length;\n            //f[0] 是当前无股票状态时 持有的总收益\n            //f[1] 是当前有股票状态时 持有的总收益\n            int f_i_0 = 0, f_i_1 = -prices[0];\n            //从 0 开始 1 开始都可以\n            for (int i = 0; i \n53. 最大子数组和\n方法1:DP\npublic int maxSubArray(int[] nums) {\n    int n = nums.length;\n    //f[i] 表：以 nums[i] 结尾的连续子数组的最大和\n    int[] f = new int[n];\n    f[0] = nums[0];\n    int res = f[0];\n    for (int i = 1; i  0) {\n            f[i] = f[i - 1] + nums[i];\n        } else {\n            f[i] = nums[i];\n        }\n        res = Math.max(res, f[i]);\n    }\n    return res;\n}\n\n\n也可以不判断，硬比较\n\npublic int maxSubArray(int[] nums) {\n    int n = nums.length;\n    int[] f = new int[n];\n    f[0] = nums[0];\n    int res = f[0];\n    for (int i = 1; i \nfollow up:返回最大子数组和的起始索引\n        public int maxSubArray(int[] nums) {\n            int n = nums.length;\n            //全局最大子数组和的起始索引\n            int start = 0, end = 0;\n            //局部的最大子数组和的起始索引\n            int subStart = 0, subEnd = 0;\n            //全局最大值和局部最大值\n            int maxx = nums[0], subMaxx = nums[0];\n            for (int i = 1; i  0) {\n                    subMaxx += nums[i];\n                    subEnd++;\n                } else {//之前subMaxx是负数，重新开始\n                    subMaxx = nums[i];\n                    subStart = i;\n                    subEnd = i;\n                }\n                //更新全局的\n                if (subMaxx > maxx) {\n                    maxx = subMaxx;\n                    start = subStart;\n                    end = subEnd;\n                }\n            }\n            System.out.printf(\"%d %d \", start, end);\n            return maxx;\n        }\n\n55. 跳跃游戏\n方法1:记忆化递归\n        //memo[i]表示从索引为i的位置，能否跳跃到最后一个下标\n        Boolean[] memo ;\n        int n ;\n\n        public boolean canJump(int[] nums) {\n            n = nums.length;\n            memo = new Boolean[n];//初始化\n            return helper(nums,0);\n        }\n\n        private boolean helper(int[] nums ,int idx ){\n            //出口，索引idx到达最后一个下标的位置或者超过了最后一个下标\n            if(idx >=n-1) return true;\n            //记忆化剪枝\n            if(memo[idx]!=null) return memo[idx];\n            //step表示可以跳跃的步数 [1,nums[idx]]这个区间范围内\n            for(int step=1;step\n方法2:记忆化递归\n\n用Index的enum来记录某个坐标是否可以到达最末尾的位置，有三类值：\nGOOD:可以跳到末尾位置\nBAD:不可以跳到末尾位置\nUNKNOWN:不知道是否可以跳到末尾位置\n\n\n\n\n一开始的时候都是UNKNOWN状态，最末尾的位置是GOOD状态，因为可以由自己跳到自己的位置\n出口时判断，是否是GOOD状态，计算memo,返回true的时候记录GOOD状态，返回false时记录BAD状态\n\n    Index[] memo;\n\n    public boolean canJump2nd(int[] nums) {\n        memo = new Index[nums.length];\n        for (int i = 0; i \n方法3:贪心\npublic boolean canJump4th(int[] nums) {\n    int n = nums.length;\n    //最后一个位置\n    int lastPos = n - 1;\n    //倒数第二个位置开始\n    for (int i = n - 2; i >= 0; i--) {\n        //如果当前的位置能跳跃到上一个位置lastPos，更新上一个位置lastPos\n        if (i + nums[i] >= lastPos) {\n            lastPos = i;\n        }\n    }\n    //是否到开头了\n    return lastPos == 0;\n}\n\n45. 跳跃游戏 II\n方法1:记忆化递归\nint N;\nInteger[] memo;//返回当前位置索引curr跳到最后位置的最小步数\n\npublic int jump(int[] nums) {\n    N = nums.length;\n    memo = new Integer[N];\n    return helper(nums, 0);\n}\n\n/**\n * 返回当前位置索引curr跳到最后位置的最小步数\n *\n * @param nums 数组\n * @param curr 当前所处的位置\n * @return\n */\npublic int helper(int[] nums, int curr) {\n    //当curr跳到末尾或者跳过末尾的时候，递归结束\n    if (curr >= N - 1) return 0;\n    if (memo[curr] != null) return memo[curr];\n    int ans = Integer.MAX_VALUE / 2;\n    //对于当前的curr索引，最多可以跳nums[curr]步，最少我们从1开始起跳，0没有意义，出去了\n    for (int i = 1; i \n方法2:DP\n        public int jump(int[] nums) {\n            int N = nums.length, INF = Integer.MAX_VALUE / 2;\n            int[] f = new int[N];\n            //初始化\n            f[0] = 0;\n            for (int i = 1; i = i) f[i] = Math.min(f[i], f[j] + 1);\n                }\n            }\n            return f[N - 1];\n        }\n\n1306. 跳跃游戏 III\n方法1:记忆化递归\n\n准备一个函数：dfs(int[] arr, int curPos, boolean[] visited)\n其中curPos表示当前访问的位置\nvisited表示当前的curPos位置有无被访问过\n\n\n出口条件：\n当前curPos越界了，也就是不在[0,len-1]范围内时，返回false\n当前curPos的访问过，返回false\n当arr[curPos]==0时，表示找到了，返回true\n\n\n探索左边和右边位置\n\npublic boolean canReach(int[] arr, int start) {\n    boolean[] visited = new boolean[arr.length];\n    return dfs(arr, start, visited);\n}\n\nprivate boolean dfs(int[] arr, int curPos, boolean[] visited) {\n    if (curPos = arr.length || visited[curPos]) return false;\n    if (arr[curPos] == 0) return true;\n    visited[curPos] = true;\n    return dfs(arr, curPos - arr[curPos], visited) || dfs(arr, curPos + arr[curPos], visited);\n}\n\n方法2:BFS\n\n准备一个bool类型的数组visited表示当前的下标有无被访问过\n准备一个queue，转这个queue\n取到这一轮的总的size大小，进行for loop\n弹出当前的curPos,如果arr[curPos]== 0说明找到了，返回true\n分别渠道左右两边去找，curPos的位置不越界并且leftPos和rightPos未被访问过\n访问后要设置下visited的属性，并且将位置放置于queue中\n\n\n\npublic boolean canReach(int[] arr, int start) {\n    LinkedList queue = new LinkedList<>();\n    int n = arr.length;\n    boolean[] visited = new boolean[n];\n    queue.add(start);\n    while (!queue.isEmpty()) {\n        int size = queue.size();\n        for (int i = 0; i = 0 && !visited[leftPos]) {\n                visited[leftPos] = true;\n                queue.addFirst(leftPos);\n            }\n            int rightPos = curPos + curValue;\n            if (rightPos \n416. 分割等和子集\n方法1：朴素版DP\n\ndp[N][T+1],其中N是子集数组的大小，T是目标和，多放一个，从0开始的\n\ndp[i][j]表示在子集数组的区间范围内[0...i]之间选择若干个数，可以组成j\n\n当j=0的时候，dp[i][0]为true，当不选任何子集数组的数的时候，可以形成一直方案\n当i=0的时候，dp[0][j] 指的是当选第0个数的时候，能否等于j，显然在nums[0]=j的时候满足这种条件，其他都为false\n\n\n一般情况，dp[i][j]对于，第i个数，有这两种情况:\n当j>=nums[i]的时候，说明j还可以拆解,可以选或者不选i这个数，只要有一种方案是true即可\n不选：dp[i][j]= dp[i-1][j]\n选:dp[i][j]=dp[i-1][j-nums[i]]\n\n\n当j的时候，说明j不可以拆解，我们肯定选不到i这个数了，也就是dp[i][j]=dp[i-1][j] \n\n\n\n总结就是：\n\n\ndp[N-1][T]即答案\n\n        public boolean canPartition(int[] nums) {\n            int N = nums.length;\n            int sum = 0;\n            for (int i : nums) sum += i;\n            if (sum % 2 == 1) return false;\n            int T = sum / 2;\n            boolean[][] dp = new boolean[N][T + 1];\n            for (int i = 0; i = nums[i]) dp[i][j] = dp[i - 1][j] || dp[i - 1][j - nums[i]];\n                }\n            }\n//            PrintUtils.printMatrix(dp);\n            return dp[N - 1][T];\n        }\n\n\n打印\n\n[1,5,11,5]\n       0    1    2    3    4    5    6    7    8    9   10   11\n0(1)   T    T    F    F    F    F    F    F    F    F    F    F \n1(5)   T    T    F    F    F    T    T    F    F    F    F    F \n2(11)  T    T    F    F    F    T    T    F    F    F    F    T \n3(5)   T    T    F    F    F    T    T    F    F    F    T    T\n\ndp[3][11]往上走到dp[2][11] 这一行用掉11 得到11-11 =0 结束\ndp[3][11]往左走到dp[3][6],这一行用掉5 得11-5 = 6 dp[3][6]一直往上走到dp[1][6]减去这一行的5  得到 6 -5 =1  到dp[1][1] 一直往上走到dp[0][1]  减去这一行的1 1-1 =0 结束  5 5 1 是形成11的一个组合\n方法2：空间压缩O(1)DP\n        public boolean canPartition(int[] nums) {\n            int N = nums.length;\n            int sum = 0;\n            for (int i : nums) sum += i;\n            if (sum % 2 == 1) return false;\n            int T = sum / 2;\n            boolean[] dp = new boolean[T + 1];\n            dp[0] = true;\n            for (int num : nums) {\n/*                for (int j = T; j >= 0; j--) {\n                    if (j >= num) dp[j] = dp[j] || dp[j - num];\n                }*/\n                for (int j = T; j >= num; j--) {\n                    dp[j] = dp[j] || dp[j - num];\n                }\n\n            }\n//            PrintUtils.printMatrix(dp);\n            return dp[T];\n        }\n\n关于倒序的遍历的问题：参考这篇：背包问题之 01 背包问题（科普文，基础，背包九讲）\n509. 斐波那契数\n方法1:暴力递归\n\n经典的种子题\n\n    public int fib(int n) {\n        if(n==0) return 0;\n        if(n==1) return 1;\n        return fib(n-1)+fib(n-2);\n    }\n\n方法2:自顶向下记忆化递归(Top-down)\nInteger[] memo;\npublic int fib(int n) {\n    memo = new Integer[n+1];\n    return recursive(n);\n}   \nprivate int recursive(int num){\n    if(memo[num]!=null) return memo[num];\n    if(num==0) return 0;\n    if(num==1) return 1;\n    return memo[num] = ( fib(num-1)+fib(num-2));\n}\n\n方法3:自底向上填表DP(Bottom-up)\npublic int fib(int n) {\n    if(n\n"},"docs/leetcode/classify/game_problem.html":{"url":"docs/leetcode/classify/game_problem.html","title":"博弈问题","keywords":"","body":"博弈问题\n\n\n2038. 如果相邻两个颜色均相同则删除当前颜色\n\n\n1.Alice和Bob均不可以在两段拿走A或者B，需要判断是否在字符串中出现了连续的AAA或者BBB这样的字符的时候，拿走一个A或者B，分别统计拿走的次数分别记为a和b，返回a>b即可\n\npublic boolean winnerOfGame(String colors) {\n    int n = colors.length();\n    char[] ch = colors.toCharArray();\n    int a = 0, b = 0;\n    for (int i = 1; i  b;\n}\n\n"},"docs/leetcode/classify/bit.html":{"url":"docs/leetcode/classify/bit.html","title":"位运算","keywords":"","body":"\n\n汉明距离\n面试题 01.01. 判定字符是否唯一\n方法1:数组\npublic boolean isUnique(String astr) {\n    char[] ch = new char[26];\n    for (char c : astr.toCharArray()) {\n        if (ch[c - 'a'] != 0) return false;\n        ch[c - 'a']++;\n    }\n    return true;\n}\n\n方法2:位运算\n\n        public boolean isUnique(String astr) {\n            int mark = 0;\n            for (char ch : astr.toCharArray()) {\n                //拿到每个字符的移动的位数 [0-25]开始\n                int bit = ch - 'a';\n                //如果这一位被对冲掉，返回false\n                if ((mark & (1 \n\n延伸阅读：位运算操作常见技巧\n\n693. 交替位二进制数\n方法1:基本位运算\npublic boolean hasAlternatingBits(int n) {\n    int t = -1;//初始值\n    while (n > 0) {\n        //拿到最右边的一位\n        int bit = n & 1;\n        //如果当前的bit位于上一位t是相同的，则返回false\n        //异或（ ^ ）每一位进行比较，相同为0，不同为1\n        if ((t ^ bit) == 0) return false;\n        //当前位bit 赋值给上一位 t\n        t = bit;\n        //右移一位\n        n >>= 1;\n    }\n    return true;\n}\n\n方法2:高阶位运算\n \npublic boolean hasAlternatingBits(int n) {\n    n = n ^ (n >> 1);\n    return (n & n + 1) == 0;\n}\n\n方法3:库函数\npublic boolean hasAlternatingBits(int n) {\n      //调用库函数\n    char[] bits = Integer.toBinaryString(n).toCharArray();\n    for (int i = 0; i \n"},"docs/leetcode/classify/math.html":{"url":"docs/leetcode/classify/math.html","title":"数学","keywords":"","body":"数学\n\n\n728. 自除数\n方法1:模拟\njava\n"},"docs/leetcode/classify/sweep_line.html":{"url":"docs/leetcode/classify/sweep_line.html","title":"扫描线","keywords":"","body":"扫描线\n>\n218. 天际线问题\n"},"docs/leetcode/swordoffer/swordoffer.html":{"url":"docs/leetcode/swordoffer/swordoffer.html","title":"剑指Offer(leetcode)","keywords":"","body":"剑指Offer\n剑指 Offer 11. 旋转数组的最小数字\n方法1.二分\npublic int minArray(int[] nums) {\n    int n = nums.length;\n    int l = 0, r = n - 1;\n    while (l  nums[r]) l = mid + 1;\n        else r--;\n    }\n    return nums[l];\n}\n\n剑指 Offer 40. 最小的k个数\n方法1:优先队列\npublic int[] getLeastNumbers(int[] arr, int k) {\n    PriorityQueue pq = new PriorityQueue<>((a, b) -> b - a);\n    for (int x : arr) {\n        pq.offer(x);\n        if (!pq.isEmpty() && (pq.size() > k)) {\n            pq.poll();\n        }\n    }\n    int[] res = new int[k];\n    for (int i = 0; i \n方法2:排序\n剑指 Offer 40. 最小的 k 个数（基于快速排序的数组划分，清晰图解）\n剑指 Offer 51. 数组中的逆序对\npublic int reversePairs(int[] arr) {\n    if (arr == null || arr.length \n剑指 Offer 62. 圆圈中最后剩下的数字 LCOF\n扩展\n\n\n使用链表的方式模拟删除的操作\n\n        public static void main(String[] args) {\n            _2nd handler = new _2nd();\n            ListNode head = ListNodeIOUtils.transform(\"[0,1,2,3,4]\");\n            ListNode tail = head.next.next.next.next;\n            tail.next = head;\n            int m = 3;\n            handler.delNodeInCircle(head, m);\n\n        }\n\n\n        private int delNodeInCircle(ListNode head, int m) {\n            int idx = 0;//计数索引\n            //如果只剩下一个节点，因为节点是环状的，所以自己指向自己即可退出\n            while (head.next != head) {\n                if (idx == m - 2) {//m表示个数 idx是索引，差2个\n                    head.next = head.next.next;//删除要删除的节点\n                    idx = 0;\n                } else {\n                    idx++;//计数\n                }\n                //跳到下一个节点\n                head = head.next;\n            }\n\n            return head.val;\n        }\n\n\n如果每次旋转的圈数很大，可以mod掉\n\n        private int delNodeInCircle(ListNode head, int m, int size) {\n            int idx = 0;//计数索引\n            //如果只剩下一个节点，因为节点是环状的，所以自己指向自己即可退出\n            while (head.next != head) {\n                if (idx == (m - 2) % size) {//m表示个数 idx是索引，差2个\n                    head.next = head.next.next;//删除要删除的节点\n                    idx = 0;\n                    size--;\n                } else {\n                    idx++;//计数\n                }\n                //跳到下一个节点\n                head = head.next;\n            }\n            return head.val;\n        }\n\n\n按递推公式来处理\n\npublic int lastRemaining(int n, int m) {\n    List list = new ArrayList<>();\n    for (int i = 0; i  1) {\n        idx = (idx + m - 1) % list.size();\n        list.remove(idx);\n    }\n    return list.get(0);\n}\n\n"},"docs/swordoffer/structure.html":{"url":"docs/swordoffer/structure.html","title":"数据结构","keywords":"","body":"01.数据结构\n链表\nJZ6 从尾到头打印链表\n\n方法1.遍历\n分析\n\n简单的遍历，收集每个节点的val，然后对结果翻转，返回\n\n代码\n        public ArrayList printListFromTailToHead(ListNode node) {\n            ArrayList res = new ArrayList<>();\n            //当前节点只要不是null，就一直在循环里绕\n            while (node != null) {\n                //添加结果\n                res.add(node.val);\n                //遍历完当前节点后，将当前节点滑动到下一个节点\n                node = node.next;\n            }\n            //翻转结果\n            Collections.reverse(res);\n            return res;\n        }\n\n方法2.递归\n分析\n\n采用递归的方式，不断进入下一个节点，当到达最后一个节点指向null时，开始返回\n出口条件：当节点是null的时候\n\n\n代码\n  ArrayList res = new ArrayList<>();\n\n        public ArrayList printListFromTailToHead(ListNode node) {\n            dfs(node);\n            return res;\n        }\n        private void dfs(ListNode node) {\n            if (node == null) return;\n            //进入下一层\n            dfs(node.next);\n            //收集节点\n            res.add(node.val);\n        }\n\nJZ25 合并两个排序的链表\n\n方法1：递归\n    public ListNode Merge(ListNode list1,ListNode list2) {\n         if (list1 == null || list2 == null) return list1 == null ? list2 : list1;\n            if (list1.val > list2.val) {\n                list2.next = Merge(list1, list2.next);\n                return list2;\n            } else {\n                list1.next = Merge(list1.next, list2);\n                return list1;\n            }\n    }\n\n方法2：迭代\n    public ListNode Merge(ListNode l1,ListNode l2) {\n             if (l1 == null || l2 == null) {\n                return l1 == null ? l2 : l1;\n            }\n            ListNode head = new ListNode(0);\n            ListNode node = head;\n            while (l1 != null && l2 != null) {\n                if (l1.val \nJZ18 删除链表的节点\n\n方法1:迭代\n        public ListNode deleteNode(ListNode head, int val) {\n            ListNode dummy = new ListNode(-1);\n            dummy.next = head;\n            ListNode prev = dummy, cur = head;\n            //遍历获取当前节点和当前节点的前一个节点\n            while (cur != null) {\n                if (cur.val == val) break;\n                prev = prev.next;\n                cur = cur.next;\n            }\n            //删除cur节点\n            prev.next = prev.next.next;\n            return dummy.next;\n        }\n\nJZ23 链表中环的入口结点\n\n方法1:快慢指针\n\n        public ListNode EntryNodeOfLoop(ListNode pHead) {\n            ListNode slow = pHead, fast = pHead;\n            boolean f = false;//标志位\n            while (fast.next != null && fast.next.next != null) {\n                //f的标志位要是true的时候，并且slow==fast\n                //初始时，slow和fast是相等的，如果没有标志位会提前退出\n                if (slow == fast && f) break;\n                slow = slow.next;\n                fast = fast.next.next;\n                f = true;//设置标志位\n            }\n            //如果slow和fast不是同一个节点 或者 slow和fast相同，但是是初始时的slow = pHead, fast = pHead\n            if (slow != fast || !f) return null;\n            slow = pHead;//slow回到起点，slow和fast步调一致，第一个相遇的点就是环形链表入口\n            while (slow != fast) {\n                slow = slow.next;\n                fast = fast.next;\n            }\n            return slow;\n        }\n\n也可以有如下的解法：\n\n        public ListNode EntryNodeOfLoop(ListNode pHead) {\n            if (pHead == null || pHead.next == null) return null;\n            //开始时 slow和fast错开一个位置\n            ListNode slow = pHead, fast = pHead.next;\n            while (fast.next != null && fast.next.next != null) {\n                if (slow == fast) break;\n                slow = slow.next;\n                fast = fast.next.next;\n            }\n            //如果这时候不是第一次相遇，而fast已经到链表的末尾了，说明没有环\n            if (slow != fast) return null;\n            //头节点开始，且\n            ListNode cur = pHead;\n            while (cur != slow.next) {\n                cur = cur.next;\n                slow = slow.next;\n            }\n            return cur;\n        }\n    }\n\n树\nJZ77 按之字形顺序打印二叉树\n方法1.\n        public ArrayList> Print(TreeNode pRoot) {\n            ArrayList> res = new ArrayList<>();\n            if (pRoot == null) return res;\n            Queue q = new LinkedList<>();\n            q.offer(pRoot);\n            int level = 0;\n            while (!q.isEmpty()) {\n                int size = q.size();\n                ArrayList sub = new ArrayList<>();\n                for (int i = 0; i (sub));\n                level++;\n            }\n            return res;\n        }\n\nJZ82 二叉树中和为某一值的路径(一)\n\n方法1:DFS\n        public boolean hasPathSum(TreeNode root, int sum) {\n            if (root == null) return false;\n            return dfs(root, sum);\n        }\n\n        private boolean dfs(TreeNode root, int sum) {\n            //当前节点是叶子节点，开始比较val是否相等\n            if (root.left == null && root.right == null && root.val == sum) return true;\n            boolean res = false;\n            //只要左右子树有一个是true即可\n            if (root.left != null) res = res || dfs(root.left, sum - root.val);\n            if (root.right != null) res = res || dfs(root.right, sum - root.val);\n            return res;\n        }\n\n方法2:递归\npublic boolean hasPathSum(TreeNode root, int sum) {\n    if (root == null) return false;\n    //当前的节点是叶子节点，比较剩下的sum值是否相等\n    if (root.left == null && root.right == null) return root.val == sum;\n    //左右两棵子树只要一个符合即可\n    return hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);\n}\n\n方法3:BFS\n public boolean hasPathSum4th(TreeNode root, int sum) {\n        if (root == null) return false;\n        LinkedList nodeQueue = new LinkedList<>();\n        LinkedList numQueue = new LinkedList<>();\n        nodeQueue.offer(root);\n        numQueue.offer(root.val);\n        while (!nodeQueue.isEmpty()) {\n            TreeNode curNode = nodeQueue.pop();\n            Integer curNum = numQueue.pop();\n            if (curNode.left == null && curNode.right == null && curNum == sum) return true;\n            if (curNode.left != null) {\n                nodeQueue.offer(curNode.left);\n                numQueue.offer(curNum + curNode.left.val);\n            }\n            if (curNode.right != null) {\n                nodeQueue.offer(curNode.right);\n                numQueue.offer(curNum + curNode.right.val);\n            }\n        }\n        return false;\n    }\n\nJZ34 二叉树中和为某一值的路径(二)\n\n方法1:回溯-递减\n        ArrayList> res = new ArrayList<>();\n\n        public ArrayList> FindPath(TreeNode root, int targetSum) {\n            dfs(root, targetSum, new ArrayList<>());\n            return res;\n        }\n\n        private void dfs(TreeNode root, int sum, ArrayList sub) {\n            if (root == null) {\n                return;\n            }\n            sub.add(root.val);\n            if (root.left == null && root.right == null && sum == root.val) res.add(new ArrayList<>(sub));\n            dfs(root.left, sum - root.val, sub);\n            dfs(root.right, sum - root.val, sub);\n            sub.remove(sub.size() - 1);\n        }\n\n方法2:回溯-累加\n   ArrayList>  res = new ArrayList<>();\n\n        public ArrayList> FindPath(TreeNode root, int sum) {\n            if (root == null) return res;\n            dfs(root,sum,0,new ArrayList<>());\n            return res;\n        }\n\n        private void dfs(TreeNode root, int sum, int total, ArrayList sub) {\n            if (root == null) return;\n            sub.add(root.val);\n            total += root.val;\n            if (root.left == null && root.right == null) {\n                if (sum == total) {\n                    res.add(new ArrayList<>(sub));\n                }\n                //这一步是为了移除这个叶子节点的值，不管这个叶子节点是否满足条件\n                sub.remove(sub.size() - 1);\n                return;\n            }\n            dfs(root.left, sum, total, sub);\n            dfs(root.right, sum, total, sub);\n            sub.remove(sub.size() - 1);\n        }\n\nJZ84 二叉树中和为某一值的路径(三)\n\n\n        Map map = new HashMap<>();\n\n    public int FindPath(TreeNode root, int sum) {\n        map.put(0, 1);\n        return helper(root, sum, 0);\n    }\n\n    private int helper(TreeNode root, int sum, int pathSum) {\n        int res = 0;\n        if (root == null) return res;\n        pathSum += root.val;//路径和加上当前节点的值\n        //路径和-目标sum的值 的节点，这个节点是多少个，在此基础上累加\n        res += map.getOrDefault(pathSum - sum, 0);\n        //将从根节点到当前节点，有多少的路径和等于pathSum存入map\n        map.put(pathSum, map.getOrDefault(pathSum, 0) + 1);\n        //探索左右子树\n        res += helper(root.left, sum, pathSum) + helper(root.right, sum, pathSum);\n        //回溯过程需要将map的数量-1\n        map.put(pathSum, map.get(pathSum) - 1);\n        return res;\n    }\n\nJZ68 二叉搜索树的最近公共祖先\n\n        public int lowestCommonAncestor(TreeNode root, int o1, int o2) {\n            TreeNode res = helper(root, o1, o2);\n            return res.val;\n        }\n\n        public TreeNode helper(TreeNode root, int p, int q) {\n            if (root == null || root.val == p || root.val == q) return root;\n            TreeNode left = helper(root.left, p, q);\n            TreeNode right = helper(root.right, p, q);\n            if (left != null && right != null) return root;\n            if (left != null) return left;\n            if (right != null) return right;\n            return null;\n        }\n\nJZ86 在二叉树中找到两个节点的最近公共祖先\n\n思路：\n1.left和right都为空，说明root的左右子树中都不包含p和q节点，返回null即可\n2.left不为空，right为空，说明p和q不在右子树中（因为右子树为空了），这时，返回left，这里面有下面的两种情况：\n\np和q都在left即左子树上，而root节点恰好指向了p或者q\np和q都在left即左子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点\n\n3.right不为空，left为空，说明p和q不在左子树中（因为左子树为空了），这时，返回right，这里面有下面的两种情况：\n\np和q都在right即右子树上，而root节点恰好指向了p或者q\np和q都在right即右子树上，而root节点未指向了p或者q，指向的是最近公共祖先节点\n\n4.left不为空，并且right不为空，说明p和q分布在root节点的左右子树的两侧，这时root为p和q的最近公共祖先节点，返回\n\n\n\n        public int lowestCommonAncestor(TreeNode root, int o1, int o2) {\n            TreeNode res = helper(root, o1, o2);\n            return res.val;\n        }\n\n        public TreeNode helper(TreeNode root, int p, int q) {\n            if (root == null || root.val == p || root.val == q) return root;\n            TreeNode left = helper(root.left, p, q);\n            TreeNode right = helper(root.right, p, q);\n            if (left != null && right != null) return root;\n            if (left != null) return left;\n            if (right != null) return right;\n            return null;\n        }\n\n"},"docs/swordoffer/dynamic_programing.html":{"url":"docs/swordoffer/dynamic_programing.html","title":"动态规划","keywords":"","body":"02.算法\n动态规划\nJZ42连续子数组的最大和\n\n方法1.动态规划\n        public int FindGreatestSumOfSubArray(int[] array) {\n            if (array == null || array.length == 0) return 0;\n            int n = array.length;\n            //f[i]表示以array[i-1]这个数为结尾的，连续子数组的最大和\n            int[] f = new int[n + 1];\n            int res = -101;\n            for (int i = 1; i \nJZ85 连续子数组的最大和(二)\n\n方法1:朴素版DP\n        public int[] FindGreatestSumOfSubArray(int[] arr) {\n            if (arr == null || arr.length == 0) return new int[]{};\n            int n = arr.length;\n            //f[i]表示以arr[i]这个数为结尾的，连续子数组的最大和\n            int[] f = new int[n];\n            f[0] = arr[0];\n            int maxSum = f[0];\n            int l = 0, r = 0;//当前的滑窗\n            int resl = 0, resr = 0;//结果集滑窗\n            for (int i = 1; i  maxSum || (f[i] == maxSum && (resr - resl + 1) \n方法2：空间压缩DP\n   public int[] FindGreatestSumOfSubArray(int[] arr) {\n            if (arr == null || arr.length == 0) return new int[]{};\n            int n = arr.length;\n            int prev = arr[0], cur = 0;\n            int maxSum = prev;\n            int l = 0, r = 0;//当前的滑窗\n            int resl = 0, resr = 0;//结果集滑窗\n            for (int i = 1; i  maxSum || (cur == maxSum && (resr - resl + 1) \nJZ63 买卖股票的最好时机(一)\n\n方法2:空间压缩DP\n        //空间压缩DP\n        public int maxProfit(int[] prices) {\n            if (prices == null || prices.length == 0) return 0;\n            //f_0是当天手里无股票， f_1是当天手里有股票\n            int f_0 = 0, f_1 = -prices[0];\n            int n = prices.length;\n            for (int i = 0; i \n"},"docs/articles/data_structures/matrix/图解翻转矩阵问题.html":{"url":"docs/articles/data_structures/matrix/图解翻转矩阵问题.html","title":"图解翻转矩阵问题","keywords":"","body":"\nmatrix\n\n0.如何将一张图翻转90度\n\n给定一张图片，如何将它旋转 90 度？ \n可以将图视为可以存储在缓冲区中的二维矩阵。 提供了矩阵维度和它的地址。 怎么转呢？\n\n\n下面的是个例子\n\n* * * ^ * * *\n* * * | * * *\n* * * | * * *   \n* * * | * * *\n\n顺时针翻转90度后，变成：\n* * * *\n* * * *\n* * * *\n-- - - >\n* * * *\n* * * *\n* * * *\n\n想法很简单，将源矩阵的每一行转换为最终图的所需列，将使用辅助缓冲区来转换图。\n从上图我们可以观察到\n源图的第一行 -> 目标图的最后一列\n源图的第二行 -> 目标图的倒数第二列\n...\n源图的最后一行 -> 目标图的第一列\n\n\n如图：可以将m✖️n的矩阵转化为n✖️m矩阵，逻辑如下：\nprivate void rotate(int m, int n, int[][] source, int[][] dest) {\n    for (int r = 0; r \n代码\nstatic class _1st {\n\n\n    public static void main(String[] args) {\n        _1st handler = new _1st();\n        int[][] source = {{1, 2, 3, 4},\n                {5, 6, 7, 8},\n                {9, 10, 11, 12}};\n        int m = source.length, n = source[0].length;\n        handler.display(source, m, n);\n        int[][] dest = new int[n][m];\n        handler.rotate(m, n, source, dest);\n        handler.display(dest, n, m);\n    }\n\n\n    /**\n     * @param m      source的 row\n     * @param n      source的 col\n     * @param source 源矩阵\n     * @param dest   目标矩阵\n     */\n    private void rotate(int m, int n, int[][] source, int[][] dest) {\n        for (int r = 0; r \n输出\n1     2    3      4    \n5     6    7     8    \n9    10    11    12    \n-------------------  \n9      5     1    \n10    6  2    \n11    7     3    \n12    8     4\n\n1.如何原地将矩阵旋转90度\n比如说需要将下面的矩阵逆时针旋转90度\ncase 1:\nMatrix:\n 1  2  3\n 4  5  6\n 7  8  9\nOutput:\n 3  6  9 \n 2  5  8 \n 1  4  7 \ncase 2:\nInput:\n 1  2  3  4 \n 5  6  7  8 \n 9 10 11 12 \n13 14 15 16 \nOutput:\n 4  8 12 16 \n 3  7 11 15 \n 2  6 10 14 \n 1  5  9 13\n\n\n在第一部分已经讨论过，如果利用多余的空间翻转矩阵了，本部分讨论下如何原地空间复杂度的方式翻转矩阵\n\n思路\n要在没有多余空间的情况下解决问题，将数组旋转为正方形，将矩阵划分为正方形或环。\n 例如，一个 4✖️4 的矩阵将有 2 个环。\n\n第一个环由它的第一行、最后一列、最后一行和第一列组成。 \n第二个环由第二行、倒数第二列、倒数第二行和第二列组成。 \n\n这个想法是对于每个方形循环，以逆时针方向交换与矩阵中相应单元格相关的元素，即从上到左、从左到下、从下到右和从右到上一次，只使用一个临时变量来实现这一点。\n图解结果如下：\n\n算法\n\n1.在N边的矩阵中有N/2个正方形或环。一次处理一个正方形，运行一个环，一次遍历矩阵一个环，即从 0 循环到 N/2 – 1，循环计数器为 i。\n2.考虑当前正方形中的 4 个元素组，一次旋转 4 个元素。 因此，一个循环中此类组的数量为N – 2*i。\n3.所以在从 x 到 N - x - 1 的每个循环中运行一个环，循环计数器为 y。\n4.当前组中的元素是 (x, y), (y, N-1-x), (N-1-x, N-1-y), (N-1-y, x)，现在旋转这4个元素，即(x, y) \n\n\n代码\nstatic class _2nd {\n    public static void main(String[] args) {\n        _2nd handler = new _2nd();\n        int[][] matrix = {\n                {1, 2, 3, 4},\n                {5, 6, 7, 8},\n                {9, 10, 11, 12},\n                {13, 14, 15, 16}\n        };\n        int N = matrix.length;\n        handler.display(matrix, N);\n        handler.rotateMatrix(matrix, N);\n        handler.display(matrix, N);\n    }\n\n\n    private void rotateMatrix(int[][] matrix, int N) {\n        //考虑每一个环\n        for (int x = 0; x \n输出\n1     2    3     4    \n5     6    7     8    \n9     10    11 12    \n13 14    15 16    \n-------------\n4    8    12 16    \n3    7    11 15    \n2    6    10 14    \n1    5    9     13\n\n复杂度分析\n\n时间复杂度：O(n*n) 其中n是矩阵的长度\n空间复杂度: O(1)，没有使用到额外的空间，只是一个变量\n\n不过还有另外一种思路：\n\n1.翻转每一行\n2.执行转置\n\n2.再论如何原地将矩阵旋转90度\n\n上面已经讨论了如何进行原地的矩阵翻转了，下面再给出另外一种思路\n\n\n主要的思路是：将矩阵的转置，然后反转转置矩阵的列。\n算法\n\n1.为了解决给定的问题，有两个任务。 第一个是找到转置，第二个是在不使用额外空间的情况下反转列。\n2.矩阵的转置是当矩阵翻转其对角线时，即元素的行索引变为列索引，反之亦然。 因此，要找到转置，将位置 (i, j) 处的元素与 (j, i) 互换。执行两个循环，外循环从 0 到行数，内循环从 0 到外循环的索引。\n3.要反转转置矩阵的列，请运行两个嵌套循环，外循环从 0 到列数，内循环从 0 到行数/2，将 (i, j) 处的元素与 (i, row[count-1 -j])对调，其中 i 和 j 分别是内循环和外循环的索引。\n\n代码\nstatic class _3rd {\n    public static void main(String[] args) {\n        _3rd handler = new _3rd();\n        int[][] matrix = {{1, 2, 3, 4},\n                {5, 6, 7, 8},\n                {9, 10, 11, 12},\n                {13, 14, 15, 16}};\n        handler.display(matrix);\n        handler.rotate(matrix);\n        handler.display(matrix);\n    }\n\n\n    private void rotate(int[][] matrix) {\n        transpose(matrix);\n        reverseColumns(matrix);\n    }\n\n\n    //按矩阵的的列翻转\n    private void reverseColumns(int[][] matrix) {\n        for (int i = 0; i  [k,i]\n                matrix[j][i] = matrix[k][i];\n                matrix[k][i] = t;\n            }\n        }\n    }\n\n\n    //转置\n    private void transpose(int[][] matrix) {\n        for (int r = 0; r \n输出\n1    2    3    4    \n5    6    7    8    \n9    10    11    12    \n13    14    15    16    \n-----------------\n4    8    12    16    \n3    7    11    15    \n2    6    10    14    \n1    5    9    13\n\n复杂度分析\n\n时间复杂度：O(R*C) 其中R和C是矩阵的行列\n空间复杂度: O(1)，没有使用到额外的空间\n\n3.如何原地将矩阵旋转180度\n\n上面的两部分解决了如何旋转90度的问题，那么180度怎么处理？\n\n例子:\nInput :  1  2  3\n         4  5  6\n         7  8  9\nOutput : 9 8 7 \n         6 5 4 \n         3 2 1\n\nInput :  1 2 3 4 \n         5 6 7 8 \n         9 0 1 2 \n         3 4 5 6 \nOutput : 6 5 4 3 \n         2 1 0 9 \n         8 7 6 5 \n         4 3 2 1\n\n方法1（仅打印旋转矩阵）\n\n\n从上图中，可以简单地将矩阵旋转180度，以相反的方式打印给定的矩阵。\n\n代码\nstatic class _4th {\n    public static void main(String[] args) {\n        _4th handler = new _4th();\n        int[][] matrix = {{1, 2, 3, 4},\n                {5, 6, 7, 8},\n                {9, 10, 11, 12},\n                {13, 14, 15, 16}};\n        handler.rotateMatrix(matrix);\n    }\n\n\n    private void rotateMatrix(int[][] matrix) {\n        int N = matrix.length;\n        for (int i = N - 1; i >= 0; i--) {\n            for (int j = N - 1; j >= 0; j--) {\n                System.out.printf(\"%d \", matrix[i][j]);\n            }\n            System.out.println();\n        }\n    }\n}\n\n输出\n16 15 14 13 \n12 11 10 9 \n8 7 6 5 \n4 3 2 1\n\n复杂度分析\n\n时间复杂度：O(N*N) 其中N是矩阵的行列\n空间复杂度: O(1)，没有使用到额外的空间\n\n方法2：原地翻转(转置翻转列两次)\n算法\n\n1.查找矩阵的转置。\n2.反转转置的列。\n3.找到矩阵的转置。\n4.转置的反转列\n\n\nstatic class _5th {\n    public static void main(String[] args) {\n        _5th handler = new _5th();\n        int[][] matrix = {{1, 2, 3, 4},\n                {5, 6, 7, 8},\n                {9, 10, 11, 12},\n                {13, 14, 15, 16}};\n        handler.display(matrix);\n        handler.rotate(matrix);\n        handler.display(matrix);\n    }\n\n\n    private void rotate(int[][] matrix) {\n        transpose(matrix);\n        reverseColumns(matrix);\n        transpose(matrix);\n        reverseColumns(matrix);\n    }\n\n\n    //按矩阵的的列翻转\n    private void reverseColumns(int[][] matrix) {\n        for (int i = 0; i  [k,i]\n                matrix[j][i] = matrix[k][i];\n                matrix[k][i] = t;\n            }\n        }\n    }\n\n\n    //转置\n    private void transpose(int[][] matrix) {\n        for (int r = 0; r \n输出\n1    2    3    4    \n5    6    7    8    \n9    10    11    12    \n13    14    15    16    \n-----------------\n16    15    14    13    \n12    11    10    9    \n8    7    6    5    \n4    3    2    1\n\n复杂度分析\n\n时间复杂度：O(R*C) 其中R和C是矩阵的行列\n空间复杂度: O(1)，没有使用到额外的空间\n\n方法3：位置交换\n\n上面的方式其实是将矩阵翻转90度做了两次，其实有更好的方法\n\n\nstatic class _6th {\n    public static void main(String[] args) {\n        _6th handler = new _6th();\n        int[][] matrix = {{1, 2, 3, 4},\n                {5, 6, 7, 8},\n                {9, 10, 11, 12},\n                {13, 14, 15, 16}};\n        handler.display(matrix);\n        handler.rotateMatrix(matrix);\n        handler.display(matrix);\n        matrix = new int[][]{\n                {1, 2, 3, 4, 5},\n                {6, 7, 8, 9, 10},\n                {11, 12, 13, 14, 15},\n                {16, 17, 18, 19, 20},\n                {21, 22, 23, 24, 25}\n        };\n        handler.display(matrix);\n        handler.rotateMatrix(matrix);\n        handler.display(matrix);\n\n    }\n\n    private void display(int[][] matrix) {\n        for (int r = 0; r \n输出\n1    2    3    4    \n5    6    7    8    \n9    10    11    12    \n13    14    15    16    \n-----------------\n16    15    14    13    \n12    11    10    9    \n8    7    6    5    \n4    3    2    1    \n-----------------\n1    2    3    4    5    \n6    7    8    9    10    \n11    12    13    14    15    \n16    17    18    19    20    \n21    22    23    24    25\n-----------------    \n25    24    23    22    21    \n20    19    18    17    16    \n15    14    13    12    11    \n10    9    8    7    6    \n5    4    3    2    1\n\n4.将矩阵的每个环逆时针旋转 K 个元素\n\n给定一个 M*N 阶矩阵和一个值 K，将矩阵的每个环逆时针旋转 K 个元素。 如果任何环中的元素小于等于 K，则不要旋转它。\n\nInput : k = 3\n        mat[4][4] = {{1, 2, 3, 4},\n                    {5, 6, 7, 8},\n                    {9, 10, 11, 12},\n                    {13, 14, 15, 16}}\nOutput: 4 8  12 16\n        3 10  6 15\n        2 11  7 14\n        1  5  9 13\n\nInput : k = 2\n        mat[3][4] = {{1, 2, 3, 4},\n                    {10, 11, 12, 5},\n                    {9, 8, 7, 6}}\nOutput: 3 4  5  6\n        2 11 12 7\n        1 10  9 8\n\n思路\n想法是以螺旋形式遍历矩阵， 这是解决这个问题的算法：\n\n1.创建一个大小为 M*N 的辅助数组 temp[]。\n2.以螺旋形式开始遍历矩阵并将当前环的元素存储在 temp[] 数组中。 在将元素存储在 temp 中时，跟踪当前环的开始和结束位置。\n3.对于存储在 temp[] 中的每个环，旋转该子数组 temp[]\n4.对矩阵的每个环重复此过程。\n5.在最后一次遍历矩阵中再次螺旋并将 temp[] 数组的元素复制到矩阵。\n\n有了上面的这些铺垫，可以来解决几道题目：\n48. 旋转图像\n\n题目要求的是原地旋转，顺时针旋转\n\n参考1.如何原地将矩阵旋转90度，挪动下调换的坐标即可\n\n        public void rotate(int[][] matrix) {\n            //考虑每一个环\n            int R = matrix.length, C = matrix[0].length;\n            for (int x = 0; x \n也可以参考2.再论如何原地将矩阵旋转90度，在做第二步翻转的时候，将行翻转变成列翻转\n\npublic void rotate(int[][] matrix) {\n    transpose(matrix);\n    reverseColumns(matrix);\n}\n\n//按矩阵的的列翻转 翻转的是第一列和最后一列 第二列和倒数第二列 如此...\nprivate void reverseColumns(int[][] matrix) {\n    for (int i = 0; i  [i,k]\n            matrix[i][j] = matrix[i][k];\n            matrix[i][k] = t;\n        }\n    }\n}\n\n\n//转置\nprivate void transpose(int[][] matrix) {\n    for (int r = 0; r \n面试题 01.07. 旋转矩阵\n\n这一题等同于48题\n\n867. 转置矩阵\n\n这一题只需要用到转置的那段代码即可,但是这一题m*n的矩阵，m和n可能不相同，所以用到额外空间，简单模拟即可\n\n    public int[][] transpose(int[][] matrix) {\n        int R = matrix.length,C= matrix[0].length;\n        int[][] res = new int[C][R];\n        for(int i =0;i\n"},"docs/articles/algorithm/backtracing/图解回溯算法.html":{"url":"docs/articles/algorithm/backtracing/图解回溯算法.html","title":"图解回溯算法","keywords":"","body":"\nbacktracing\n\n\n1.骑士巡回问题\n回溯是一种算法范例，尝试不同的解决方案，直到找到一个「有效」的解决方案。通常使用回溯解决的问题具有以下共同特性。这些问题只能通过尝试每种可能的配置来解决，并且每种配置只尝试一次。对于这些问题，一个简单的解决方案是尝试所有配置，并输出符合给定问题约束的配置。回溯是一种渐进式的工作方式，是对原始解决方案的优化，所有可能的配置都会生成并尝试。\n例如，考虑以下骑士巡回问题\n描述\n给出一个N✖️N的棋盘，骑士被放在一块空棋盘的第一块上。按照象棋的规则，骑士的移动必须准确地访问每个方块一次。打印每个单元格的访问顺序。\n例子\nInput : \nN = 8\nOutput:\n0  59  38  33  30  17   8  63\n37  34  31  60   9  62  29  16\n58   1  36  39  32  27  18   7\n35  48  41  26  61  10  15  28\n42  57   2  49  40  23   6  19\n47  50  45  54  25  20  11  14\n56  43  52   3  22  13  24   5\n51  46  55  44  53   4  21  12\n\n在一个8✖️8的棋盘上，骑士所走的点如下:\n\n"},"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html":{"url":"docs/articles/data_structures/matrix/二维矩阵的常见转换技巧.html","title":"二维矩阵的常见转换技巧","keywords":"","body":"二维矩阵的常见转换技巧\n技巧1：二维矩阵按索引拍平到一维数组\n\n如下图所示，每一个二维矩阵对应的，按第1行到第m行依次排列所得到的一维数组的坐标，可以互相转换\n\n如第2行第3列的16这个数，其矩阵的坐标是(1,2),而映射到一维数组的时候，其对应的下标索引idx=6\nidx=6=i*n+j=1*4+2=6\n而如何通过idx=6反向得到矩阵的坐标呢？\ni=idx/n=6/4 =1\nj=idx%n=6%4 =2\n得到矩阵的坐标为(i,j) ==>(1,2)\n\n\n技巧2：将矩阵当成二进制转化成十进制\n\n背景知识\n\n\n对于十进制整数 x，我们可以用x & 1 得到 x 的二进制表示的最低位，它等价于x % 2 ：\n\n例如当x = 3 时，x 的二进制表示为 11，x & 1的值为 1；\n\n例如当 x = 6 时，x 的二进制表示为 110，x & 1 的值为0。\n\n\n\n对于十进制整数 x，我们可以用x & (1  来判断 x 二进制表示的第 k位（最低位为第0 位）是否为 1。如果该表达式的值大于零，那么第k 位为 1：\n\n例如当 x = 3 时，x 的二进制表示为 11，x & (1  = 11 & 10 =10 >0，说明第 1 位为 1；\n例如当 x = 5 时，x 的二进制表示为 101，x & (1 = 101 & 10 = 0，说明第 1 位不为 1。\n\n\n\n\n举例\n\n给定一个矩阵：\n[[0, 0, 1],\n[1, 0, 0],\n[0, 1, 1]]\n\n该矩阵如果按每行依次排开的话，可以转换成一维矩阵\n[0, 0, 1, 1, 0, 0, 0, 1, 1]\n\n将上述的一维矩阵看成一个二进制的数是：\n001100011\n\n对应的十进制是99\n\n 怎么转化\n\n\n一个矩阵转化成二进制数再转化成十进制数：\n\n        /**\n         * \n         * @param matrix 二维矩阵\n         * @param R 矩阵的行数\n         * @param C 矩阵的列数\n         * @return\n         */\n        private int encode(int[][] matrix, int R, int C) {\n            int x = 0;\n            for (int r = 0; r \n\n一个十进制的数如何转化为二进制的矩阵：\n\n        /**\n         * @param x 源数\n         * @param R 矩阵的行数\n         * @param C 矩阵的列数\n         * @return\n         */\n        private int[][] decode(int x, int R, int C) {\n            int[][] matrix = new int[R][C];\n            for (int r = R - 1; r >= 0; r--) {\n                for (int c = C - 1; c >= 0; c--) {\n                    matrix[r][c] = x & 1;\n                    x >>= 1;\n                }\n            }\n            return matrix;\n        }\n\nReference\n\n转化为全零矩阵的最少反转次数\n\n"}}}